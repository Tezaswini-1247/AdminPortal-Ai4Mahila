{"version":3,"file":"ConfigureTheView-Cgi8i8vB.mjs","sources":["../../admin/src/pages/App/ConfigureTheView/components/Settings.tsx","../../admin/src/pages/App/ConfigureTheView/state/actionTypes.ts","../../admin/src/pages/App/ConfigureTheView/state/actions.ts","../../admin/src/pages/App/ConfigureTheView/state/init.ts","../../admin/src/pages/App/ConfigureTheView/state/reducer.ts","../../admin/src/pages/App/ConfigureTheView/ConfigureTheView.tsx"],"sourcesContent":["import { Box, Grid, SingleSelectOption, SingleSelect, Field } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { pageSizes, sortOptions } from '../../../../constants';\r\nimport { getTrad } from '../../../../utils';\r\n\r\nimport type { Configuration } from '../../../../../../shared/contracts/configuration';\r\n\r\ninterface SettingsProps {\r\n  sort: string;\r\n  pageSize: string | number;\r\n  onChange: ({\r\n    target: { name, value },\r\n  }: {\r\n    target: { name: keyof Configuration; value: string | number };\r\n  }) => void;\r\n}\r\n\r\nconst Settings = ({ sort = '', pageSize = 10, onChange }: SettingsProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Box\r\n      background=\"neutral0\"\r\n      hasRadius\r\n      shadow=\"tableShadow\"\r\n      paddingTop={6}\r\n      paddingBottom={6}\r\n      paddingLeft={7}\r\n      paddingRight={7}\r\n    >\r\n      <Grid.Root gap={4}>\r\n        <Grid.Item s={12} col={6} direction=\"column\" alignItems=\"stretch\">\r\n          <Field.Root\r\n            hint={formatMessage({\r\n              id: getTrad('config.entries.note'),\r\n              defaultMessage: 'Number of assets displayed by default in the Media Library',\r\n            })}\r\n            name=\"pageSize\"\r\n          >\r\n            <Field.Label>\r\n              {formatMessage({\r\n                id: getTrad('config.entries.title'),\r\n                defaultMessage: 'Entries per page',\r\n              })}\r\n            </Field.Label>\r\n            <SingleSelect\r\n              onChange={(value) => onChange({ target: { name: 'pageSize', value } })}\r\n              value={pageSize}\r\n            >\r\n              {pageSizes.map((pageSize) => (\r\n                <SingleSelectOption key={pageSize} value={pageSize}>\r\n                  {pageSize}\r\n                </SingleSelectOption>\r\n              ))}\r\n            </SingleSelect>\r\n            <Field.Hint />\r\n          </Field.Root>\r\n        </Grid.Item>\r\n        <Grid.Item s={12} col={6} direction=\"column\" alignItems=\"stretch\">\r\n          <Field.Root\r\n            hint={formatMessage({\r\n              id: getTrad('config.note'),\r\n              defaultMessage: 'Note: You can override this value in the media library.',\r\n            })}\r\n            name=\"sort\"\r\n          >\r\n            <Field.Label>\r\n              {formatMessage({\r\n                id: getTrad('config.sort.title'),\r\n                defaultMessage: 'Default sort order',\r\n              })}\r\n            </Field.Label>\r\n            <SingleSelect\r\n              onChange={(value) => onChange({ target: { name: 'sort', value } })}\r\n              value={sort}\r\n              test-sort={sort}\r\n              data-testid=\"sort-select\"\r\n            >\r\n              {sortOptions.map((filter) => (\r\n                <SingleSelectOption\r\n                  data-testid={`sort-option-${filter.value}`}\r\n                  key={filter.key}\r\n                  value={filter.value}\r\n                >\r\n                  {formatMessage({ id: getTrad(filter.key), defaultMessage: `${filter.value}` })}\r\n                </SingleSelectOption>\r\n              ))}\r\n            </SingleSelect>\r\n            <Field.Hint />\r\n          </Field.Root>\r\n        </Grid.Item>\r\n      </Grid.Root>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport { Settings };\r\n","import { pluginId } from '../../../../pluginId';\r\n\r\nexport const ON_CHANGE = `${pluginId}/ON_CHANGE`;\r\nexport const SET_LOADED = `${pluginId}/SET_LOADED`;\r\n","import { ON_CHANGE, SET_LOADED } from './actionTypes';\r\n\r\nimport type { InitialState } from './init';\r\n\r\nexport const onChange = ({\r\n  name,\r\n  value,\r\n}: {\r\n  name: keyof NonNullable<InitialState['initialData']>;\r\n  value: number | string;\r\n}) => ({\r\n  type: ON_CHANGE,\r\n  keys: name,\r\n  value,\r\n});\r\n\r\nexport const setLoaded = () => ({\r\n  type: SET_LOADED,\r\n});\r\n","import type { Configuration } from '../../../../../../shared/contracts/configuration';\r\n\r\nexport type InitialState = {\r\n  initialData: Partial<Configuration>;\r\n  modifiedData: Partial<Configuration>;\r\n};\r\n\r\nconst initialState: InitialState = {\r\n  initialData: {},\r\n  modifiedData: {},\r\n};\r\n\r\nconst init = (configData: InitialState['initialData']): InitialState => {\r\n  return {\r\n    ...initialState,\r\n    initialData: configData,\r\n    modifiedData: configData,\r\n  };\r\n};\r\nexport { init, initialState };\r\n","import { produce } from 'immer'; // current\r\nimport get from 'lodash/get';\r\nimport set from 'lodash/set';\r\n\r\nimport { ON_CHANGE, SET_LOADED } from './actionTypes';\r\nimport { init, initialState } from './init';\r\n\r\nimport type { InitialState } from './init';\r\n\r\nexport interface ActionOnChange {\r\n  type: string;\r\n  keys?: string;\r\n  value: string | number;\r\n}\r\n\r\nexport interface ActionSetLoaded {\r\n  type: string;\r\n}\r\n\r\ninterface ActionInitialValue {\r\n  type: string;\r\n}\r\n\r\nexport type Action = ActionSetLoaded | ActionOnChange | ActionInitialValue;\r\n\r\nexport const reducer = (\r\n  state: InitialState = initialState,\r\n  action: Action = {\r\n    type: '',\r\n  }\r\n) =>\r\n  // eslint-disable-next-line consistent-return\r\n  produce(state, (draftState) => {\r\n    switch (action.type) {\r\n      case ON_CHANGE: {\r\n        if ('keys' in action && 'value' in action && action.keys) {\r\n          set(draftState, ['modifiedData', ...action.keys.split('.')], action.value);\r\n        }\r\n        break;\r\n      }\r\n      case SET_LOADED: {\r\n        // This action re-initialises the state using the current modifiedData.\r\n        const reInitialise = init(get(draftState, ['modifiedData'], {}));\r\n        draftState.initialData = reInitialise.initialData;\r\n        draftState.modifiedData = reInitialise.modifiedData;\r\n        break;\r\n      }\r\n      default:\r\n        return draftState;\r\n    }\r\n  });\r\n","// TODO: find a better naming convention for the file that was an index file before\r\nimport * as React from 'react';\r\n\r\nimport {\r\n  ConfirmDialog,\r\n  useTracking,\r\n  useNotification,\r\n  Page,\r\n  Layouts,\r\n} from '@strapi/admin/strapi-admin';\r\nimport { Button, Dialog, Link } from '@strapi/design-system';\r\nimport { ArrowLeft, Check } from '@strapi/icons';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { useIntl } from 'react-intl';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useConfig } from '../../../hooks/useConfig';\r\nimport { pluginId } from '../../../pluginId';\r\nimport { getTrad } from '../../../utils';\r\n\r\nimport { Settings } from './components/Settings';\r\nimport { onChange, setLoaded } from './state/actions';\r\nimport { init, initialState } from './state/init';\r\nimport { reducer } from './state/reducer';\r\n\r\nimport type { InitialState } from './state/init';\r\nimport type { Action } from './state/reducer';\r\nimport type { Configuration } from '../../../../../shared/contracts/configuration';\r\n\r\ninterface ConfigureTheViewProps {\r\n  config: Configuration;\r\n}\r\n\r\nexport const ConfigureTheView = ({ config }: ConfigureTheViewProps) => {\r\n  const { trackUsage } = useTracking();\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const { mutateConfig } = useConfig();\r\n  const { isLoading: isSubmittingForm } = mutateConfig;\r\n\r\n  const [showWarningSubmit, setWarningSubmit] = React.useState(false);\r\n  const toggleWarningSubmit = () => setWarningSubmit((prevState) => !prevState);\r\n\r\n  const [reducerState, dispatch] = React.useReducer(\r\n    reducer,\r\n    initialState,\r\n    (): InitialState => init(config)\r\n  );\r\n  const typedDispatch: React.Dispatch<Action> = dispatch;\r\n  const { initialData, modifiedData } = reducerState;\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    toggleWarningSubmit();\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    trackUsage('willEditMediaLibraryConfig');\r\n    await mutateConfig.mutateAsync(modifiedData as Configuration);\r\n    setWarningSubmit(false);\r\n    typedDispatch(setLoaded());\r\n    toggleNotification({\r\n      type: 'success',\r\n      message: formatMessage({\r\n        id: 'notification.form.success.fields',\r\n        defaultMessage: 'Changes saved',\r\n      }),\r\n    });\r\n  };\r\n\r\n  const handleChange = ({\r\n    target: { name, value },\r\n  }: {\r\n    target: { name: keyof Configuration; value: string | number };\r\n  }) => {\r\n    typedDispatch(onChange({ name, value }));\r\n  };\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Page.Main aria-busy={isSubmittingForm}>\r\n        <form onSubmit={handleSubmit}>\r\n          <Layouts.Header\r\n            navigationAction={\r\n              <Link\r\n                tag={NavLink}\r\n                startIcon={<ArrowLeft />}\r\n                to={`/plugins/${pluginId}`}\r\n                id=\"go-back\"\r\n              >\r\n                {formatMessage({ id: getTrad('config.back'), defaultMessage: 'Back' })}\r\n              </Link>\r\n            }\r\n            primaryAction={\r\n              <Button\r\n                size=\"S\"\r\n                startIcon={<Check />}\r\n                disabled={isEqual(modifiedData, initialData)}\r\n                type=\"submit\"\r\n              >\r\n                {formatMessage({ id: 'global.save', defaultMessage: 'Save' })}\r\n              </Button>\r\n            }\r\n            subtitle={formatMessage({\r\n              id: getTrad('config.subtitle'),\r\n              defaultMessage: 'Define the view settings of the media library.',\r\n            })}\r\n            title={formatMessage({\r\n              id: getTrad('config.title'),\r\n              defaultMessage: 'Configure the view - Media Library',\r\n            })}\r\n          />\r\n          <Layouts.Content>\r\n            <Settings\r\n              data-testid=\"settings\"\r\n              pageSize={modifiedData.pageSize || ''}\r\n              sort={modifiedData.sort || ''}\r\n              onChange={handleChange}\r\n            />\r\n          </Layouts.Content>\r\n          x\r\n          <Dialog.Root open={showWarningSubmit} onOpenChange={toggleWarningSubmit}>\r\n            <ConfirmDialog onConfirm={handleConfirm} variant=\"default\">\r\n              {formatMessage({\r\n                id: getTrad('config.popUpWarning.warning.updateAllSettings'),\r\n                defaultMessage: 'This will modify all your settings',\r\n              })}\r\n            </ConfirmDialog>\r\n          </Dialog.Root>\r\n        </form>\r\n      </Page.Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n"],"names":["onChange","pageSize"],"mappings":"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"}