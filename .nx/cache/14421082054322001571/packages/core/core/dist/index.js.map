{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import * as qs from 'qs';\r\nimport type { Core } from '@strapi/types';\r\n\r\nimport Strapi, { type StrapiOptions } from './Strapi';\r\nimport { destroyOnSignal, resolveWorkingDirectories, createUpdateNotifier } from './utils';\r\n\r\nexport { default as compileStrapi } from './compile';\r\nexport * as factories from './factories';\r\n\r\nexport const createStrapi = (options: Partial<StrapiOptions> = {}): Core.Strapi => {\r\n  const strapi = new Strapi({\r\n    ...options,\r\n    ...resolveWorkingDirectories(options),\r\n  });\r\n\r\n  destroyOnSignal(strapi);\r\n  createUpdateNotifier(strapi);\r\n\r\n  // TODO: deprecate and remove in next major\r\n  global.strapi = strapi;\r\n\r\n  return strapi;\r\n};\r\n\r\n// Augment Koa query type based on Strapi query middleware\r\n\r\ndeclare module 'koa' {\r\n  type ParsedQuery = ReturnType<typeof qs.parse>;\r\n\r\n  export interface BaseRequest {\r\n    _querycache?: ParsedQuery;\r\n\r\n    get query(): ParsedQuery;\r\n    set query(obj: any);\r\n  }\r\n\r\n  export interface BaseContext {\r\n    _querycache?: ParsedQuery;\r\n\r\n    get query(): ParsedQuery;\r\n    set query(obj: any);\r\n  }\r\n}\r\n"],"names":["resolveWorkingDirectories","destroyOnSignal","createUpdateNotifier"],"mappings":";;;;;;;;;;;;;;;;;AASO,MAAM,eAAe,CAAC,UAAkC,OAAoB;AAC3E,QAAA,SAAS,IAAI,OAAO;AAAA,IACxB,GAAG;AAAA,IACH,GAAGA,6CAA0B,OAAO;AAAA,EAAA,CACrC;AAEDC,UAAAA,gBAAgB,MAAM;AACtBC,QAAAA,qBAAqB,MAAM;AAG3B,SAAO,SAAS;AAET,SAAA;AACT;;;;"}