{"version":3,"file":"api.js","sources":["../../../src/services/server/api.ts"],"sourcesContent":["import Router from '@koa/router';\r\nimport type { Core } from '@strapi/types';\r\n\r\nimport { createRouteManager } from './routing';\r\n\r\ninterface Options {\r\n  prefix?: string;\r\n  type?: string;\r\n}\r\n\r\nconst createAPI = (strapi: Core.Strapi, opts: Options = {}) => {\r\n  const { prefix, type } = opts;\r\n\r\n  const api = new Router({ prefix });\r\n\r\n  const routeManager = createRouteManager(strapi, { type });\r\n\r\n  return {\r\n    listRoutes() {\r\n      return [...api.stack];\r\n    },\r\n\r\n    use(fn: Router.Middleware) {\r\n      api.use(fn);\r\n      return this;\r\n    },\r\n\r\n    routes(routes: Core.Router | Core.Route[]) {\r\n      routeManager.addRoutes(routes, api);\r\n      return this;\r\n    },\r\n\r\n    mount(router: Router) {\r\n      router.use(api.routes(), api.allowedMethods());\r\n      return this;\r\n    },\r\n  };\r\n};\r\n\r\nexport { createAPI };\r\n"],"names":["Router","createRouteManager"],"mappings":";;;;;;AAUA,MAAM,YAAY,CAAC,QAAqB,OAAgB,OAAO;AACvD,QAAA,EAAE,QAAQ,KAAA,IAAS;AAEzB,QAAM,MAAM,IAAIA,wBAAO,EAAE,QAAQ;AAEjC,QAAM,eAAeC,QAAA,mBAAmB,QAAQ,EAAE,MAAM;AAEjD,SAAA;AAAA,IACL,aAAa;AACJ,aAAA,CAAC,GAAG,IAAI,KAAK;AAAA,IACtB;AAAA,IAEA,IAAI,IAAuB;AACzB,UAAI,IAAI,EAAE;AACH,aAAA;AAAA,IACT;AAAA,IAEA,OAAO,QAAoC;AAC5B,mBAAA,UAAU,QAAQ,GAAG;AAC3B,aAAA;AAAA,IACT;AAAA,IAEA,MAAM,QAAgB;AACpB,aAAO,IAAI,IAAI,OAAA,GAAU,IAAI,gBAAgB;AACtC,aAAA;AAAA,IAAA;AAAA,EAEX;AACF;;"}