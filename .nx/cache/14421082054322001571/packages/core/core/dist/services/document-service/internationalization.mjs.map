{"version":3,"file":"internationalization.mjs","sources":["../../../src/services/document-service/internationalization.ts"],"sourcesContent":["import type { Struct, Modules } from '@strapi/types';\r\nimport { errors } from '@strapi/utils';\r\nimport { curry, assoc } from 'lodash/fp';\r\n\r\ntype Transform = (\r\n  contentType: Struct.SingleTypeSchema | Struct.CollectionTypeSchema,\r\n  params: Modules.Documents.Params.All\r\n) => Modules.Documents.Params.All;\r\n\r\ntype AsyncTransform = (\r\n  contentType: Struct.SingleTypeSchema | Struct.CollectionTypeSchema,\r\n  params: Modules.Documents.Params.All\r\n) => Promise<Modules.Documents.Params.All>;\r\n\r\nconst getDefaultLocale = async (): Promise<string> => {\r\n  return strapi.plugin('i18n').service('locales').getDefaultLocale();\r\n};\r\n\r\nconst defaultLocale: AsyncTransform = async (contentType, params) => {\r\n  if (!strapi.plugin('i18n').service('content-types').isLocalizedContentType(contentType)) {\r\n    return params;\r\n  }\r\n\r\n  if (!params.locale) {\r\n    return assoc('locale', await getDefaultLocale(), params);\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\n/**\r\n * Add locale lookup query to the params\r\n */\r\nconst localeToLookup: Transform = (contentType, params) => {\r\n  if (\r\n    !params.locale ||\r\n    !strapi.plugin('i18n').service('content-types').isLocalizedContentType(contentType)\r\n  ) {\r\n    return params;\r\n  }\r\n\r\n  if (typeof params.locale !== 'string') {\r\n    // localeToLookup accepts locales of '*'. This is because the document\r\n    // service functions that use this transform work with the '*' locale\r\n    // to return all locales.\r\n    throw new errors.ValidationError(\r\n      `Invalid locale param ${String(params.locale)} provided. Document locales must be strings.`\r\n    );\r\n  }\r\n\r\n  return assoc(['lookup', 'locale'], params.locale, params);\r\n};\r\n\r\n/**\r\n * Add locale lookup query to the params\r\n */\r\nconst multiLocaleToLookup: Transform = (contentType, params) => {\r\n  if (!strapi.plugin('i18n').service('content-types').isLocalizedContentType(contentType)) {\r\n    return params;\r\n  }\r\n\r\n  if (params.locale) {\r\n    if (params.locale === '*') {\r\n      return params;\r\n    }\r\n\r\n    return assoc(['lookup', 'locale'], params.locale, params);\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\n/**\r\n * Translate locale status parameter into the data that will be saved\r\n */\r\nconst localeToData: Transform = (contentType, params) => {\r\n  if (!strapi.plugin('i18n').service('content-types').isLocalizedContentType(contentType)) {\r\n    return params;\r\n  }\r\n\r\n  if (params.locale) {\r\n    const isValidLocale = typeof params.locale === 'string' && params.locale !== '*';\r\n    if (isValidLocale) {\r\n      return assoc(['data', 'locale'], params.locale, params);\r\n    }\r\n\r\n    throw new errors.ValidationError(\r\n      `Invalid locale param ${params.locale} provided. Document locales must be strings.`\r\n    );\r\n  }\r\n\r\n  return params;\r\n};\r\n\r\nconst defaultLocaleCurry = curry(defaultLocale);\r\nconst localeToLookupCurry = curry(localeToLookup);\r\nconst multiLocaleToLookupCurry = curry(multiLocaleToLookup);\r\nconst localeToDataCurry = curry(localeToData);\r\n\r\nexport {\r\n  defaultLocaleCurry as defaultLocale,\r\n  localeToLookupCurry as localeToLookup,\r\n  localeToDataCurry as localeToData,\r\n  multiLocaleToLookupCurry as multiLocaleToLookup,\r\n};\r\n"],"names":[],"mappings":";;AAcA,MAAM,mBAAmB,YAA6B;AACpD,SAAO,OAAO,OAAO,MAAM,EAAE,QAAQ,SAAS,EAAE,iBAAiB;AACnE;AAEA,MAAM,gBAAgC,OAAO,aAAa,WAAW;AAC/D,MAAA,CAAC,OAAO,OAAO,MAAM,EAAE,QAAQ,eAAe,EAAE,uBAAuB,WAAW,GAAG;AAChF,WAAA;AAAA,EAAA;AAGL,MAAA,CAAC,OAAO,QAAQ;AAClB,WAAO,MAAM,UAAU,MAAM,iBAAA,GAAoB,MAAM;AAAA,EAAA;AAGlD,SAAA;AACT;AAKA,MAAM,iBAA4B,CAAC,aAAa,WAAW;AACzD,MACE,CAAC,OAAO,UACR,CAAC,OAAO,OAAO,MAAM,EAAE,QAAQ,eAAe,EAAE,uBAAuB,WAAW,GAClF;AACO,WAAA;AAAA,EAAA;AAGL,MAAA,OAAO,OAAO,WAAW,UAAU;AAIrC,UAAM,IAAI,OAAO;AAAA,MACf,wBAAwB,OAAO,OAAO,MAAM,CAAC;AAAA,IAC/C;AAAA,EAAA;AAGF,SAAO,MAAM,CAAC,UAAU,QAAQ,GAAG,OAAO,QAAQ,MAAM;AAC1D;AAKA,MAAM,sBAAiC,CAAC,aAAa,WAAW;AAC1D,MAAA,CAAC,OAAO,OAAO,MAAM,EAAE,QAAQ,eAAe,EAAE,uBAAuB,WAAW,GAAG;AAChF,WAAA;AAAA,EAAA;AAGT,MAAI,OAAO,QAAQ;AACb,QAAA,OAAO,WAAW,KAAK;AAClB,aAAA;AAAA,IAAA;AAGT,WAAO,MAAM,CAAC,UAAU,QAAQ,GAAG,OAAO,QAAQ,MAAM;AAAA,EAAA;AAGnD,SAAA;AACT;AAKA,MAAM,eAA0B,CAAC,aAAa,WAAW;AACnD,MAAA,CAAC,OAAO,OAAO,MAAM,EAAE,QAAQ,eAAe,EAAE,uBAAuB,WAAW,GAAG;AAChF,WAAA;AAAA,EAAA;AAGT,MAAI,OAAO,QAAQ;AACjB,UAAM,gBAAgB,OAAO,OAAO,WAAW,YAAY,OAAO,WAAW;AAC7E,QAAI,eAAe;AACjB,aAAO,MAAM,CAAC,QAAQ,QAAQ,GAAG,OAAO,QAAQ,MAAM;AAAA,IAAA;AAGxD,UAAM,IAAI,OAAO;AAAA,MACf,wBAAwB,OAAO,MAAM;AAAA,IACvC;AAAA,EAAA;AAGK,SAAA;AACT;AAEM,MAAA,qBAAqB,MAAM,aAAa;AACxC,MAAA,sBAAsB,MAAM,cAAc;AAC1C,MAAA,2BAA2B,MAAM,mBAAmB;AACpD,MAAA,oBAAoB,MAAM,YAAY;"}