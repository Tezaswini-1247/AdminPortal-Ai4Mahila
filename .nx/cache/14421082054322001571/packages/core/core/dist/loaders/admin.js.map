{"version":3,"file":"admin.js","sources":["../../src/loaders/admin.ts"],"sourcesContent":["import _ from 'lodash';\r\nimport type { Core, Struct } from '@strapi/types';\r\nimport { getGlobalId } from '../domain/content-type';\r\n\r\nexport default async function loadAdmin(strapi: Core.Strapi) {\r\n  // strapi.admin = require('@strapi/admin/strapi-server');\r\n\r\n  strapi.get('services').add(`admin::`, strapi.admin?.services);\r\n  strapi.get('controllers').add(`admin::`, strapi.admin?.controllers);\r\n  strapi.get('content-types').add(`admin::`, formatContentTypes(strapi.admin?.contentTypes ?? {}));\r\n  strapi.get('policies').add(`admin::`, strapi.admin?.policies);\r\n  strapi.get('middlewares').add(`admin::`, strapi.admin?.middlewares);\r\n\r\n  const userAdminConfig = strapi.config.get('admin');\r\n  strapi.get('config').set('admin', _.merge(strapi.admin?.config, userAdminConfig));\r\n}\r\n\r\nconst formatContentTypes = (contentTypes: Record<string, { schema: Struct.ContentTypeSchema }>) => {\r\n  Object.values(contentTypes).forEach((definition) => {\r\n    const { schema } = definition;\r\n\r\n    Object.assign(schema, {\r\n      plugin: 'admin',\r\n      globalId: getGlobalId(schema, 'admin'),\r\n    });\r\n  });\r\n\r\n  return contentTypes;\r\n};\r\n"],"names":["_","getGlobalId"],"mappings":";;;;;AAIA,eAA8B,UAAU,QAAqB;AAG3D,SAAO,IAAI,UAAU,EAAE,IAAI,WAAW,OAAO,OAAO,QAAQ;AAC5D,SAAO,IAAI,aAAa,EAAE,IAAI,WAAW,OAAO,OAAO,WAAW;AAC3D,SAAA,IAAI,eAAe,EAAE,IAAI,WAAW,mBAAmB,OAAO,OAAO,gBAAgB,CAAE,CAAA,CAAC;AAC/F,SAAO,IAAI,UAAU,EAAE,IAAI,WAAW,OAAO,OAAO,QAAQ;AAC5D,SAAO,IAAI,aAAa,EAAE,IAAI,WAAW,OAAO,OAAO,WAAW;AAElE,QAAM,kBAAkB,OAAO,OAAO,IAAI,OAAO;AAC1C,SAAA,IAAI,QAAQ,EAAE,IAAI,SAASA,mBAAE,MAAM,OAAO,OAAO,QAAQ,eAAe,CAAC;AAClF;AAEA,MAAM,qBAAqB,CAAC,iBAAuE;AACjG,SAAO,OAAO,YAAY,EAAE,QAAQ,CAAC,eAAe;AAC5C,UAAA,EAAE,WAAW;AAEnB,WAAO,OAAO,QAAQ;AAAA,MACpB,QAAQ;AAAA,MACR,UAAUC,MAAAA,YAAY,QAAQ,OAAO;AAAA,IAAA,CACtC;AAAA,EAAA,CACF;AAEM,SAAA;AACT;;"}