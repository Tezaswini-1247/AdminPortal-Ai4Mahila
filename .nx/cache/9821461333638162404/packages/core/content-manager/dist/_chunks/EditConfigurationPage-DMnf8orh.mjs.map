{"version":3,"file":"EditConfigurationPage-DMnf8orh.mjs","sources":["../../admin/src/pages/EditConfigurationPage.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { Page, useNotification, useTracking, useAPIErrorHandler } from '@strapi/admin/strapi-admin';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { TEMP_FIELD_NAME } from '../components/ConfigurationForm/Fields';\r\nimport { ConfigurationForm, ConfigurationFormProps } from '../components/ConfigurationForm/Form';\r\nimport { useDoc } from '../hooks/useDocument';\r\nimport { useDocLayout } from '../hooks/useDocumentLayout';\r\nimport { useTypedSelector } from '../modules/hooks';\r\nimport { useUpdateContentTypeConfigurationMutation } from '../services/contentTypes';\r\nimport { useGetInitialDataQuery } from '../services/init';\r\nimport { setIn } from '../utils/objects';\r\n\r\nimport type { Metadatas } from '../../../shared/contracts/content-types';\r\n\r\nconst EditConfigurationPage = () => {\r\n  const { trackUsage } = useTracking();\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n  const { isLoading: isLoadingSchema, schema, model } = useDoc();\r\n  const { isLoading: isLoadingLayout, error, list, edit } = useDocLayout();\r\n\r\n  const {\r\n    fieldSizes,\r\n    error: errorFieldSizes,\r\n    isLoading: isLoadingFieldSizes,\r\n    isFetching: isFetchingFieldSizes,\r\n  } = useGetInitialDataQuery(undefined, {\r\n    selectFromResult: (res) => {\r\n      const fieldSizes = Object.entries(res.data?.fieldSizes ?? {}).reduce<\r\n        ConfigurationFormProps['fieldSizes']\r\n      >((acc, [attributeName, { default: size }]) => {\r\n        acc[attributeName] = size;\r\n\r\n        return acc;\r\n      }, {});\r\n\r\n      return {\r\n        isFetching: res.isFetching,\r\n        isLoading: res.isLoading,\r\n        error: res.error,\r\n        fieldSizes,\r\n      };\r\n    },\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (errorFieldSizes) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(errorFieldSizes),\r\n      });\r\n    }\r\n  }, [errorFieldSizes, formatAPIError, toggleNotification]);\r\n\r\n  const isLoading =\r\n    isLoadingSchema || isLoadingLayout || isLoadingFieldSizes || isFetchingFieldSizes;\r\n\r\n  const [updateConfiguration] = useUpdateContentTypeConfigurationMutation();\r\n  const handleSubmit: ConfigurationFormProps['onSubmit'] = async (data) => {\r\n    try {\r\n      trackUsage('willSaveContentTypeLayout');\r\n\r\n      /**\r\n       * We reconstruct the metadatas object by taking the existing list metadatas\r\n       * and re-merging that by attribute name with the current list metadatas, whilst overwriting\r\n       * the data from the form we've built.\r\n       */\r\n      const meta = Object.entries(list.metadatas).reduce<Metadatas>(\r\n        (acc, [name, { mainField: _mainField, ...listMeta }]) => {\r\n          const existingEditMeta = edit.metadatas[name];\r\n\r\n          const {\r\n            __temp_key__,\r\n            size: _size,\r\n            name: _name,\r\n            ...editedMetadata\r\n          } = data.layout.flatMap((row) => row.children).find((field) => field.name === name) ?? {};\r\n\r\n          acc[name] = {\r\n            edit: {\r\n              ...existingEditMeta,\r\n              ...editedMetadata,\r\n            },\r\n            list: listMeta,\r\n          };\r\n\r\n          return acc;\r\n        },\r\n        {}\r\n      );\r\n\r\n      const res = await updateConfiguration({\r\n        layouts: {\r\n          edit: data.layout.map((row) =>\r\n            row.children.reduce<Array<{ name: string; size: number }>>((acc, { name, size }) => {\r\n              if (name !== TEMP_FIELD_NAME) {\r\n                return [...acc, { name, size }];\r\n              }\r\n\r\n              return acc;\r\n            }, [])\r\n          ),\r\n          list: list.layout.map((field) => field.name),\r\n        },\r\n        settings: setIn(data.settings, 'displayName', undefined),\r\n        metadatas: meta,\r\n        uid: model,\r\n      });\r\n\r\n      if ('data' in res) {\r\n        trackUsage('didEditEditSettings');\r\n        toggleNotification({\r\n          type: 'success',\r\n          message: formatMessage({ id: 'notification.success.saved', defaultMessage: 'Saved' }),\r\n        });\r\n      } else {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatAPIError(res.error),\r\n        });\r\n      }\r\n    } catch {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occurred' }),\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  if (errorFieldSizes || error || !schema) {\r\n    return <Page.Error />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Page.Title>{`Configure ${edit.settings.displayName} Edit View`}</Page.Title>\r\n      <ConfigurationForm\r\n        onSubmit={handleSubmit}\r\n        attributes={schema.attributes}\r\n        fieldSizes={fieldSizes}\r\n        layout={edit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nconst ProtectedEditConfigurationPage = () => {\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.contentManager?.collectionTypesConfigurations\r\n  );\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions}>\r\n      <EditConfigurationPage />\r\n    </Page.Protect>\r\n  );\r\n};\r\n\r\nexport { ProtectedEditConfigurationPage, EditConfigurationPage };\r\n"],"names":["fieldSizes"],"mappings":"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"}