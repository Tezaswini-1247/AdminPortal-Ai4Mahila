{"version":3,"file":"middlewares.js","sources":["../../src/loaders/middlewares.ts"],"sourcesContent":["import { join, extname, basename } from 'path';\r\nimport fse from 'fs-extra';\r\nimport { importDefault } from '@strapi/utils';\r\nimport type { Core } from '@strapi/types';\r\nimport { middlewares as internalMiddlewares } from '../middlewares';\r\n\r\n// TODO:: allow folders with index.js inside for bigger policies\r\nexport default async function loadMiddlewares(strapi: Core.Strapi) {\r\n  const localMiddlewares = await loadLocalMiddlewares(strapi);\r\n\r\n  strapi.get('middlewares').add(`global::`, localMiddlewares);\r\n  strapi.get('middlewares').add(`strapi::`, internalMiddlewares);\r\n}\r\n\r\nconst loadLocalMiddlewares = async (strapi: Core.Strapi) => {\r\n  const dir = strapi.dirs.dist.middlewares;\r\n\r\n  if (!(await fse.pathExists(dir))) {\r\n    return {};\r\n  }\r\n\r\n  const middlewares: Record<string, Core.MiddlewareFactory> = {};\r\n  const paths = await fse.readdir(dir, { withFileTypes: true });\r\n\r\n  for (const fd of paths) {\r\n    const { name } = fd;\r\n    const fullPath = join(dir, name);\r\n\r\n    if (fd.isFile() && extname(name) === '.js') {\r\n      const key = basename(name, '.js');\r\n      middlewares[key] = importDefault(fullPath);\r\n    }\r\n  }\r\n\r\n  return middlewares;\r\n};\r\n"],"names":["internalMiddlewares","fse","join","extname","basename","importDefault"],"mappings":";;;;;;;AAOA,eAA8B,gBAAgB,QAAqB;AAC3D,QAAA,mBAAmB,MAAM,qBAAqB,MAAM;AAE1D,SAAO,IAAI,aAAa,EAAE,IAAI,YAAY,gBAAgB;AAC1D,SAAO,IAAI,aAAa,EAAE,IAAI,YAAYA,iBAAmB;AAC/D;AAEA,MAAM,uBAAuB,OAAO,WAAwB;AACpD,QAAA,MAAM,OAAO,KAAK,KAAK;AAE7B,MAAI,CAAE,MAAMC,aAAAA,QAAI,WAAW,GAAG,GAAI;AAChC,WAAO,CAAC;AAAA,EAAA;AAGV,QAAM,cAAsD,CAAC;AACvD,QAAA,QAAQ,MAAMA,qBAAI,QAAQ,KAAK,EAAE,eAAe,MAAM;AAE5D,aAAW,MAAM,OAAO;AAChB,UAAA,EAAE,SAAS;AACX,UAAA,WAAWC,KAAAA,KAAK,KAAK,IAAI;AAE/B,QAAI,GAAG,OAAO,KAAKC,KAAQ,QAAA,IAAI,MAAM,OAAO;AACpC,YAAA,MAAMC,KAAAA,SAAS,MAAM,KAAK;AACpB,kBAAA,GAAG,IAAIC,YAAA,cAAc,QAAQ;AAAA,IAAA;AAAA,EAC3C;AAGK,SAAA;AACT;;"}