{"version":3,"file":"components.js","sources":["../../src/loaders/components.ts"],"sourcesContent":["import { join } from 'path';\r\nimport _ from 'lodash';\r\nimport { pathExists } from 'fs-extra';\r\nimport type { Core, Struct, UID } from '@strapi/types';\r\nimport { loadFiles } from '../utils/load-files';\r\n\r\ntype LoadedComponent = {\r\n  collectionName: string;\r\n  __filename__: string;\r\n  __schema__: LoadedComponent;\r\n  uid: string;\r\n  category: string;\r\n  modelName: string;\r\n  globalId: string;\r\n  info: any;\r\n  attributes: any;\r\n};\r\n\r\ntype LoadedComponents = {\r\n  [category: string]: {\r\n    [key: string]: LoadedComponent;\r\n  };\r\n};\r\n\r\ntype ComponentMap = {\r\n  [uid in UID.Component]: Struct.ComponentSchema;\r\n};\r\n\r\nexport default async function loadComponents(strapi: Core.Strapi) {\r\n  if (!(await pathExists(strapi.dirs.dist.components))) {\r\n    return {};\r\n  }\r\n\r\n  const map = await loadFiles<LoadedComponents>(strapi.dirs.dist.components, '*/*.*(js|json)');\r\n\r\n  const components = Object.keys(map).reduce((acc, category) => {\r\n    Object.keys(map[category]).forEach((key) => {\r\n      const schema = map[category][key];\r\n\r\n      if (!schema.collectionName) {\r\n        // NOTE: We're using the filepath from the app directory instead of the dist for information purpose\r\n        const filePath = join(strapi.dirs.app.components, category, schema.__filename__);\r\n\r\n        return strapi.stopWithError(\r\n          `Component ${key} is missing a \"collectionName\" property.\\nVerify file ${filePath}.`\r\n        );\r\n      }\r\n\r\n      const uid: UID.Component = `${category}.${key}`;\r\n\r\n      acc[uid] = Object.assign(schema, {\r\n        __schema__: _.cloneDeep(schema),\r\n        uid,\r\n        category,\r\n        modelType: 'component' as const,\r\n        modelName: key,\r\n        globalId: schema.globalId || _.upperFirst(_.camelCase(`component_${uid}`)),\r\n      });\r\n    });\r\n\r\n    return acc;\r\n  }, {} as ComponentMap);\r\n\r\n  strapi.get('components').add(components);\r\n}\r\n"],"names":["pathExists","loadFiles","join","_"],"mappings":";;;;;;;AA4BA,eAA8B,eAAe,QAAqB;AAChE,MAAI,CAAE,MAAMA,IAAAA,WAAW,OAAO,KAAK,KAAK,UAAU,GAAI;AACpD,WAAO,CAAC;AAAA,EAAA;AAGV,QAAM,MAAM,MAAMC,oBAA4B,OAAO,KAAK,KAAK,YAAY,gBAAgB;AAErF,QAAA,aAAa,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,KAAK,aAAa;AAC5D,WAAO,KAAK,IAAI,QAAQ,CAAC,EAAE,QAAQ,CAAC,QAAQ;AAC1C,YAAM,SAAS,IAAI,QAAQ,EAAE,GAAG;AAE5B,UAAA,CAAC,OAAO,gBAAgB;AAEpB,cAAA,WAAWC,UAAK,OAAO,KAAK,IAAI,YAAY,UAAU,OAAO,YAAY;AAE/E,eAAO,OAAO;AAAA,UACZ,aAAa,GAAG;AAAA,cAAyD,QAAQ;AAAA,QACnF;AAAA,MAAA;AAGF,YAAM,MAAqB,GAAG,QAAQ,IAAI,GAAG;AAE7C,UAAI,GAAG,IAAI,OAAO,OAAO,QAAQ;AAAA,QAC/B,YAAYC,WAAAA,QAAE,UAAU,MAAM;AAAA,QAC9B;AAAA,QACA;AAAA,QACA,WAAW;AAAA,QACX,WAAW;AAAA,QACX,UAAU,OAAO,YAAYA,WAAAA,QAAE,WAAWA,mBAAE,UAAU,aAAa,GAAG,EAAE,CAAC;AAAA,MAAA,CAC1E;AAAA,IAAA,CACF;AAEM,WAAA;AAAA,EACT,GAAG,EAAkB;AAErB,SAAO,IAAI,YAAY,EAAE,IAAI,UAAU;AACzC;;"}