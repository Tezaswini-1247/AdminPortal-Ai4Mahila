{"version":3,"file":"sender.js","sources":["../../../src/services/metrics/sender.ts"],"sourcesContent":["import os from 'os';\r\nimport path from 'path';\r\nimport _ from 'lodash';\r\nimport isDocker from 'is-docker';\r\nimport ciEnv from 'ci-info';\r\nimport tsUtils from '@strapi/typescript-utils';\r\nimport { env, machineID } from '@strapi/utils';\r\nimport type { Core } from '@strapi/types';\r\nimport { generateAdminUserHash } from './admin-user-hash';\r\n\r\nexport interface Payload {\r\n  eventProperties?: Record<string, unknown>;\r\n  userProperties?: Record<string, unknown>;\r\n  groupProperties?: Record<string, unknown>;\r\n}\r\n\r\nexport type Sender = (\r\n  event: string,\r\n  payload?: Payload,\r\n  opts?: Record<string, unknown>\r\n) => Promise<boolean>;\r\n\r\nconst defaultQueryOpts = {\r\n  timeout: 1000,\r\n  headers: { 'Content-Type': 'application/json' },\r\n};\r\n\r\nconst ANALYTICS_URI = 'https://analytics.strapi.io';\r\n\r\n/**\r\n * Add properties from the package.json strapi key in the metadata\r\n */\r\nconst addPackageJsonStrapiMetadata = (metadata: Record<string, unknown>, strapi: Core.Strapi) => {\r\n  const { packageJsonStrapi = {} } = strapi.config;\r\n\r\n  _.defaults(metadata, packageJsonStrapi);\r\n};\r\n\r\n/**\r\n * Create a send function for event with all the necessary metadata\r\n */\r\nexport default (strapi: Core.Strapi): Sender => {\r\n  const { uuid } = strapi.config;\r\n  const deviceId = machineID();\r\n\r\n  const serverRootPath = strapi.dirs.app.root;\r\n  const adminRootPath = path.join(strapi.dirs.app.root, 'src', 'admin');\r\n\r\n  const anonymousUserProperties = {\r\n    environment: strapi.config.environment,\r\n    os: os.type(),\r\n    osPlatform: os.platform(),\r\n    osArch: os.arch(),\r\n    osRelease: os.release(),\r\n    nodeVersion: process.versions.node,\r\n  };\r\n\r\n  const anonymousGroupProperties = {\r\n    docker: process.env.DOCKER || isDocker(),\r\n    isCI: ciEnv.isCI,\r\n    version: strapi.config.get('info.strapi'),\r\n    useTypescriptOnServer: tsUtils.isUsingTypeScriptSync(serverRootPath),\r\n    useTypescriptOnAdmin: tsUtils.isUsingTypeScriptSync(adminRootPath),\r\n    projectId: uuid,\r\n    isHostedOnStrapiCloud: env('STRAPI_HOSTING', null) === 'strapi.cloud',\r\n  };\r\n\r\n  addPackageJsonStrapiMetadata(anonymousGroupProperties, strapi);\r\n\r\n  return async (event: string, payload: Payload = {}, opts = {}) => {\r\n    const userId = generateAdminUserHash(strapi);\r\n\r\n    const reqParams = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        event,\r\n        userId,\r\n        deviceId,\r\n        eventProperties: payload.eventProperties,\r\n        userProperties: userId ? { ...anonymousUserProperties, ...payload.userProperties } : {},\r\n        groupProperties: {\r\n          ...anonymousGroupProperties,\r\n          projectType: strapi.EE ? 'Enterprise' : 'Community',\r\n          ...payload.groupProperties,\r\n        },\r\n      }),\r\n      ..._.merge({ headers: { 'X-Strapi-Event': event } }, defaultQueryOpts, opts),\r\n    };\r\n\r\n    try {\r\n      const res = await strapi.fetch(`${ANALYTICS_URI}/api/v2/track`, reqParams);\r\n      return res.ok;\r\n    } catch (err) {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n"],"names":["_","machineID","path","os","isDocker","ciEnv","tsUtils","env","generateAdminUserHash"],"mappings":";;;;;;;;;;;;;;;;AAsBA,MAAM,mBAAmB;AAAA,EACvB,SAAS;AAAA,EACT,SAAS,EAAE,gBAAgB,mBAAmB;AAChD;AAEA,MAAM,gBAAgB;AAKtB,MAAM,+BAA+B,CAAC,UAAmC,WAAwB;AAC/F,QAAM,EAAE,oBAAoB,OAAO,OAAO;AAExCA,qBAAA,SAAS,UAAU,iBAAiB;AACxC;AAKA,MAAe,eAAA,CAAC,WAAgC;AACxC,QAAA,EAAE,SAAS,OAAO;AACxB,QAAM,WAAWC,YAAAA,UAAU;AAErB,QAAA,iBAAiB,OAAO,KAAK,IAAI;AACjC,QAAA,gBAAgBC,sBAAK,KAAK,OAAO,KAAK,IAAI,MAAM,OAAO,OAAO;AAEpE,QAAM,0BAA0B;AAAA,IAC9B,aAAa,OAAO,OAAO;AAAA,IAC3B,IAAIC,oBAAG,KAAK;AAAA,IACZ,YAAYA,oBAAG,SAAS;AAAA,IACxB,QAAQA,oBAAG,KAAK;AAAA,IAChB,WAAWA,oBAAG,QAAQ;AAAA,IACtB,aAAa,QAAQ,SAAS;AAAA,EAChC;AAEA,QAAM,2BAA2B;AAAA,IAC/B,QAAQ,QAAQ,IAAI,UAAUC,kBAAAA,QAAS;AAAA,IACvC,MAAMC,eAAM,QAAA;AAAA,IACZ,SAAS,OAAO,OAAO,IAAI,aAAa;AAAA,IACxC,uBAAuBC,iBAAAA,QAAQ,sBAAsB,cAAc;AAAA,IACnE,sBAAsBA,iBAAAA,QAAQ,sBAAsB,aAAa;AAAA,IACjE,WAAW;AAAA,IACX,uBAAuBC,YAAA,IAAI,kBAAkB,IAAI,MAAM;AAAA,EACzD;AAEA,+BAA6B,0BAA0B,MAAM;AAE7D,SAAO,OAAO,OAAe,UAAmB,CAAA,GAAI,OAAO,CAAA,MAAO;AAC1D,UAAA,SAASC,oCAAsB,MAAM;AAE3C,UAAM,YAAY;AAAA,MAChB,QAAQ;AAAA,MACR,MAAM,KAAK,UAAU;AAAA,QACnB;AAAA,QACA;AAAA,QACA;AAAA,QACA,iBAAiB,QAAQ;AAAA,QACzB,gBAAgB,SAAS,EAAE,GAAG,yBAAyB,GAAG,QAAQ,eAAe,IAAI,CAAC;AAAA,QACtF,iBAAiB;AAAA,UACf,GAAG;AAAA,UACH,aAAa,OAAO,KAAK,eAAe;AAAA,UACxC,GAAG,QAAQ;AAAA,QAAA;AAAA,MACb,CACD;AAAA,MACD,GAAGR,WAAE,QAAA,MAAM,EAAE,SAAS,EAAE,kBAAkB,MAAM,KAAK,kBAAkB,IAAI;AAAA,IAC7E;AAEI,QAAA;AACF,YAAM,MAAM,MAAM,OAAO,MAAM,GAAG,aAAa,iBAAiB,SAAS;AACzE,aAAO,IAAI;AAAA,aACJ,KAAK;AACL,aAAA;AAAA,IAAA;AAAA,EAEX;AACF;;"}