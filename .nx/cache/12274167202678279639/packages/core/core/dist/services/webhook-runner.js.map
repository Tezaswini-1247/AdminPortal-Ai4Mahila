{"version":3,"file":"webhook-runner.js","sources":["../../src/services/webhook-runner.ts"],"sourcesContent":["/**\r\n * The event hub is Strapi's event control center.\r\n */\r\n\r\nimport createdDebugger from 'debug';\r\nimport _ from 'lodash';\r\nimport type { Logger } from '@strapi/logger';\r\n\r\nimport type { Modules } from '@strapi/types';\r\nimport WorkerQueue from './worker-queue';\r\nimport type { EventHub } from './event-hub';\r\nimport type { Fetch } from '../utils/fetch';\r\n\r\ntype Webhook = Modules.WebhookStore.Webhook;\r\n\r\ninterface Config {\r\n  defaultHeaders: Record<string, string>;\r\n}\r\n\r\ninterface ConstructorParameters {\r\n  eventHub: EventHub;\r\n  logger: Logger;\r\n  configuration?: Record<string, unknown>;\r\n  fetch: Fetch;\r\n}\r\n\r\ninterface Event {\r\n  event: string;\r\n  info: Record<string, unknown>;\r\n}\r\n\r\ntype Listener = (info: Record<string, unknown>) => Promise<void>;\r\n\r\nconst debug = createdDebugger('strapi:webhook');\r\n\r\nconst defaultConfiguration: Config = {\r\n  defaultHeaders: {},\r\n};\r\n\r\nclass WebhookRunner {\r\n  private eventHub: EventHub;\r\n\r\n  private logger: Logger;\r\n\r\n  private config: Config;\r\n\r\n  private webhooksMap: Map<string, Webhook[]> = new Map();\r\n\r\n  private listeners: Map<string, Listener> = new Map();\r\n\r\n  private queue: WorkerQueue<Event, void>;\r\n\r\n  private fetch: Fetch;\r\n\r\n  constructor({ eventHub, logger, configuration = {}, fetch }: ConstructorParameters) {\r\n    debug('Initialized webhook runner');\r\n    this.eventHub = eventHub;\r\n    this.logger = logger;\r\n    this.fetch = fetch;\r\n\r\n    if (typeof configuration !== 'object') {\r\n      throw new Error(\r\n        'Invalid configuration provided to the webhookRunner.\\nCheck your server.json -> webhooks configuration'\r\n      );\r\n    }\r\n\r\n    this.config = _.merge(defaultConfiguration, configuration);\r\n\r\n    this.queue = new WorkerQueue({ logger, concurrency: 5 });\r\n\r\n    this.queue.subscribe(this.executeListener.bind(this));\r\n  }\r\n\r\n  deleteListener(event: string) {\r\n    debug(`Deleting listener for event '${event}'`);\r\n\r\n    const fn = this.listeners.get(event);\r\n\r\n    if (fn !== undefined) {\r\n      this.eventHub.off(event, fn);\r\n      this.listeners.delete(event);\r\n    }\r\n  }\r\n\r\n  createListener(event: string) {\r\n    debug(`Creating listener for event '${event}'`);\r\n    if (this.listeners.has(event)) {\r\n      this.logger.error(\r\n        `The webhook runner is already listening for the event '${event}'. Did you mean to call .register() ?`\r\n      );\r\n    }\r\n\r\n    const listen = async (info: Event['info']) => {\r\n      this.queue.enqueue({ event, info });\r\n    };\r\n\r\n    this.listeners.set(event, listen);\r\n    this.eventHub.on(event, listen);\r\n  }\r\n\r\n  async executeListener({ event, info }: Event) {\r\n    debug(`Executing webhook for event '${event}'`);\r\n    const webhooks = this.webhooksMap.get(event) || [];\r\n    const activeWebhooks = webhooks.filter((webhook) => webhook.isEnabled === true);\r\n\r\n    for (const webhook of activeWebhooks) {\r\n      await this.run(webhook, event, info).catch((error: unknown) => {\r\n        this.logger.error('Error running webhook');\r\n        this.logger.error(error);\r\n      });\r\n    }\r\n  }\r\n\r\n  run(webhook: Webhook, event: string, info = {}) {\r\n    const { url, headers } = webhook;\r\n\r\n    return this.fetch(url, {\r\n      method: 'post',\r\n      body: JSON.stringify({\r\n        event,\r\n        createdAt: new Date(),\r\n        ...info,\r\n      }),\r\n      headers: {\r\n        ...this.config.defaultHeaders,\r\n        ...headers,\r\n        'X-Strapi-Event': event,\r\n        'Content-Type': 'application/json',\r\n      },\r\n      signal: AbortSignal.timeout(10000),\r\n    })\r\n      .then(async (res) => {\r\n        if (res.ok) {\r\n          return {\r\n            statusCode: res.status,\r\n          };\r\n        }\r\n\r\n        return {\r\n          statusCode: res.status,\r\n          message: await res.text(),\r\n        };\r\n      })\r\n      .catch((err) => {\r\n        return {\r\n          statusCode: 500,\r\n          message: err.message,\r\n        };\r\n      });\r\n  }\r\n\r\n  add(webhook: Webhook) {\r\n    debug(`Registering webhook '${webhook.id}'`);\r\n    const { events } = webhook;\r\n\r\n    events.forEach((event) => {\r\n      if (this.webhooksMap.has(event)) {\r\n        this.webhooksMap.get(event)?.push(webhook);\r\n      } else {\r\n        this.webhooksMap.set(event, [webhook]);\r\n        this.createListener(event);\r\n      }\r\n    });\r\n  }\r\n\r\n  update(webhook: Webhook) {\r\n    debug(`Refreshing webhook '${webhook.id}'`);\r\n    this.remove(webhook);\r\n    this.add(webhook);\r\n  }\r\n\r\n  remove(webhook: Webhook) {\r\n    debug(`Unregistering webhook '${webhook.id}'`);\r\n\r\n    this.webhooksMap.forEach((webhooks, event) => {\r\n      const filteredWebhooks = webhooks.filter((value) => value.id !== webhook.id);\r\n\r\n      // Cleanup hanging listeners\r\n      if (filteredWebhooks.length === 0) {\r\n        this.webhooksMap.delete(event);\r\n        this.deleteListener(event);\r\n      } else {\r\n        this.webhooksMap.set(event, filteredWebhooks);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Expose a factory function instead of the class\r\n */\r\nexport default function createWebhookRunner(opts: ConstructorParameters): WebhookRunner {\r\n  return new WebhookRunner(opts);\r\n}\r\n\r\nexport type { WebhookRunner };\r\n"],"names":["createdDebugger","_","WorkerQueue"],"mappings":"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"}