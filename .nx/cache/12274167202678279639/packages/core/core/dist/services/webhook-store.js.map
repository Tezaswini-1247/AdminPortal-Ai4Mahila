{"version":3,"file":"webhook-store.js","sources":["../../src/services/webhook-store.ts"],"sourcesContent":["/**\r\n * Webhook store is the implementation of webhook storage over the core_store\r\n */\r\n\r\nimport { errors } from '@strapi/utils';\r\nimport type { Model, Database } from '@strapi/database';\r\nimport type { Modules } from '@strapi/types';\r\n\r\nconst { ValidationError } = errors;\r\n\r\nconst webhookModel: Model = {\r\n  uid: 'strapi::webhook',\r\n  singularName: 'strapi_webhooks',\r\n  tableName: 'strapi_webhooks',\r\n  attributes: {\r\n    id: {\r\n      type: 'increments',\r\n    },\r\n    name: {\r\n      type: 'string',\r\n    },\r\n    url: {\r\n      type: 'text',\r\n    },\r\n    headers: {\r\n      type: 'json',\r\n    },\r\n    events: {\r\n      type: 'json',\r\n    },\r\n    enabled: {\r\n      type: 'boolean',\r\n    },\r\n  },\r\n};\r\n\r\ntype Webhook = Modules.WebhookStore.Webhook;\r\ntype DBOutput = Omit<Webhook, 'id' | 'isEnabled'> & { id: string | number; enabled: boolean };\r\ntype DBInput = Omit<DBOutput, 'id'>;\r\n\r\nconst toDBObject = (data: Webhook): DBInput => {\r\n  return {\r\n    name: data.name,\r\n    url: data.url,\r\n    headers: data.headers,\r\n    events: data.events,\r\n    enabled: data.isEnabled,\r\n  };\r\n};\r\n\r\nconst fromDBObject = (row: DBOutput): Webhook => {\r\n  return {\r\n    id: typeof row.id === 'number' ? row.id.toString() : row.id,\r\n    name: row.name,\r\n    url: row.url,\r\n    headers: row.headers,\r\n    events: row.events,\r\n    isEnabled: row.enabled,\r\n  };\r\n};\r\n\r\nconst webhookEventValidator = async (allowedEvents: Map<string, string>, events: string[]) => {\r\n  const allowedValues = Array.from(allowedEvents.values());\r\n\r\n  events.forEach((event) => {\r\n    if (allowedValues.includes(event)) {\r\n      return;\r\n    }\r\n\r\n    throw new ValidationError(`Webhook event ${event} is not supported`);\r\n  });\r\n};\r\n\r\nexport interface WebhookStore {\r\n  allowedEvents: Map<string, string>;\r\n  addAllowedEvent(key: string, value: string): void;\r\n  removeAllowedEvent(key: string): void;\r\n  listAllowedEvents(): string[];\r\n  getAllowedEvent(key: string): string | undefined;\r\n  findWebhooks(): Promise<Webhook[]>;\r\n  findWebhook(id: string): Promise<Webhook | null>;\r\n  createWebhook(data: Webhook): Promise<Webhook>;\r\n  updateWebhook(id: string, data: Webhook): Promise<Webhook | null>;\r\n  deleteWebhook(id: string): Promise<Webhook | null>;\r\n}\r\n\r\nconst createWebhookStore = ({ db }: { db: Database }): WebhookStore => {\r\n  return {\r\n    allowedEvents: new Map([\r\n      ['ENTRY_CREATE', 'entry.create'],\r\n      ['ENTRY_UPDATE', 'entry.update'],\r\n      ['ENTRY_DELETE', 'entry.delete'],\r\n      ['ENTRY_PUBLISH', 'entry.publish'],\r\n      ['ENTRY_UNPUBLISH', 'entry.unpublish'],\r\n      ['ENTRY_DRAFT_DISCARD', 'entry.draft-discard'],\r\n    ]),\r\n    addAllowedEvent(key, value) {\r\n      this.allowedEvents.set(key, value);\r\n    },\r\n    removeAllowedEvent(key) {\r\n      this.allowedEvents.delete(key);\r\n    },\r\n    listAllowedEvents() {\r\n      return Array.from(this.allowedEvents.keys());\r\n    },\r\n    getAllowedEvent(key) {\r\n      return this.allowedEvents.get(key);\r\n    },\r\n    async findWebhooks() {\r\n      const results = await db.query('strapi::webhook').findMany();\r\n\r\n      return results.map(fromDBObject);\r\n    },\r\n    async findWebhook(id) {\r\n      const result = await db.query('strapi::webhook').findOne({ where: { id } });\r\n      return result ? fromDBObject(result) : null;\r\n    },\r\n    async createWebhook(data) {\r\n      await webhookEventValidator(this.allowedEvents, data.events);\r\n\r\n      return db\r\n        .query('strapi::webhook')\r\n        .create({\r\n          data: toDBObject({ ...data, isEnabled: true }),\r\n        })\r\n        .then(fromDBObject);\r\n    },\r\n    async updateWebhook(id, data) {\r\n      await webhookEventValidator(this.allowedEvents, data.events);\r\n\r\n      const webhook = await db.query('strapi::webhook').update({\r\n        where: { id },\r\n        data: toDBObject(data),\r\n      });\r\n\r\n      return webhook ? fromDBObject(webhook) : null;\r\n    },\r\n    async deleteWebhook(id) {\r\n      const webhook = await db.query('strapi::webhook').delete({ where: { id } });\r\n      return webhook ? fromDBObject(webhook) : null;\r\n    },\r\n  };\r\n};\r\n\r\nexport { webhookModel, createWebhookStore };\r\n"],"names":["errors"],"mappings":"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"}