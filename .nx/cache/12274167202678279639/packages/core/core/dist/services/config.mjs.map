{"version":3,"file":"config.mjs","sources":["../../src/services/config.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\r\nimport { get, set, has, isString, isNumber, isArray, type PropertyPath } from 'lodash';\r\n\r\ntype State = {\r\n  config: Config;\r\n};\r\n\r\ntype Config = Record<string, unknown>;\r\n\r\nexport const createConfigProvider = (\r\n  initialConfig: Record<string, unknown> = {},\r\n  strapi?: Core.Strapi\r\n): Core.ConfigProvider => {\r\n  const state: State = {\r\n    config: { ...initialConfig }, // not deep clone because it would break some config\r\n  };\r\n\r\n  // Accessing model configs with dot (.) was deprecated between v4->v5, but to avoid a major breaking change\r\n  // we will still support certain namespaces, currently only 'plugin.'\r\n  const transformPathString = (path: string) => {\r\n    if (path.startsWith('plugin.')) {\r\n      const newPath = path.replace('plugin.', 'plugin::');\r\n\r\n      // strapi logger may not be loaded yet, so fall back to console\r\n      (strapi?.log?.warn ?? console.warn)(\r\n        `Using dot notation for model config namespaces is deprecated, for example \"plugin::myplugin\" should be used instead of \"plugin.myplugin\". Modifying requested path ${path} to ${newPath}`\r\n      );\r\n      return newPath;\r\n    }\r\n\r\n    return path;\r\n  };\r\n\r\n  const transformDeprecatedPaths = (path: PropertyPath): PropertyPath => {\r\n    if (isString(path)) {\r\n      return transformPathString(path);\r\n    }\r\n    if (isArray(path)) {\r\n      // if the path is not joinable, we won't apply our deprecation support\r\n      if (path.some((part) => !(isString(part) || isNumber(part)))) {\r\n        return path;\r\n      }\r\n\r\n      return transformPathString(path.join('.'));\r\n    }\r\n\r\n    return path;\r\n  };\r\n\r\n  return {\r\n    ...state.config, // TODO: to remove\r\n    get(path: PropertyPath, defaultValue?: unknown) {\r\n      return get(state.config, transformDeprecatedPaths(path), defaultValue);\r\n    },\r\n    set(path: PropertyPath, val: unknown) {\r\n      set(state.config, transformDeprecatedPaths(path), val);\r\n      return this;\r\n    },\r\n    has(path: PropertyPath) {\r\n      return has(state.config, transformDeprecatedPaths(path));\r\n    },\r\n  };\r\n};\r\n"],"names":[],"mappings":";AASO,MAAM,uBAAuB,CAClC,gBAAyC,IACzC,WACwB;AACxB,QAAM,QAAe;AAAA,IACnB,QAAQ,EAAE,GAAG,cAAc;AAAA;AAAA,EAC7B;AAIM,QAAA,sBAAsB,CAAC,SAAiB;AACxC,QAAA,KAAK,WAAW,SAAS,GAAG;AAC9B,YAAM,UAAU,KAAK,QAAQ,WAAW,UAAU;AAGjD,OAAA,QAAQ,KAAK,QAAQ,QAAQ;AAAA,QAC5B,sKAAsK,IAAI,OAAO,OAAO;AAAA,MAC1L;AACO,aAAA;AAAA,IAAA;AAGF,WAAA;AAAA,EACT;AAEM,QAAA,2BAA2B,CAAC,SAAqC;AACjE,QAAA,SAAS,IAAI,GAAG;AAClB,aAAO,oBAAoB,IAAI;AAAA,IAAA;AAE7B,QAAA,QAAQ,IAAI,GAAG;AAEb,UAAA,KAAK,KAAK,CAAC,SAAS,EAAE,SAAS,IAAI,KAAK,SAAS,IAAI,EAAE,GAAG;AACrD,eAAA;AAAA,MAAA;AAGT,aAAO,oBAAoB,KAAK,KAAK,GAAG,CAAC;AAAA,IAAA;AAGpC,WAAA;AAAA,EACT;AAEO,SAAA;AAAA,IACL,GAAG,MAAM;AAAA;AAAA,IACT,IAAI,MAAoB,cAAwB;AAC9C,aAAO,IAAI,MAAM,QAAQ,yBAAyB,IAAI,GAAG,YAAY;AAAA,IACvE;AAAA,IACA,IAAI,MAAoB,KAAc;AACpC,UAAI,MAAM,QAAQ,yBAAyB,IAAI,GAAG,GAAG;AAC9C,aAAA;AAAA,IACT;AAAA,IACA,IAAI,MAAoB;AACtB,aAAO,IAAI,MAAM,QAAQ,yBAAyB,IAAI,CAAC;AAAA,IAAA;AAAA,EAE3D;AACF;"}