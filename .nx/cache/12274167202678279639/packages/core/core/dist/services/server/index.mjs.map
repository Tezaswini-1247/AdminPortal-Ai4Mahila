{"version":3,"file":"index.mjs","sources":["../../../src/services/server/index.ts"],"sourcesContent":["import Router from '@koa/router';\r\nimport type { Core, Modules } from '@strapi/types';\r\n\r\nimport { createHTTPServer } from './http-server';\r\nimport { createRouteManager } from './routing';\r\nimport { createAdminAPI } from './admin-api';\r\nimport { createContentAPI } from './content-api';\r\nimport registerAllRoutes from './register-routes';\r\nimport registerApplicationMiddlewares from './register-middlewares';\r\nimport createKoaApp from './koa';\r\nimport requestCtx from '../request-context';\r\n\r\nconst healthCheck: Core.MiddlewareHandler = async (ctx) => {\r\n  ctx.set('strapi', 'You are so French!');\r\n  ctx.status = 204;\r\n};\r\n\r\nconst createServer = (strapi: Core.Strapi): Modules.Server.Server => {\r\n  const app = createKoaApp({\r\n    proxy: strapi.config.get('server.proxy.koa'),\r\n    keys: strapi.config.get('server.app.keys'),\r\n  });\r\n\r\n  app.use((ctx, next) => requestCtx.run(ctx, () => next()));\r\n\r\n  const router = new Router();\r\n\r\n  const routeManager = createRouteManager(strapi);\r\n\r\n  const httpServer = createHTTPServer(strapi, app);\r\n\r\n  const apis = {\r\n    'content-api': createContentAPI(strapi),\r\n    admin: createAdminAPI(strapi),\r\n  };\r\n\r\n  // init health check\r\n  router.all('/_health', healthCheck);\r\n\r\n  const state = {\r\n    mounted: false,\r\n  };\r\n\r\n  return {\r\n    app,\r\n    router,\r\n    httpServer,\r\n\r\n    api(name) {\r\n      return apis[name];\r\n    },\r\n\r\n    use(...args) {\r\n      app.use(...args);\r\n      return this;\r\n    },\r\n\r\n    routes(routes: Core.Router | Omit<Core.Route, 'info'>[]) {\r\n      if (!Array.isArray(routes) && routes.type) {\r\n        const api = apis[routes.type];\r\n        if (!api) {\r\n          throw new Error(`API ${routes.type} not found. Possible APIs are ${Object.keys(apis)}`);\r\n        }\r\n\r\n        apis[routes.type].routes(routes);\r\n        return this;\r\n      }\r\n\r\n      routeManager.addRoutes(routes, router);\r\n      return this;\r\n    },\r\n\r\n    mount() {\r\n      state.mounted = true;\r\n\r\n      Object.values(apis).forEach((api) => api.mount(router));\r\n      app.use(router.routes()).use(router.allowedMethods());\r\n\r\n      return this;\r\n    },\r\n\r\n    initRouting() {\r\n      registerAllRoutes(strapi);\r\n\r\n      return this;\r\n    },\r\n\r\n    async initMiddlewares() {\r\n      await registerApplicationMiddlewares(strapi);\r\n\r\n      return this;\r\n    },\r\n\r\n    listRoutes() {\r\n      return [...router.stack];\r\n    },\r\n\r\n    listen(...args: any[]) {\r\n      if (!state.mounted) {\r\n        this.mount();\r\n      }\r\n\r\n      return httpServer.listen(...args);\r\n    },\r\n\r\n    async destroy() {\r\n      await httpServer.destroy();\r\n    },\r\n  };\r\n};\r\n\r\nexport { createServer };\r\n"],"names":[],"mappings":";;;;;;;;;AAYA,MAAM,cAAsC,OAAO,QAAQ;AACrD,MAAA,IAAI,UAAU,oBAAoB;AACtC,MAAI,SAAS;AACf;AAEM,MAAA,eAAe,CAAC,WAA+C;AACnE,QAAM,MAAM,aAAa;AAAA,IACvB,OAAO,OAAO,OAAO,IAAI,kBAAkB;AAAA,IAC3C,MAAM,OAAO,OAAO,IAAI,iBAAiB;AAAA,EAAA,CAC1C;AAEG,MAAA,IAAI,CAAC,KAAK,SAAS,WAAW,IAAI,KAAK,MAAM,KAAK,CAAC,CAAC;AAElD,QAAA,SAAS,IAAI,OAAO;AAEpB,QAAA,eAAe,mBAAmB,MAAM;AAExC,QAAA,aAAa,iBAAiB,QAAQ,GAAG;AAE/C,QAAM,OAAO;AAAA,IACX,eAAe,iBAAiB,MAAM;AAAA,IACtC,OAAO,eAAe,MAAM;AAAA,EAC9B;AAGO,SAAA,IAAI,YAAY,WAAW;AAElC,QAAM,QAAQ;AAAA,IACZ,SAAS;AAAA,EACX;AAEO,SAAA;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IAEA,IAAI,MAAM;AACR,aAAO,KAAK,IAAI;AAAA,IAClB;AAAA,IAEA,OAAO,MAAM;AACP,UAAA,IAAI,GAAG,IAAI;AACR,aAAA;AAAA,IACT;AAAA,IAEA,OAAO,QAAkD;AACvD,UAAI,CAAC,MAAM,QAAQ,MAAM,KAAK,OAAO,MAAM;AACnC,cAAA,MAAM,KAAK,OAAO,IAAI;AAC5B,YAAI,CAAC,KAAK;AACF,gBAAA,IAAI,MAAM,OAAO,OAAO,IAAI,iCAAiC,OAAO,KAAK,IAAI,CAAC,EAAE;AAAA,QAAA;AAGxF,aAAK,OAAO,IAAI,EAAE,OAAO,MAAM;AACxB,eAAA;AAAA,MAAA;AAGI,mBAAA,UAAU,QAAQ,MAAM;AAC9B,aAAA;AAAA,IACT;AAAA,IAEA,QAAQ;AACN,YAAM,UAAU;AAET,aAAA,OAAO,IAAI,EAAE,QAAQ,CAAC,QAAQ,IAAI,MAAM,MAAM,CAAC;AAClD,UAAA,IAAI,OAAO,OAAO,CAAC,EAAE,IAAI,OAAO,gBAAgB;AAE7C,aAAA;AAAA,IACT;AAAA,IAEA,cAAc;AACZ,wBAAkB,MAAM;AAEjB,aAAA;AAAA,IACT;AAAA,IAEA,MAAM,kBAAkB;AACtB,YAAM,+BAA+B,MAAM;AAEpC,aAAA;AAAA,IACT;AAAA,IAEA,aAAa;AACJ,aAAA,CAAC,GAAG,OAAO,KAAK;AAAA,IACzB;AAAA,IAEA,UAAU,MAAa;AACjB,UAAA,CAAC,MAAM,SAAS;AAClB,aAAK,MAAM;AAAA,MAAA;AAGN,aAAA,WAAW,OAAO,GAAG,IAAI;AAAA,IAClC;AAAA,IAEA,MAAM,UAAU;AACd,YAAM,WAAW,QAAQ;AAAA,IAAA;AAAA,EAE7B;AACF;"}