{"version":3,"file":"entries.js","sources":["../../../src/services/document-service/entries.ts"],"sourcesContent":["import type { UID, Modules } from '@strapi/types';\r\nimport { async } from '@strapi/utils';\r\nimport { assoc, omit } from 'lodash/fp';\r\n\r\nimport * as components from './components';\r\n\r\nimport { transformParamsDocumentId } from './transform/id-transform';\r\nimport { transformParamsToQuery } from './transform/query';\r\nimport { pickSelectionParams } from './params';\r\nimport { applyTransforms } from './attributes';\r\nimport { transformData } from './transform/data';\r\n\r\nconst createEntriesService = (\r\n  uid: UID.ContentType,\r\n  entityValidator: Modules.EntityValidator.EntityValidator\r\n) => {\r\n  const contentType = strapi.contentType(uid);\r\n\r\n  async function createEntry(params = {} as any) {\r\n    const { data, ...restParams } = await transformParamsDocumentId(uid, params);\r\n\r\n    const query = transformParamsToQuery(uid, pickSelectionParams(restParams) as any); // select / populate\r\n\r\n    // Validation\r\n    if (!data) {\r\n      throw new Error('Create requires data attribute');\r\n    }\r\n\r\n    const validData = await entityValidator.validateEntityCreation(contentType, data, {\r\n      // Note: publishedAt value will always be set when DP is disabled\r\n      isDraft: !params?.data?.publishedAt,\r\n      locale: params?.locale,\r\n    });\r\n\r\n    // Component handling\r\n    const componentData = await components.createComponents(uid, validData);\r\n    const dataWithComponents = components.assignComponentData(\r\n      contentType,\r\n      componentData,\r\n      validData\r\n    );\r\n\r\n    const entryData = applyTransforms(contentType, dataWithComponents);\r\n\r\n    const doc = await strapi.db.query(uid).create({ ...query, data: entryData });\r\n\r\n    return doc;\r\n  }\r\n\r\n  async function deleteEntry(id: number) {\r\n    const componentsToDelete = await components.getComponents(uid, { id });\r\n\r\n    const deletedEntry = await strapi.db.query(uid).delete({ where: { id } });\r\n\r\n    await components.deleteComponents(uid, componentsToDelete as any, { loadComponents: false });\r\n\r\n    return deletedEntry;\r\n  }\r\n\r\n  async function updateEntry(entryToUpdate: any, params = {} as any) {\r\n    const { data, ...restParams } = await transformParamsDocumentId(uid, params);\r\n    const query = transformParamsToQuery(uid, pickSelectionParams(restParams) as any); // select / populate\r\n\r\n    const validData = await entityValidator.validateEntityUpdate(\r\n      contentType,\r\n      data,\r\n      {\r\n        isDraft: !params?.data?.publishedAt, // Always update the draft version\r\n        locale: params?.locale,\r\n      },\r\n      entryToUpdate\r\n    );\r\n    // Component handling\r\n    const componentData = await components.updateComponents(uid, entryToUpdate, validData as any);\r\n    const dataWithComponents = components.assignComponentData(\r\n      contentType,\r\n      componentData,\r\n      validData\r\n    );\r\n\r\n    const entryData = applyTransforms(contentType, dataWithComponents);\r\n\r\n    return strapi.db\r\n      .query(uid)\r\n      .update({ ...query, where: { id: entryToUpdate.id }, data: entryData });\r\n  }\r\n\r\n  async function publishEntry(entry: any, params = {} as any) {\r\n    return async.pipe(\r\n      omit('id'),\r\n      assoc('publishedAt', new Date()),\r\n      (draft) => {\r\n        const opts = { uid, locale: draft.locale, status: 'published', allowMissingId: true };\r\n        return transformData(draft, opts);\r\n      },\r\n      // Create the published entry\r\n      (draft) => createEntry({ ...params, data: draft, locale: draft.locale, status: 'published' })\r\n    )(entry);\r\n  }\r\n\r\n  async function discardDraftEntry(entry: any, params = {} as any) {\r\n    return async.pipe(\r\n      omit('id'),\r\n      assoc('publishedAt', null),\r\n      (entry) => {\r\n        const opts = { uid, locale: entry.locale, status: 'draft', allowMissingId: true };\r\n        return transformData(entry, opts);\r\n      },\r\n      // Create the draft entry\r\n      (data) => createEntry({ ...params, locale: data.locale, data, status: 'draft' })\r\n    )(entry);\r\n  }\r\n\r\n  return {\r\n    create: createEntry,\r\n    delete: deleteEntry,\r\n    update: updateEntry,\r\n    publish: publishEntry,\r\n    discardDraft: discardDraftEntry,\r\n  };\r\n};\r\n\r\nexport { createEntriesService };\r\n"],"names":["params","data","transformParamsDocumentId","query","transformParamsToQuery","pickSelectionParams","components.createComponents","components.assignComponentData","applyTransforms","components.getComponents","components.deleteComponents","components.updateComponents","async","omit","assoc","transformData","entry"],"mappings":";;;;;;;;;;AAYM,MAAA,uBAAuB,CAC3B,KACA,oBACG;AACG,QAAA,cAAc,OAAO,YAAY,GAAG;AAE3B,iBAAA,YAAYA,WAAS,IAAW;AACvC,UAAA,EAAE,MAAAC,OAAM,GAAG,WAAA,IAAe,MAAMC,YAAA,0BAA0B,KAAKF,QAAM;AAE3E,UAAMG,UAAQC,MAAA,uBAAuB,KAAKC,OAAA,oBAAoB,UAAU,CAAQ;AAGhF,QAAI,CAACJ,OAAM;AACH,YAAA,IAAI,MAAM,gCAAgC;AAAA,IAAA;AAGlD,UAAM,YAAY,MAAM,gBAAgB,uBAAuB,aAAaA,OAAM;AAAA;AAAA,MAEhF,SAAS,CAACD,UAAQ,MAAM;AAAA,MACxB,QAAQA,UAAQ;AAAA,IAAA,CACjB;AAGD,UAAM,gBAAgB,MAAMM,4BAA4B,KAAK,SAAS;AACtE,UAAM,qBAAqBC,WAAW;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEM,UAAA,YAAYC,MAAAA,gBAAgB,aAAa,kBAAkB;AAEjE,UAAM,MAAM,MAAM,OAAO,GAAG,MAAM,GAAG,EAAE,OAAO,EAAE,GAAGL,SAAO,MAAM,WAAW;AAEpE,WAAA;AAAA,EAAA;AAGT,iBAAe,YAAY,IAAY;AACrC,UAAM,qBAAqB,MAAMM,WAAAA,cAAyB,KAAK,EAAE,IAAI;AAErE,UAAM,eAAe,MAAM,OAAO,GAAG,MAAM,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;AAExE,UAAMC,WAAAA,iBAA4B,KAAK,oBAA2B,EAAE,gBAAgB,OAAO;AAEpF,WAAA;AAAA,EAAA;AAGT,iBAAe,YAAY,eAAoBV,WAAS,IAAW;AAC3D,UAAA,EAAE,MAAAC,OAAM,GAAG,WAAA,IAAe,MAAMC,YAAA,0BAA0B,KAAKF,QAAM;AAC3E,UAAMG,UAAQC,MAAA,uBAAuB,KAAKC,OAAA,oBAAoB,UAAU,CAAQ;AAE1E,UAAA,YAAY,MAAM,gBAAgB;AAAA,MACtC;AAAA,MACAJ;AAAA,MACA;AAAA,QACE,SAAS,CAACD,UAAQ,MAAM;AAAA;AAAA,QACxB,QAAQA,UAAQ;AAAA,MAClB;AAAA,MACA;AAAA,IACF;AAEA,UAAM,gBAAgB,MAAMW,WAAAA,iBAA4B,KAAK,eAAe,SAAgB;AAC5F,UAAM,qBAAqBJ,WAAW;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEM,UAAA,YAAYC,MAAAA,gBAAgB,aAAa,kBAAkB;AAEjE,WAAO,OAAO,GACX,MAAM,GAAG,EACT,OAAO,EAAE,GAAGL,SAAO,OAAO,EAAE,IAAI,cAAc,MAAM,MAAM,WAAW;AAAA,EAAA;AAG1E,iBAAe,aAAa,OAAYH,UAAS,IAAW;AAC1D,WAAOY,YAAM,MAAA;AAAA,MACXC,GAAAA,KAAK,IAAI;AAAA,MACTC,SAAM,eAAmB,oBAAA,MAAM;AAAA,MAC/B,CAAC,UAAU;AACH,cAAA,OAAO,EAAE,KAAK,QAAQ,MAAM,QAAQ,QAAQ,aAAa,gBAAgB,KAAK;AAC7E,eAAAC,KAAA,cAAc,OAAO,IAAI;AAAA,MAClC;AAAA;AAAA,MAEA,CAAC,UAAU,YAAY,EAAE,GAAGf,SAAQ,MAAM,OAAO,QAAQ,MAAM,QAAQ,QAAQ,YAAa,CAAA;AAAA,MAC5F,KAAK;AAAA,EAAA;AAGT,iBAAe,kBAAkB,OAAYA,UAAS,IAAW;AAC/D,WAAOY,YAAM,MAAA;AAAA,MACXC,GAAAA,KAAK,IAAI;AAAA,MACTC,GAAA,MAAM,eAAe,IAAI;AAAA,MACzB,CAACE,WAAU;AACH,cAAA,OAAO,EAAE,KAAK,QAAQA,OAAM,QAAQ,QAAQ,SAAS,gBAAgB,KAAK;AACzE,eAAAD,KAAA,cAAcC,QAAO,IAAI;AAAA,MAClC;AAAA;AAAA,MAEA,CAACf,UAAS,YAAY,EAAE,GAAGD,SAAQ,QAAQC,MAAK,QAAQ,MAAAA,OAAM,QAAQ,QAAS,CAAA;AAAA,MAC/E,KAAK;AAAA,EAAA;AAGF,SAAA;AAAA,IACL,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,cAAc;AAAA,EAChB;AACF;;"}