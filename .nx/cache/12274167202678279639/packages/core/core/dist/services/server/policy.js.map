{"version":3,"file":"policy.js","sources":["../../../src/services/server/policy.ts"],"sourcesContent":["import { policy as policyUtils, errors } from '@strapi/utils';\r\nimport type { Core } from '@strapi/types';\r\n\r\nconst createPolicicesMiddleware = (route: Core.Route, strapi: Core.Strapi) => {\r\n  const policiesConfig = route?.config?.policies ?? [];\r\n  const resolvedPolicies = strapi.get('policies').resolve(policiesConfig, route.info);\r\n\r\n  const policiesMiddleware: Core.MiddlewareHandler = async (ctx, next) => {\r\n    const context = policyUtils.createPolicyContext('koa', ctx);\r\n\r\n    for (const { handler, config } of resolvedPolicies) {\r\n      const result = await handler(context, config, { strapi });\r\n\r\n      if (![true, undefined].includes(result)) {\r\n        throw new errors.PolicyError();\r\n      }\r\n    }\r\n\r\n    await next();\r\n  };\r\n\r\n  return policiesMiddleware;\r\n};\r\n\r\nexport { createPolicicesMiddleware };\r\n"],"names":["policyUtils","errors"],"mappings":";;;AAGM,MAAA,4BAA4B,CAAC,OAAmB,WAAwB;AAC5E,QAAM,iBAAiB,OAAO,QAAQ,YAAY,CAAC;AAC7C,QAAA,mBAAmB,OAAO,IAAI,UAAU,EAAE,QAAQ,gBAAgB,MAAM,IAAI;AAE5E,QAAA,qBAA6C,OAAO,KAAK,SAAS;AACtE,UAAM,UAAUA,YAAA,OAAY,oBAAoB,OAAO,GAAG;AAE1D,eAAW,EAAE,SAAS,OAAO,KAAK,kBAAkB;AAClD,YAAM,SAAS,MAAM,QAAQ,SAAS,QAAQ,EAAE,QAAQ;AAExD,UAAI,CAAC,CAAC,MAAM,MAAS,EAAE,SAAS,MAAM,GAAG;AACjC,cAAA,IAAIC,mBAAO,YAAY;AAAA,MAAA;AAAA,IAC/B;AAGF,UAAM,KAAK;AAAA,EACb;AAEO,SAAA;AACT;;"}