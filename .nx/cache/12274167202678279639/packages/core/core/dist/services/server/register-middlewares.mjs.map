{"version":3,"file":"register-middlewares.mjs","sources":["../../../src/services/server/register-middlewares.ts"],"sourcesContent":["import { yup } from '@strapi/utils';\r\nimport type { Core } from '@strapi/types';\r\nimport { resolveMiddlewares } from './middleware';\r\n\r\ntype MiddlewareConfig = (string | { name?: string; resolve?: string; config?: unknown })[];\r\n\r\nconst defaultConfig = [\r\n  'strapi::logger',\r\n  'strapi::errors',\r\n  'strapi::security',\r\n  'strapi::cors',\r\n  'strapi::poweredBy',\r\n  'strapi::session',\r\n  'strapi::query',\r\n  'strapi::body',\r\n  'strapi::favicon',\r\n  'strapi::public',\r\n];\r\n\r\nconst requiredMiddlewares = [\r\n  'strapi::errors',\r\n  'strapi::security',\r\n  'strapi::cors',\r\n  'strapi::query',\r\n  'strapi::body',\r\n  'strapi::public',\r\n  'strapi::favicon',\r\n];\r\n\r\nconst middlewareConfigSchema = yup.array().of(\r\n  yup.lazy((value) => {\r\n    if (typeof value === 'string') {\r\n      return yup.string().required();\r\n    }\r\n\r\n    if (typeof value === 'object') {\r\n      return yup\r\n        .object({\r\n          name: yup.string(),\r\n          resolve: yup.string(),\r\n          config: yup.mixed(),\r\n        })\r\n        .required()\r\n        .noUnknown();\r\n    }\r\n\r\n    return yup.mixed().test(() => false);\r\n  }) as any // FIXME: yup v1\r\n);\r\n\r\n/**\r\n * Register middlewares in router\r\n */\r\nconst registerApplicationMiddlewares = async (strapi: Core.Strapi) => {\r\n  const middlewareConfig: MiddlewareConfig = strapi.config.get('middlewares', defaultConfig);\r\n\r\n  await validateMiddlewareConfig(middlewareConfig);\r\n\r\n  const middlewares = await resolveMiddlewares(middlewareConfig, strapi);\r\n\r\n  checkRequiredMiddlewares(middlewares);\r\n\r\n  // NOTE: exclude middlewares that return nothing.\r\n  // this is used for middlewares that only extend the app only need to be added in certain conditions\r\n  for (const middleware of middlewares) {\r\n    strapi.server.use(middleware.handler);\r\n  }\r\n};\r\n\r\n/**\r\n *\r\n * @param {MiddlewaresConfig} config\r\n */\r\nconst validateMiddlewareConfig = async (config: MiddlewareConfig) => {\r\n  try {\r\n    await middlewareConfigSchema.validate(config, { strict: true, abortEarly: false });\r\n  } catch (error) {\r\n    throw new Error(\r\n      'Invalid middleware configuration. Expected Array<string|{name?: string, resolve?: string, config: any}.'\r\n    );\r\n  }\r\n};\r\n\r\n/**\r\n * Check if some required middlewares are missing in configure middlewares\r\n * @param {Middlewares} middlewares\r\n */\r\nconst checkRequiredMiddlewares = (middlewares: { name: string | null }[]) => {\r\n  const missingMiddlewares = requiredMiddlewares.filter((name) => {\r\n    return middlewares.findIndex((mdl) => mdl.name === name) === -1;\r\n  });\r\n\r\n  if (missingMiddlewares.length > 0) {\r\n    throw new Error(\r\n      `Missing required middlewares in configuration. Add the following middlewares: \"${missingMiddlewares.join(\r\n        ', '\r\n      )}\".`\r\n    );\r\n  }\r\n};\r\n\r\nexport default registerApplicationMiddlewares;\r\n"],"names":[],"mappings":";;AAMA,MAAM,gBAAgB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,MAAM,sBAAsB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,MAAM,yBAAyB,IAAI,MAAA,EAAQ;AAAA,EACzC,IAAI,KAAK,CAAC,UAAU;AACd,QAAA,OAAO,UAAU,UAAU;AACtB,aAAA,IAAI,OAAO,EAAE,SAAS;AAAA,IAAA;AAG3B,QAAA,OAAO,UAAU,UAAU;AAC7B,aAAO,IACJ,OAAO;AAAA,QACN,MAAM,IAAI,OAAO;AAAA,QACjB,SAAS,IAAI,OAAO;AAAA,QACpB,QAAQ,IAAI,MAAM;AAAA,MAAA,CACnB,EACA,SAAS,EACT,UAAU;AAAA,IAAA;AAGf,WAAO,IAAI,MAAA,EAAQ,KAAK,MAAM,KAAK;AAAA,EACpC,CAAA;AAAA;AACH;AAKM,MAAA,iCAAiC,OAAO,WAAwB;AACpE,QAAM,mBAAqC,OAAO,OAAO,IAAI,eAAe,aAAa;AAEzF,QAAM,yBAAyB,gBAAgB;AAE/C,QAAM,cAAc,MAAM,mBAAmB,kBAAkB,MAAM;AAErE,2BAAyB,WAAW;AAIpC,aAAW,cAAc,aAAa;AAC7B,WAAA,OAAO,IAAI,WAAW,OAAO;AAAA,EAAA;AAExC;AAMA,MAAM,2BAA2B,OAAO,WAA6B;AAC/D,MAAA;AACI,UAAA,uBAAuB,SAAS,QAAQ,EAAE,QAAQ,MAAM,YAAY,OAAO;AAAA,WAC1E,OAAO;AACd,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EAAA;AAEJ;AAMA,MAAM,2BAA2B,CAAC,gBAA2C;AAC3E,QAAM,qBAAqB,oBAAoB,OAAO,CAAC,SAAS;AAC9D,WAAO,YAAY,UAAU,CAAC,QAAQ,IAAI,SAAS,IAAI,MAAM;AAAA,EAAA,CAC9D;AAEG,MAAA,mBAAmB,SAAS,GAAG;AACjC,UAAM,IAAI;AAAA,MACR,kFAAkF,mBAAmB;AAAA,QACnG;AAAA,MAAA,CACD;AAAA,IACH;AAAA,EAAA;AAEJ;"}