{"version":3,"file":"middleware.js","sources":["../../../src/services/metrics/middleware.ts"],"sourcesContent":["import type { Core } from '@strapi/types';\r\nimport type { Sender } from './sender';\r\n\r\ninterface State {\r\n  currentDay: number | null;\r\n  counter: number;\r\n}\r\n\r\nconst createMiddleware = ({ sendEvent }: { sendEvent: Sender }) => {\r\n  const state: State = {\r\n    currentDay: null,\r\n    counter: 0,\r\n  };\r\n\r\n  const middleware: Core.MiddlewareHandler = async (ctx, next) => {\r\n    const { url, method } = ctx.request;\r\n\r\n    if (!url.includes('.') && ['GET', 'PUT', 'POST', 'DELETE'].includes(method)) {\r\n      const dayOfMonth = new Date().getDate();\r\n\r\n      if (dayOfMonth !== state.currentDay) {\r\n        state.currentDay = dayOfMonth;\r\n        state.counter = 0;\r\n      }\r\n\r\n      // Send max. 1000 events per day.\r\n      if (state.counter < 1000) {\r\n        sendEvent('didReceiveRequest', { eventProperties: { url: ctx.request.url } });\r\n\r\n        // Increase counter.\r\n        state.counter += 1;\r\n      }\r\n    }\r\n\r\n    await next();\r\n  };\r\n\r\n  return middleware;\r\n};\r\n\r\nexport default createMiddleware;\r\n"],"names":[],"mappings":";AAQA,MAAM,mBAAmB,CAAC,EAAE,gBAAuC;AACjE,QAAM,QAAe;AAAA,IACnB,YAAY;AAAA,IACZ,SAAS;AAAA,EACX;AAEM,QAAA,aAAqC,OAAO,KAAK,SAAS;AAC9D,UAAM,EAAE,KAAK,OAAO,IAAI,IAAI;AAE5B,QAAI,CAAC,IAAI,SAAS,GAAG,KAAK,CAAC,OAAO,OAAO,QAAQ,QAAQ,EAAE,SAAS,MAAM,GAAG;AAC3E,YAAM,cAAa,oBAAI,KAAK,GAAE,QAAQ;AAElC,UAAA,eAAe,MAAM,YAAY;AACnC,cAAM,aAAa;AACnB,cAAM,UAAU;AAAA,MAAA;AAId,UAAA,MAAM,UAAU,KAAM;AACd,kBAAA,qBAAqB,EAAE,iBAAiB,EAAE,KAAK,IAAI,QAAQ,IAAI,GAAG;AAG5E,cAAM,WAAW;AAAA,MAAA;AAAA,IACnB;AAGF,UAAM,KAAK;AAAA,EACb;AAEO,SAAA;AACT;;"}