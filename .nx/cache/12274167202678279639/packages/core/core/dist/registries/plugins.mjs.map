{"version":3,"file":"plugins.mjs","sources":["../../src/registries/plugins.ts"],"sourcesContent":["import { has } from 'lodash/fp';\r\n\r\nimport type { Core } from '@strapi/types';\r\n\r\ntype PluginMap = Record<string, Core.Plugin>;\r\n\r\nconst pluginsRegistry = (strapi: Core.Strapi) => {\r\n  const plugins: PluginMap = {};\r\n\r\n  return {\r\n    get(name: string) {\r\n      return plugins[name];\r\n    },\r\n    getAll() {\r\n      return plugins;\r\n    },\r\n    add(name: string, pluginConfig: Core.Plugin) {\r\n      if (has(name, plugins)) {\r\n        throw new Error(`Plugin ${name} has already been registered.`);\r\n      }\r\n\r\n      const pluginModule = strapi.get('modules').add(`plugin::${name}`, pluginConfig);\r\n      plugins[name] = pluginModule;\r\n\r\n      return plugins[name];\r\n    },\r\n  };\r\n};\r\n\r\nexport default pluginsRegistry;\r\n"],"names":[],"mappings":";AAMM,MAAA,kBAAkB,CAAC,WAAwB;AAC/C,QAAM,UAAqB,CAAC;AAErB,SAAA;AAAA,IACL,IAAI,MAAc;AAChB,aAAO,QAAQ,IAAI;AAAA,IACrB;AAAA,IACA,SAAS;AACA,aAAA;AAAA,IACT;AAAA,IACA,IAAI,MAAc,cAA2B;AACvC,UAAA,IAAI,MAAM,OAAO,GAAG;AACtB,cAAM,IAAI,MAAM,UAAU,IAAI,+BAA+B;AAAA,MAAA;AAGzD,YAAA,eAAe,OAAO,IAAI,SAAS,EAAE,IAAI,WAAW,IAAI,IAAI,YAAY;AAC9E,cAAQ,IAAI,IAAI;AAEhB,aAAO,QAAQ,IAAI;AAAA,IAAA;AAAA,EAEvB;AACF;"}