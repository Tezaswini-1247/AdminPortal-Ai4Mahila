{"version":3,"file":"compile.mjs","sources":["../src/compile.ts"],"sourcesContent":["import tsUtils from '@strapi/typescript-utils';\r\n\r\ninterface Options {\r\n  appDir?: string;\r\n  ignoreDiagnostics?: boolean;\r\n}\r\n\r\nexport default async function compile(options?: Options) {\r\n  const { appDir = process.cwd(), ignoreDiagnostics = false } = options ?? {};\r\n  const isTSProject = await tsUtils.isUsingTypeScript(appDir);\r\n  const outDir = await tsUtils.resolveOutDir(appDir);\r\n\r\n  if (isTSProject) {\r\n    await tsUtils.compile(appDir, {\r\n      configOptions: { options: { incremental: true }, ignoreDiagnostics },\r\n    });\r\n  }\r\n\r\n  const distDir = isTSProject ? outDir : appDir;\r\n\r\n  return { appDir, distDir };\r\n}\r\n"],"names":[],"mappings":";AAOA,eAA8B,QAAQ,SAAmB;AACjD,QAAA,EAAE,SAAS,QAAQ,IAAA,GAAO,oBAAoB,MAAA,IAAU,WAAW,CAAC;AAC1E,QAAM,cAAc,MAAM,QAAQ,kBAAkB,MAAM;AAC1D,QAAM,SAAS,MAAM,QAAQ,cAAc,MAAM;AAEjD,MAAI,aAAa;AACT,UAAA,QAAQ,QAAQ,QAAQ;AAAA,MAC5B,eAAe,EAAE,SAAS,EAAE,aAAa,QAAQ,kBAAkB;AAAA,IAAA,CACpE;AAAA,EAAA;AAGG,QAAA,UAAU,cAAc,SAAS;AAEhC,SAAA,EAAE,QAAQ,QAAQ;AAC3B;"}