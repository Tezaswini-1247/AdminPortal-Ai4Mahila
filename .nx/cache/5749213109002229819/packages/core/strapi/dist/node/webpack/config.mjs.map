{"version":3,"file":"config.mjs","sources":["../../../src/node/webpack/config.ts"],"sourcesContent":["import ReactRefreshWebpackPlugin from '@pmmmwh/react-refresh-webpack-plugin';\r\nimport browserslistToEsbuild from 'browserslist-to-esbuild';\r\nimport { ESBuildMinifyPlugin } from 'esbuild-loader';\r\nimport ForkTsCheckerPlugin from 'fork-ts-checker-webpack-plugin';\r\nimport HtmlWebpackPlugin from 'html-webpack-plugin';\r\nimport MiniCssExtractPlugin from 'mini-css-extract-plugin';\r\nimport crypto from 'node:crypto';\r\nimport path from 'node:path';\r\nimport readPkgUp from 'read-pkg-up';\r\nimport {\r\n  Configuration,\r\n  DefinePlugin,\r\n  HotModuleReplacementPlugin,\r\n  WebpackPluginInstance,\r\n} from 'webpack';\r\nimport { BundleAnalyzerPlugin } from 'webpack-bundle-analyzer';\r\n\r\nimport { loadStrapiMonorepo } from '../core/monorepo';\r\nimport type { BuildContext } from '../create-build-context';\r\nimport { getUserConfig } from '../core/config';\r\nimport { getMonorepoAliases } from '../core/aliases';\r\n\r\nconst resolveBaseConfig = async (ctx: BuildContext) => {\r\n  const target = browserslistToEsbuild(ctx.target);\r\n\r\n  return {\r\n    experiments: {\r\n      topLevelAwait: true,\r\n    },\r\n    entry: {\r\n      main: [`./${ctx.entry}`],\r\n    },\r\n    resolve: {\r\n      alias: {\r\n        react: getModulePath('react'),\r\n        'react-dom': getModulePath('react-dom'),\r\n        'styled-components': getModulePath('styled-components'),\r\n        'react-router-dom': getModulePath('react-router-dom'),\r\n      },\r\n      extensions: ['.js', '.jsx', '.react.js', '.ts', '.tsx'],\r\n    },\r\n    module: {\r\n      rules: [\r\n        {\r\n          test: /\\.(ts|tsx)$/,\r\n          loader: require.resolve('esbuild-loader'),\r\n          options: {\r\n            loader: 'tsx',\r\n            target,\r\n            jsx: 'automatic',\r\n          },\r\n        },\r\n        {\r\n          test: /\\.(js|jsx|mjs)$/,\r\n          use: {\r\n            loader: require.resolve('esbuild-loader'),\r\n            options: {\r\n              loader: 'jsx',\r\n              target,\r\n              jsx: 'automatic',\r\n            },\r\n          },\r\n        },\r\n        {\r\n          test: /\\.m?js/,\r\n          resolve: {\r\n            fullySpecified: false,\r\n          },\r\n        },\r\n        {\r\n          test: /\\.css$/i,\r\n          use: [require.resolve('style-loader'), require.resolve('css-loader')],\r\n        },\r\n        {\r\n          test: /\\.(svg|eot|otf|ttf|woff|woff2)$/,\r\n          type: 'asset/resource',\r\n        },\r\n        {\r\n          test: [/\\.bmp$/, /\\.gif$/, /\\.jpe?g$/, /\\.png$/, /\\.ico$/],\r\n          type: 'asset',\r\n          parser: {\r\n            dataUrlCondition: {\r\n              maxSize: 1000,\r\n            },\r\n          },\r\n        },\r\n        {\r\n          test: /\\.(mp4|webm)$/,\r\n          type: 'asset',\r\n          parser: {\r\n            dataUrlCondition: {\r\n              maxSize: 10000,\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    plugins: [\r\n      new HtmlWebpackPlugin({\r\n        inject: true,\r\n        template: path.resolve(ctx.runtimeDir, 'index.html'),\r\n      }),\r\n      new DefinePlugin(\r\n        Object.entries(ctx.env).reduce<Record<string, string>>((acc, [key, value]) => {\r\n          acc[`process.env.${key}`] = JSON.stringify(value);\r\n          return acc;\r\n        }, {})\r\n      ),\r\n      ctx.tsconfig &&\r\n        new ForkTsCheckerPlugin({\r\n          typescript: {\r\n            configFile: ctx.tsconfig.path,\r\n            configOverwrite: {\r\n              compilerOptions: {\r\n                sourceMap: ctx.options.sourcemaps,\r\n              },\r\n            },\r\n          },\r\n        }),\r\n    ].filter(Boolean),\r\n  };\r\n};\r\n\r\nconst resolveDevelopmentConfig = async (ctx: BuildContext): Promise<Configuration> => {\r\n  const baseConfig = await resolveBaseConfig(ctx);\r\n  const monorepo = await loadStrapiMonorepo(ctx.cwd);\r\n\r\n  return {\r\n    ...baseConfig,\r\n    cache: {\r\n      type: 'filesystem',\r\n      // version cache when there are changes to aliases\r\n      buildDependencies: {\r\n        config: [__filename],\r\n      },\r\n      version: crypto\r\n        .createHash('md5')\r\n        .update(Object.entries(baseConfig.resolve.alias ?? {}).join())\r\n        .digest('hex'),\r\n    },\r\n    resolve: {\r\n      ...baseConfig.resolve,\r\n      alias: {\r\n        ...baseConfig.resolve.alias,\r\n        ...getMonorepoAliases({ monorepo }),\r\n      },\r\n    },\r\n    entry: {\r\n      ...baseConfig.entry,\r\n      main: [\r\n        `${require.resolve('webpack-hot-middleware/client')}?path=/__webpack_hmr`,\r\n        ...baseConfig.entry.main,\r\n      ],\r\n    },\r\n    stats: 'errors-warnings',\r\n    mode: 'development',\r\n    devtool: 'inline-source-map',\r\n    output: {\r\n      filename: '[name].js',\r\n      path: ctx.distPath,\r\n      publicPath: ctx.basePath,\r\n    },\r\n    infrastructureLogging: {\r\n      level: 'error',\r\n    },\r\n    plugins: [\r\n      ...baseConfig.plugins,\r\n      new HotModuleReplacementPlugin(),\r\n      new ReactRefreshWebpackPlugin(),\r\n    ],\r\n  };\r\n};\r\n\r\nconst resolveProductionConfig = async (ctx: BuildContext): Promise<Configuration> => {\r\n  const target = browserslistToEsbuild(ctx.target);\r\n\r\n  const baseConfig = await resolveBaseConfig(ctx);\r\n\r\n  return {\r\n    ...baseConfig,\r\n    stats: 'errors-only',\r\n    mode: 'production',\r\n    bail: true,\r\n    devtool: ctx.options.sourcemaps ? 'source-map' : false,\r\n    output: {\r\n      path: ctx.distPath,\r\n      publicPath: ctx.basePath,\r\n      // Utilize long-term caching by adding content hashes (not compilation hashes)\r\n      // to compiled assets for production\r\n      filename: '[name].[contenthash:8].js',\r\n      chunkFilename: '[name].[contenthash:8].chunk.js',\r\n    },\r\n    optimization: {\r\n      minimize: ctx.options.minify,\r\n      minimizer: [\r\n        new ESBuildMinifyPlugin({\r\n          target,\r\n          css: true, // Apply minification to CSS assets\r\n        }),\r\n      ],\r\n      moduleIds: 'deterministic',\r\n      runtimeChunk: true,\r\n    },\r\n    plugins: [\r\n      ...baseConfig.plugins,\r\n      new MiniCssExtractPlugin({\r\n        filename: '[name].[chunkhash].css',\r\n        chunkFilename: '[name].[chunkhash].chunkhash.css',\r\n        ignoreOrder: true,\r\n      }),\r\n      ctx.options.stats && (new BundleAnalyzerPlugin() as unknown as WebpackPluginInstance), // TODO: find out if this is an actual issue or just a ts bug\r\n    ].filter(Boolean),\r\n  };\r\n};\r\n\r\nconst USER_CONFIGS = ['webpack.config.js', 'webpack.config.mjs', 'webpack.config.ts'];\r\n\r\ntype UserWebpackConfig = (config: Configuration, webpack: unknown) => Configuration;\r\n\r\nconst mergeConfigWithUserConfig = async (config: Configuration, ctx: BuildContext) => {\r\n  const userConfig = await getUserConfig<UserWebpackConfig>(USER_CONFIGS, ctx);\r\n\r\n  if (userConfig) {\r\n    if (typeof userConfig === 'function') {\r\n      const webpack = await import('webpack');\r\n      return userConfig(config, webpack);\r\n    }\r\n\r\n    ctx.logger.warn(\r\n      `You've exported something other than a function from ${path.join(\r\n        ctx.appDir,\r\n        'src',\r\n        'admin',\r\n        'webpack.config'\r\n      )}, this will ignored.`\r\n    );\r\n  }\r\n\r\n  return config;\r\n};\r\n\r\n/**\r\n * @internal This function is used to resolve the path of a module.\r\n * It mimics what vite does internally already.\r\n */\r\nconst getModulePath = (mod: string) => {\r\n  const modulePath = require.resolve(mod);\r\n  const pkg = readPkgUp.sync({ cwd: path.dirname(modulePath) });\r\n  return pkg ? path.dirname(pkg.path) : modulePath;\r\n};\r\n\r\nexport { mergeConfigWithUserConfig, resolveDevelopmentConfig, resolveProductionConfig };\r\n"],"names":[],"mappings":"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"}