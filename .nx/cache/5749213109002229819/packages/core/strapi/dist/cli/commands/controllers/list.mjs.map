{"version":3,"file":"list.mjs","sources":["../../../../src/cli/commands/controllers/list.ts"],"sourcesContent":["import { createCommand } from 'commander';\r\nimport CLITable from 'cli-table3';\r\nimport chalk from 'chalk';\r\n\r\nimport { createStrapi, compileStrapi } from '@strapi/core';\r\n\r\nimport type { StrapiCommand } from '../../types';\r\nimport { runAction } from '../../utils/helpers';\r\n\r\nconst action = async () => {\r\n  const appContext = await compileStrapi();\r\n  const app = await createStrapi(appContext).register();\r\n\r\n  const list = app.get('controllers').keys();\r\n\r\n  const infoTable = new CLITable({\r\n    head: [chalk.blue('Name')],\r\n  });\r\n\r\n  list.forEach((name: string) => infoTable.push([name]));\r\n\r\n  console.log(infoTable.toString());\r\n\r\n  await app.destroy();\r\n};\r\n\r\n/**\r\n * `$ strapi controllers:list`\r\n */\r\nconst command: StrapiCommand = () => {\r\n  return createCommand('controllers:list')\r\n    .description('List all the application controllers')\r\n    .action(runAction('controllers:list', action));\r\n};\r\n\r\nexport { action, command };\r\n"],"names":[],"mappings":";;;;;AASA,MAAM,SAAS,YAAY;AACnB,QAAA,aAAa,MAAM,cAAc;AACvC,QAAM,MAAM,MAAM,aAAa,UAAU,EAAE,SAAS;AAEpD,QAAM,OAAO,IAAI,IAAI,aAAa,EAAE,KAAK;AAEnC,QAAA,YAAY,IAAI,SAAS;AAAA,IAC7B,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC;AAAA,EAAA,CAC1B;AAEI,OAAA,QAAQ,CAAC,SAAiB,UAAU,KAAK,CAAC,IAAI,CAAC,CAAC;AAE7C,UAAA,IAAI,UAAU,UAAU;AAEhC,QAAM,IAAI,QAAQ;AACpB;AAKA,MAAM,UAAyB,MAAM;AAC5B,SAAA,cAAc,kBAAkB,EACpC,YAAY,sCAAsC,EAClD,OAAO,UAAU,oBAAoB,MAAM,CAAC;AACjD;"}