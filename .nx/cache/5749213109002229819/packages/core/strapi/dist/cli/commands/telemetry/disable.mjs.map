{"version":3,"file":"disable.mjs","sources":["../../../../src/cli/commands/telemetry/disable.ts"],"sourcesContent":["import { resolve } from 'path';\r\nimport fse from 'fs-extra';\r\nimport chalk from 'chalk';\r\nimport { createCommand } from 'commander';\r\n\r\nimport type { StrapiCommand } from '../../types';\r\nimport { runAction } from '../../utils/helpers';\r\nimport { sendEvent } from '../../utils/telemetry';\r\n\r\nconst readPackageJSON = async (path: string) => {\r\n  try {\r\n    const packageObj = await fse.readJson(path);\r\n    const uuid = packageObj.strapi ? packageObj.strapi.uuid : null;\r\n\r\n    return { uuid, packageObj };\r\n  } catch (err) {\r\n    if (err instanceof Error) {\r\n      console.error(`${chalk.red('Error')}: ${err.message}`);\r\n    }\r\n  }\r\n};\r\n\r\nconst writePackageJSON = async (path: string, file: object, spacing: number) => {\r\n  try {\r\n    await fse.writeJson(path, file, { spaces: spacing });\r\n    return true;\r\n  } catch (err) {\r\n    if (err instanceof Error) {\r\n      console.error(`${chalk.red('Error')}: ${err.message}`);\r\n    }\r\n  }\r\n};\r\n\r\nconst action = async () => {\r\n  const packageJSONPath = resolve(process.cwd(), 'package.json');\r\n  const exists = await fse.pathExists(packageJSONPath);\r\n\r\n  if (!exists) {\r\n    console.log(`${chalk.yellow('Warning')}: could not find package.json`);\r\n    process.exit(0);\r\n  }\r\n\r\n  const { uuid, packageObj } = (await readPackageJSON(packageJSONPath)) ?? {};\r\n\r\n  if ((packageObj.strapi && packageObj.strapi.telemetryDisabled) || !uuid) {\r\n    console.log(`${chalk.yellow('Warning:')} telemetry is already disabled`);\r\n    process.exit(0);\r\n  }\r\n\r\n  const updatedPackageJSON = {\r\n    ...packageObj,\r\n    strapi: {\r\n      ...packageObj.strapi,\r\n      telemetryDisabled: true,\r\n    },\r\n  };\r\n\r\n  const write = await writePackageJSON(packageJSONPath, updatedPackageJSON, 2);\r\n\r\n  if (!write) {\r\n    console.log(\r\n      `${chalk.yellow(\r\n        'Warning'\r\n      )}: There has been an error, please set \"telemetryDisabled\": true in the \"strapi\" object of your package.json manually.`\r\n    );\r\n    process.exit(0);\r\n  }\r\n\r\n  await sendEvent('didOptOutTelemetry', uuid);\r\n  console.log(`${chalk.green('Successfully opted out of Strapi telemetry')}`);\r\n  process.exit(0);\r\n};\r\n\r\n/**\r\n * `$ strapi telemetry:disable`\r\n */\r\nconst command: StrapiCommand = () => {\r\n  return createCommand('telemetry:disable')\r\n    .description('Disable anonymous telemetry and metadata sending to Strapi analytics')\r\n    .action(runAction('telemetry:disable', action));\r\n};\r\n\r\nexport { action, command };\r\n"],"names":[],"mappings":";;;;;;AASA,MAAM,kBAAkB,OAAO,SAAiB;AAC1C,MAAA;AACF,UAAM,aAAa,MAAM,IAAI,SAAS,IAAI;AAC1C,UAAM,OAAO,WAAW,SAAS,WAAW,OAAO,OAAO;AAEnD,WAAA,EAAE,MAAM,WAAW;AAAA,WACnB,KAAK;AACZ,QAAI,eAAe,OAAO;AAChB,cAAA,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,EAAE;AAAA,IAAA;AAAA,EACvD;AAEJ;AAEA,MAAM,mBAAmB,OAAO,MAAc,MAAc,YAAoB;AAC1E,MAAA;AACF,UAAM,IAAI,UAAU,MAAM,MAAM,EAAE,QAAQ,SAAS;AAC5C,WAAA;AAAA,WACA,KAAK;AACZ,QAAI,eAAe,OAAO;AAChB,cAAA,MAAM,GAAG,MAAM,IAAI,OAAO,CAAC,KAAK,IAAI,OAAO,EAAE;AAAA,IAAA;AAAA,EACvD;AAEJ;AAEA,MAAM,SAAS,YAAY;AACzB,QAAM,kBAAkB,QAAQ,QAAQ,IAAA,GAAO,cAAc;AAC7D,QAAM,SAAS,MAAM,IAAI,WAAW,eAAe;AAEnD,MAAI,CAAC,QAAQ;AACX,YAAQ,IAAI,GAAG,MAAM,OAAO,SAAS,CAAC,+BAA+B;AACrE,YAAQ,KAAK,CAAC;AAAA,EAAA;AAGV,QAAA,EAAE,MAAM,WAAW,IAAK,MAAM,gBAAgB,eAAe,KAAM,CAAC;AAE1E,MAAK,WAAW,UAAU,WAAW,OAAO,qBAAsB,CAAC,MAAM;AACvE,YAAQ,IAAI,GAAG,MAAM,OAAO,UAAU,CAAC,gCAAgC;AACvE,YAAQ,KAAK,CAAC;AAAA,EAAA;AAGhB,QAAM,qBAAqB;AAAA,IACzB,GAAG;AAAA,IACH,QAAQ;AAAA,MACN,GAAG,WAAW;AAAA,MACd,mBAAmB;AAAA,IAAA;AAAA,EAEvB;AAEA,QAAM,QAAQ,MAAM,iBAAiB,iBAAiB,oBAAoB,CAAC;AAE3E,MAAI,CAAC,OAAO;AACF,YAAA;AAAA,MACN,GAAG,MAAM;AAAA,QACP;AAAA,MAAA,CACD;AAAA,IACH;AACA,YAAQ,KAAK,CAAC;AAAA,EAAA;AAGV,QAAA,UAAU,sBAAsB,IAAI;AAC1C,UAAQ,IAAI,GAAG,MAAM,MAAM,4CAA4C,CAAC,EAAE;AAC1E,UAAQ,KAAK,CAAC;AAChB;AAKA,MAAM,UAAyB,MAAM;AAC5B,SAAA,cAAc,mBAAmB,EACrC,YAAY,sEAAsE,EAClF,OAAO,UAAU,qBAAqB,MAAM,CAAC;AAClD;"}