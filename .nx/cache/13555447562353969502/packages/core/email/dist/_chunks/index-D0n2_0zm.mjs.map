{"version":3,"file":"index-D0n2_0zm.mjs","sources":["../../admin/src/constants.ts","../../admin/src/utils/prefixPluginTranslations.ts","../../admin/src/index.ts"],"sourcesContent":["export const PERMISSIONS = {\r\n  // This permission regards the main component (App) and is used to tell\r\n  // If the plugin link should be displayed in the menu\r\n  // And also if the plugin is accessible. This use case is found when a user types the url of the\r\n  // plugin directly in the browser\r\n  settings: [{ action: 'plugin::email.settings.read', subject: null }],\r\n};\r\n","type TradOptions = Record<string, string>;\r\n\r\nconst prefixPluginTranslations = (trad: TradOptions, pluginId: string): TradOptions => {\r\n  if (!pluginId) {\r\n    throw new TypeError(\"pluginId can't be empty\");\r\n  }\r\n  return Object.keys(trad).reduce((acc, current) => {\r\n    acc[`${pluginId}.${current}`] = trad[current];\r\n    return acc;\r\n  }, {} as TradOptions);\r\n};\r\n\r\nexport { prefixPluginTranslations };\r\n","import { PERMISSIONS } from './constants';\r\nimport { prefixPluginTranslations } from './utils/prefixPluginTranslations';\r\n\r\nimport type { Plugin } from '@strapi/types';\r\n\r\nconst admin: Plugin.Config.AdminInput = {\r\n  // TODO typing app in strapi/types as every plugin needs it\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  register(app: any) {\r\n    // Create the email settings section\r\n    app.createSettingSection(\r\n      {\r\n        id: 'email',\r\n        intlLabel: { id: 'email.SettingsNav.section-label', defaultMessage: 'Email Plugin' },\r\n      },\r\n      [\r\n        {\r\n          intlLabel: {\r\n            id: 'email.Settings.email.plugin.title',\r\n            defaultMessage: 'Settings',\r\n          },\r\n          id: 'settings',\r\n          to: 'email',\r\n          Component: () =>\r\n            import('./pages/Settings').then((mod) => ({\r\n              default: mod.ProtectedSettingsPage,\r\n            })),\r\n          permissions: PERMISSIONS.settings,\r\n        },\r\n      ]\r\n    );\r\n    app.registerPlugin({\r\n      id: 'email',\r\n      name: 'email',\r\n    });\r\n  },\r\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n  bootstrap() {},\r\n  async registerTrads({ locales }: { locales: string[] }) {\r\n    const importedTrads = await Promise.all(\r\n      locales.map((locale) => {\r\n        return import(`./translations/${locale}.json`)\r\n          .then(({ default: data }) => {\r\n            return {\r\n              data: prefixPluginTranslations(data, 'email'),\r\n              locale,\r\n            };\r\n          })\r\n          .catch(() => {\r\n            return {\r\n              data: {},\r\n              locale,\r\n            };\r\n          });\r\n      })\r\n    );\r\n\r\n    return Promise.resolve(importedTrads);\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/no-default-export\r\nexport default admin;\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAO,MAAM,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA,EAKzB,UAAU,CAAC,EAAE,QAAQ,+BAA+B,SAAS,KAAM,CAAA;AACrE;ACJA,MAAM,2BAA2B,CAAC,MAAmB,aAAkC;AAIrF,SAAO,OAAO,KAAK,IAAI,EAAE,OAAO,CAAC,KAAK,YAAY;AAChD,QAAI,GAAG,QAAQ,IAAI,OAAO,EAAE,IAAI,KAAK,OAAO;AACrC,WAAA;AAAA,EACT,GAAG,EAAiB;AACtB;ACLA,MAAM,QAAkC;AAAA;AAAA;AAAA,EAGtC,SAAS,KAAU;AAEb,QAAA;AAAA,MACF;AAAA,QACE,IAAI;AAAA,QACJ,WAAW,EAAE,IAAI,mCAAmC,gBAAgB,eAAe;AAAA,MACrF;AAAA,MACA;AAAA,QACE;AAAA,UACE,WAAW;AAAA,YACT,IAAI;AAAA,YACJ,gBAAgB;AAAA,UAClB;AAAA,UACA,IAAI;AAAA,UACJ,IAAI;AAAA,UACJ,WAAW,MACT,OAAO,yBAAkB,EAAE,KAAK,CAAC,SAAS;AAAA,YACxC,SAAS,IAAI;AAAA,UAAA,EACb;AAAA,UACJ,aAAa,YAAY;AAAA,QAAA;AAAA,MAC3B;AAAA,IAEJ;AACA,QAAI,eAAe;AAAA,MACjB,IAAI;AAAA,MACJ,MAAM;AAAA,IAAA,CACP;AAAA,EACH;AAAA;AAAA,EAEA,YAAY;AAAA,EAAC;AAAA,EACb,MAAM,cAAc,EAAE,WAAkC;AAChD,UAAA,gBAAgB,MAAM,QAAQ;AAAA,MAClC,QAAQ,IAAI,CAAC,WAAW;AACf,eAAA,qCAA+B,uBAAA,OAAA,EAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,6BAAA,MAAA,OAAA,sBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,GAAA,+BAAA,MAAA,OAAA,wBAAA,GAAA,0BAAA,MAAA,OAAA,mBAAA,EAAA,CAAA,GAAA,kBAAA,MAAA,SAAA,CAAA,EACnC,KAAK,CAAC,EAAE,SAAS,KAAA,MAAW;AACpB,iBAAA;AAAA,YACL,MAAM,yBAAyB,MAAM,OAAO;AAAA,YAC5C;AAAA,UACF;AAAA,QAAA,CACD,EACA,MAAM,MAAM;AACJ,iBAAA;AAAA,YACL,MAAM,CAAC;AAAA,YACP;AAAA,UACF;AAAA,QAAA,CACD;AAAA,MACJ,CAAA;AAAA,IACH;AAEO,WAAA,QAAQ,QAAQ,aAAa;AAAA,EAAA;AAExC;"}