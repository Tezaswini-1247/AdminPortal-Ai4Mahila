{"version":3,"file":"index.js","sources":["../src/constants.ts","../src/formats/log-errors.ts","../src/formats/pretty-print.ts","../src/formats/level-filter.ts","../src/formats/exclude-colors.ts","../src/formats/detailed-log.ts","../src/configs/default-configuration.ts","../src/configs/output-file-configuration.ts","../src/index.ts"],"sourcesContent":["import { config } from 'winston';\r\n\r\nconst LEVELS = config.npm.levels;\r\nconst LEVEL_LABEL = 'silly';\r\nconst LEVEL = LEVELS[LEVEL_LABEL];\r\n\r\nexport { LEVEL, LEVEL_LABEL, LEVELS };\r\n","import { format, Logform } from 'winston';\r\n\r\nconst logErrors: Logform.FormatWrap = format((info) => {\r\n  if (info instanceof Error) {\r\n    return { ...info, message: `${info.message as string}${info.stack ? `\\n${info.stack}` : ''}` };\r\n  }\r\n\r\n  return info;\r\n});\r\n\r\nexport default logErrors;\r\n","import { format, Logform } from 'winston';\r\nimport logErrors from './log-errors';\r\n\r\nconst defaultTimestampFormat = 'YYYY-MM-DD HH:mm:ss.SSS';\r\n\r\nexport interface PrettyPrintOptions {\r\n  /**\r\n   * Enable or disable timestamps print if it's a boolean value. Use the given format for the timestamps if it's a string\r\n   */\r\n  timestamps?: Logform.TimestampOptions['format'] | boolean;\r\n  /**\r\n   * Enable or disable the use of colors for the log level\r\n   */\r\n  colors?: boolean;\r\n}\r\n\r\n/**\r\n * Create a pretty print formatter for a winston logger\r\n * @param options\r\n */\r\nexport default (options: PrettyPrintOptions = {}): Logform.Format => {\r\n  const { timestamps = true, colors = true } = options;\r\n\r\n  const handlers: Logform.Format[] = [];\r\n\r\n  if (timestamps) {\r\n    handlers.push(\r\n      format.timestamp({\r\n        format: timestamps === true ? defaultTimestampFormat : timestamps,\r\n      })\r\n    );\r\n  }\r\n\r\n  if (colors) {\r\n    handlers.push(format.colorize());\r\n  }\r\n\r\n  handlers.push(logErrors());\r\n\r\n  handlers.push(\r\n    format.printf(({ level, message, timestamp }) => {\r\n      return `${timestamps ? `[${timestamp as string}] ` : ''}${level}: ${message as string}`;\r\n    })\r\n  );\r\n\r\n  return format.combine(...handlers);\r\n};\r\n","import { format } from 'winston';\r\n\r\nexport default (...levels: string[]) => {\r\n  return format((info) => (levels.some((level) => info.level.includes(level)) ? info : false))();\r\n};\r\n","import { format } from 'winston';\r\n\r\n/**\r\n * This will remove the chalk color codes from the message provided.\r\n * It's used to log plain text in the log file\r\n */\r\nexport default format.printf(({ message }) => {\r\n  if (typeof message !== 'string') {\r\n    return message;\r\n  }\r\n\r\n  return message.replace(\r\n    // eslint-disable-next-line no-control-regex\r\n    /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,\r\n    ''\r\n  );\r\n});\r\n","import { format } from 'winston';\r\n\r\n/**\r\n * This will remove the chalk color codes from the message provided.\r\n * It's used to log plain text in the log file\r\n */\r\nexport default format.printf(({ message, level, timestamp }) => {\r\n  if (typeof message !== 'string') {\r\n    return message;\r\n  }\r\n\r\n  const newMessage = `[${timestamp as string}] ${level}: ${message as string}`;\r\n\r\n  return newMessage.replace(\r\n    // eslint-disable-next-line no-control-regex\r\n    /[\\u001b\\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,\r\n    ''\r\n  );\r\n});\r\n","import { transports, LoggerOptions } from 'winston';\r\nimport { LEVEL_LABEL, LEVELS } from '../constants';\r\nimport { prettyPrint } from '../formats';\r\n\r\nexport default (): LoggerOptions => {\r\n  return {\r\n    level: LEVEL_LABEL,\r\n    levels: LEVELS,\r\n    format: prettyPrint(),\r\n    transports: [new transports.Console()],\r\n  };\r\n};\r\n","import { transports, LoggerOptions } from 'winston';\r\n\r\nimport { LEVEL_LABEL, LEVELS } from '../constants';\r\nimport { prettyPrint, excludeColors } from '../formats';\r\n\r\nexport default (\r\n  filename: string,\r\n  fileTransportOptions: transports.FileTransportOptions = {}\r\n): LoggerOptions => {\r\n  return {\r\n    level: LEVEL_LABEL,\r\n    levels: LEVELS,\r\n    format: prettyPrint(),\r\n    transports: [\r\n      new transports.Console(),\r\n      new transports.File({\r\n        level: 'error',\r\n        filename,\r\n        format: excludeColors,\r\n        ...fileTransportOptions,\r\n      }),\r\n    ],\r\n  };\r\n};\r\n","import * as winston from 'winston';\r\nimport * as configs from './configs';\r\n\r\nexport * as formats from './formats';\r\n\r\nexport type Logger = winston.Logger;\r\n\r\nconst createLogger = (userConfiguration: winston.LoggerOptions = {}): winston.Logger => {\r\n  const configuration = configs.createDefaultConfiguration();\r\n\r\n  Object.assign(configuration, userConfiguration);\r\n\r\n  return winston.createLogger(configuration);\r\n};\r\n\r\nexport { createLogger, winston, configs };\r\n"],"names":["config","format","transports","configs.createDefaultConfiguration","winston"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,SAASA,QAAAA,OAAO,IAAI;AAC1B,MAAM,cAAc;AACN,OAAO,WAAW;ACFhC,MAAM,YAAgCC,QAAAA,OAAO,CAAC,SAAS;AACrD,MAAI,gBAAgB,OAAO;AAClB,WAAA,EAAE,GAAG,MAAM,SAAS,GAAG,KAAK,OAAiB,GAAG,KAAK,QAAQ;AAAA,EAAK,KAAK,KAAK,KAAK,EAAE,GAAG;AAAA,EAAA;AAGxF,SAAA;AACT,CAAC;ACLD,MAAM,yBAAyB;AAiB/B,MAAA,cAAe,CAAC,UAA8B,CAAA,MAAuB;AACnE,QAAM,EAAE,aAAa,MAAM,SAAS,KAAS,IAAA;AAE7C,QAAM,WAA6B,CAAC;AAEpC,MAAI,YAAY;AACL,aAAA;AAAA,MACPA,QAAAA,OAAO,UAAU;AAAA,QACf,QAAQ,eAAe,OAAO,yBAAyB;AAAA,MACxD,CAAA;AAAA,IACH;AAAA,EAAA;AAGF,MAAI,QAAQ;AACD,aAAA,KAAKA,eAAO,UAAU;AAAA,EAAA;AAGxB,WAAA,KAAK,WAAW;AAEhB,WAAA;AAAA,IACPA,eAAO,OAAO,CAAC,EAAE,OAAO,SAAS,gBAAgB;AACxC,aAAA,GAAG,aAAa,IAAI,SAAmB,OAAO,EAAE,GAAG,KAAK,KAAK,OAAiB;AAAA,IACtF,CAAA;AAAA,EACH;AAEO,SAAAA,QAAA,OAAO,QAAQ,GAAG,QAAQ;AACnC;AC5CA,MAAe,cAAA,IAAI,WAAqB;AACtC,SAAOA,QAAO,OAAA,CAAC,SAAU,OAAO,KAAK,CAAC,UAAU,KAAK,MAAM,SAAS,KAAK,CAAC,IAAI,OAAO,KAAM,EAAE;AAC/F;ACEA,MAAeA,gBAAAA,QAAAA,OAAO,OAAO,CAAC,EAAE,cAAc;AACxC,MAAA,OAAO,YAAY,UAAU;AACxB,WAAA;AAAA,EAAA;AAGT,SAAO,QAAQ;AAAA;AAAA,IAEb;AAAA,IACA;AAAA,EACF;AACF,CAAC;ACVD,MAAA,cAAeA,eAAO,OAAO,CAAC,EAAE,SAAS,OAAO,gBAAgB;AAC1D,MAAA,OAAO,YAAY,UAAU;AACxB,WAAA;AAAA,EAAA;AAGT,QAAM,aAAa,IAAI,SAAmB,KAAK,KAAK,KAAK,OAAiB;AAE1E,SAAO,WAAW;AAAA;AAAA,IAEhB;AAAA,IACA;AAAA,EACF;AACF,CAAC;;;;;;;;ACdD,MAAA,uBAAe,MAAqB;AAC3B,SAAA;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ,YAAY;AAAA,IACpB,YAAY,CAAC,IAAIC,QAAA,WAAW,QAAS,CAAA;AAAA,EACvC;AACF;ACNA,MAAA,0BAAe,CACb,UACA,uBAAwD,OACtC;AACX,SAAA;AAAA,IACL,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ,YAAY;AAAA,IACpB,YAAY;AAAA,MACV,IAAIA,QAAAA,WAAW,QAAQ;AAAA,MACvB,IAAIA,QAAAA,WAAW,KAAK;AAAA,QAClB,OAAO;AAAA,QACP;AAAA,QACA,QAAQ;AAAA,QACR,GAAG;AAAA,MACJ,CAAA;AAAA,IAAA;AAAA,EAEL;AACF;;;;;;AChBA,MAAM,eAAe,CAAC,oBAA2C,OAAuB;AAChF,QAAA,gBAAgBC,qBAAmC;AAElD,SAAA,OAAO,eAAe,iBAAiB;AAEvC,SAAAC,mBAAQ,aAAa,aAAa;AAC3C;;;;;"}