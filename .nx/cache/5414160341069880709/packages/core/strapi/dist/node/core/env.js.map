{"version":3,"file":"env.js","sources":["../../../src/node/core/env.ts"],"sourcesContent":["import path from 'node:path';\r\nimport dotenv from 'dotenv';\r\nimport { pathExists } from './files';\r\n\r\n/**\r\n * This is the base of _any_ env set for a strapi project,\r\n * to build a strapi admin panel we require these env variables.\r\n */\r\ninterface DefaultEnv {\r\n  ADMIN_PATH: string;\r\n  STRAPI_ADMIN_BACKEND_URL: string;\r\n  STRAPI_TELEMETRY_DISABLED: string;\r\n}\r\n\r\n/**\r\n * @internal\r\n *\r\n * @description Load the .env file if it exists\r\n */\r\nconst loadEnv = async (cwd: string) => {\r\n  const pathToEnv = path.resolve(cwd, '.env');\r\n\r\n  if (await pathExists(pathToEnv)) {\r\n    dotenv.config({ path: pathToEnv });\r\n  }\r\n};\r\n\r\n/**\r\n * @internal\r\n *\r\n * @description Get all the environment variables that start with `STRAPI_ADMIN_`\r\n */\r\nconst getStrapiAdminEnvVars = (defaultEnv: DefaultEnv): Record<string, string> => {\r\n  return Object.keys(process.env)\r\n    .filter((key) => key.toUpperCase().startsWith('STRAPI_ADMIN_'))\r\n    .reduce(\r\n      (acc, key) => {\r\n        acc[key] = process.env[key] as string;\r\n\r\n        return acc;\r\n      },\r\n      defaultEnv as unknown as Record<string, string>\r\n    );\r\n};\r\n\r\nexport { getStrapiAdminEnvVars, loadEnv };\r\n"],"names":["path","pathExists","dotenv"],"mappings":";;;;;;;;AAmBM,MAAA,UAAU,OAAO,QAAgB;AACrC,QAAM,YAAYA,cAAA,QAAK,QAAQ,KAAK,MAAM;AAEtC,MAAA,MAAMC,MAAAA,WAAW,SAAS,GAAG;AAC/BC,oBAAAA,QAAO,OAAO,EAAE,MAAM,UAAA,CAAW;AAAA,EAAA;AAErC;AAOM,MAAA,wBAAwB,CAAC,eAAmD;AAChF,SAAO,OAAO,KAAK,QAAQ,GAAG,EAC3B,OAAO,CAAC,QAAQ,IAAI,YAAY,EAAE,WAAW,eAAe,CAAC,EAC7D;AAAA,IACC,CAAC,KAAK,QAAQ;AACZ,UAAI,GAAG,IAAI,QAAQ,IAAI,GAAG;AAEnB,aAAA;AAAA,IACT;AAAA,IACA;AAAA,EACF;AACJ;;;"}