{"version":3,"file":"timer.js","sources":["../../../src/node/core/timer.ts"],"sourcesContent":["import { performance } from 'perf_hooks';\r\n\r\nexport interface TimeMeasurer {\r\n  start: (name: string) => void;\r\n  end: (name: string) => number;\r\n  getTimings: () => Record<string, number>;\r\n}\r\n\r\nexport function getTimer(): TimeMeasurer {\r\n  const timings: Record<string, number> = {};\r\n  const startTimes: Record<string, number> = {};\r\n\r\n  function start(name: string): void {\r\n    if (typeof startTimes[name] !== 'undefined') {\r\n      throw new Error(`Timer \"${name}\" already started, cannot overwrite`);\r\n    }\r\n\r\n    startTimes[name] = performance.now();\r\n  }\r\n\r\n  function end(name: string): number {\r\n    if (typeof startTimes[name] === 'undefined') {\r\n      throw new Error(`Timer \"${name}\" never started, cannot end`);\r\n    }\r\n\r\n    timings[name] = performance.now() - startTimes[name];\r\n    return timings[name];\r\n  }\r\n\r\n  return { start, end, getTimings: () => timings };\r\n}\r\n\r\nexport const prettyTime = (timeInMs: number): string => {\r\n  return `${Math.ceil(timeInMs)}ms`;\r\n};\r\n"],"names":["performance"],"mappings":";;;AAQO,SAAS,WAAyB;AACvC,QAAM,UAAkC,CAAC;AACzC,QAAM,aAAqC,CAAC;AAE5C,WAAS,MAAM,MAAoB;AACjC,QAAI,OAAO,WAAW,IAAI,MAAM,aAAa;AAC3C,YAAM,IAAI,MAAM,UAAU,IAAI,qCAAqC;AAAA,IAAA;AAG1D,eAAA,IAAI,IAAIA,WAAA,YAAY,IAAI;AAAA,EAAA;AAGrC,WAAS,IAAI,MAAsB;AACjC,QAAI,OAAO,WAAW,IAAI,MAAM,aAAa;AAC3C,YAAM,IAAI,MAAM,UAAU,IAAI,6BAA6B;AAAA,IAAA;AAG7D,YAAQ,IAAI,IAAIA,WAAAA,YAAY,IAAI,IAAI,WAAW,IAAI;AACnD,WAAO,QAAQ,IAAI;AAAA,EAAA;AAGrB,SAAO,EAAE,OAAO,KAAK,YAAY,MAAM,QAAQ;AACjD;AAEa,MAAA,aAAa,CAAC,aAA6B;AACtD,SAAO,GAAG,KAAK,KAAK,QAAQ,CAAC;AAC/B;;;"}