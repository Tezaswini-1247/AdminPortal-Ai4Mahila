{"version":3,"file":"command.mjs","sources":["../../../../src/cli/commands/export/command.ts"],"sourcesContent":["import { createCommand, Option } from 'commander';\r\n\r\nimport {\r\n  excludeOption,\r\n  onlyOption,\r\n  throttleOption,\r\n  validateExcludeOnly,\r\n} from '../../utils/data-transfer';\r\nimport { promptEncryptionKey } from '../../utils/commander';\r\nimport action from './action';\r\n\r\n/**\r\n * `$ strapi export`\r\n */\r\nconst command = () => {\r\n  return createCommand('export')\r\n    .description('Export data from Strapi to file')\r\n    .allowExcessArguments(false)\r\n    .addOption(\r\n      new Option('--no-encrypt', `Disables 'aes-128-ecb' encryption of the output file`).default(\r\n        true\r\n      )\r\n    )\r\n    .addOption(\r\n      new Option('--no-compress', 'Disables gzip compression of output file').default(true)\r\n    )\r\n    .addOption(new Option('--verbose', 'Enable verbose logs'))\r\n    .addOption(\r\n      new Option(\r\n        '-k, --key <string>',\r\n        'Provide encryption key in command instead of using the prompt'\r\n      )\r\n    )\r\n    .addOption(\r\n      new Option('-f, --file <file>', 'name to use for exported file (without extensions)')\r\n    )\r\n    .addOption(excludeOption)\r\n    .addOption(onlyOption)\r\n    .addOption(throttleOption)\r\n    .hook('preAction', validateExcludeOnly)\r\n    .hook('preAction', promptEncryptionKey)\r\n    .action(action);\r\n};\r\n\r\nexport default command;\r\n"],"names":[],"mappings":";;;;AAcA,MAAM,UAAU,MAAM;AACb,SAAA,cAAc,QAAQ,EAC1B,YAAY,iCAAiC,EAC7C,qBAAqB,KAAK,EAC1B;AAAA,IACC,IAAI,OAAO,gBAAgB,sDAAsD,EAAE;AAAA,MACjF;AAAA,IAAA;AAAA,EACF,EAED;AAAA,IACC,IAAI,OAAO,iBAAiB,0CAA0C,EAAE,QAAQ,IAAI;AAAA,EAAA,EAErF,UAAU,IAAI,OAAO,aAAa,qBAAqB,CAAC,EACxD;AAAA,IACC,IAAI;AAAA,MACF;AAAA,MACA;AAAA,IAAA;AAAA,EACF,EAED;AAAA,IACC,IAAI,OAAO,qBAAqB,oDAAoD;AAAA,EAAA,EAErF,UAAU,aAAa,EACvB,UAAU,UAAU,EACpB,UAAU,cAAc,EACxB,KAAK,aAAa,mBAAmB,EACrC,KAAK,aAAa,mBAAmB,EACrC,OAAO,MAAM;AAClB;"}