{"version":3,"file":"constants-CiZXJ_5W.mjs","sources":["../../ee/admin/src/pages/AuthPage/components/Providers.tsx","../../ee/admin/src/pages/AuthPage/constants.ts"],"sourcesContent":["import { Box, Button, Divider, Flex, Loader, Main, Typography, Link } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\nimport { NavLink, Navigate, useNavigate } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { Logo } from '../../../../../../admin/src/components/UnauthenticatedLogo';\r\nimport {\r\n  Column,\r\n  LayoutContent,\r\n  UnauthenticatedLayout,\r\n} from '../../../../../../admin/src/layouts/UnauthenticatedLayout';\r\nimport { useGetProvidersQuery } from '../../../../../../admin/src/services/auth';\r\n\r\nimport { SSOProviders } from './SSOProviders';\r\n\r\nconst Providers = () => {\r\n  const navigate = useNavigate();\r\n  const { formatMessage } = useIntl();\r\n  const { isLoading, data: providers = [] } = useGetProvidersQuery(undefined, {\r\n    skip: !window.strapi.features.isEnabled(window.strapi.features.SSO),\r\n  });\r\n\r\n  const handleClick = () => {\r\n    navigate('/auth/login');\r\n  };\r\n\r\n  if (\r\n    !window.strapi.features.isEnabled(window.strapi.features.SSO) ||\r\n    (!isLoading && providers.length === 0)\r\n  ) {\r\n    return <Navigate to=\"/auth/login\" />;\r\n  }\r\n\r\n  return (\r\n    <UnauthenticatedLayout>\r\n      <Main>\r\n        <LayoutContent>\r\n          <Column>\r\n            <Logo />\r\n            <Box paddingTop={6} paddingBottom={1}>\r\n              <Typography tag=\"h1\" variant=\"alpha\">\r\n                {formatMessage({ id: 'Auth.form.welcome.title' })}\r\n              </Typography>\r\n            </Box>\r\n            <Box paddingBottom={7}>\r\n              <Typography variant=\"epsilon\" textColor=\"neutral600\">\r\n                {formatMessage({ id: 'Auth.login.sso.subtitle' })}\r\n              </Typography>\r\n            </Box>\r\n          </Column>\r\n          <Flex direction=\"column\" alignItems=\"stretch\" gap={7}>\r\n            {isLoading ? (\r\n              <Flex justifyContent=\"center\">\r\n                <Loader>{formatMessage({ id: 'Auth.login.sso.loading' })}</Loader>\r\n              </Flex>\r\n            ) : (\r\n              <SSOProviders providers={providers} />\r\n            )}\r\n            <Flex>\r\n              <DividerFull />\r\n              <Box paddingLeft={3} paddingRight={3}>\r\n                <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                  {formatMessage({ id: 'or' })}\r\n                </Typography>\r\n              </Box>\r\n              <DividerFull />\r\n            </Flex>\r\n            <Button fullWidth size=\"L\" onClick={handleClick}>\r\n              {formatMessage({ id: 'Auth.form.button.login.strapi' })}\r\n            </Button>\r\n          </Flex>\r\n        </LayoutContent>\r\n        <Flex justifyContent=\"center\">\r\n          <Box paddingTop={4}>\r\n            <Link tag={NavLink} to=\"/auth/forgot-password\">\r\n              <Typography variant=\"pi\">\r\n                {formatMessage({ id: 'Auth.link.forgot-password' })}\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n        </Flex>\r\n      </Main>\r\n    </UnauthenticatedLayout>\r\n  );\r\n};\r\n\r\nconst DividerFull = styled(Divider)`\r\n  flex: 1;\r\n`;\r\n\r\nexport { Providers };\r\n","import type { ComponentType } from 'react';\r\n\r\nimport { Providers } from './components/Providers';\r\n\r\ntype AuthType = 'providers';\r\n\r\ntype FormDictionary = Record<AuthType, ComponentType>;\r\n\r\nexport const FORMS = {\r\n  providers: Providers,\r\n} satisfies FormDictionary;\r\n"],"names":[],"mappings":"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"}