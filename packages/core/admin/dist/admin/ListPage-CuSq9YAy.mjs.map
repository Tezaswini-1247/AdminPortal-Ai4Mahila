{"version":3,"file":"ListPage-CuSq9YAy.mjs","sources":["../../ee/admin/src/hooks/useLicenseLimitNotification.ts","../../ee/admin/src/pages/SettingsPage/pages/Users/ListPage.tsx"],"sourcesContent":["/**\r\n *\r\n * useLicenseLimitNotification\r\n *\r\n */\r\nimport * as React from 'react';\r\n\r\nimport isNil from 'lodash/isNil';\r\nimport { useIntl } from 'react-intl';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { NotificationConfig, useNotification } from '../../../../admin/src/features/Notifications';\r\n\r\nimport { useLicenseLimits } from './useLicenseLimits';\r\n\r\nconst STORAGE_KEY_PREFIX = 'strapi-notification-seat-limit';\r\n\r\nconst BILLING_STRAPI_CLOUD_URL = 'https://cloud.strapi.io/profile/billing';\r\nconst BILLING_SELF_HOSTED_URL = 'https://strapi.io/billing/request-seats';\r\n\r\nexport const useLicenseLimitNotification = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { license, isError, isLoading } = useLicenseLimits();\r\n  const { toggleNotification } = useNotification();\r\n  const { pathname } = useLocation();\r\n\r\n  const { enforcementUserCount, permittedSeats, licenseLimitStatus, isHostedOnStrapiCloud } =\r\n    license ?? {};\r\n\r\n  React.useEffect(() => {\r\n    if (isError || isLoading) {\r\n      return;\r\n    }\r\n\r\n    const shouldDisplayNotification =\r\n      !isNil(permittedSeats) &&\r\n      !window.sessionStorage.getItem(`${STORAGE_KEY_PREFIX}-${pathname}`) &&\r\n      (licenseLimitStatus === 'AT_LIMIT' || licenseLimitStatus === 'OVER_LIMIT');\r\n\r\n    let notificationType: NotificationConfig['type'];\r\n\r\n    if (licenseLimitStatus === 'OVER_LIMIT') {\r\n      notificationType = 'danger';\r\n    } else if (licenseLimitStatus === 'AT_LIMIT') {\r\n      notificationType = 'warning';\r\n    }\r\n\r\n    if (shouldDisplayNotification) {\r\n      toggleNotification({\r\n        type: notificationType,\r\n        message: formatMessage(\r\n          {\r\n            id: 'notification.ee.warning.over-.message',\r\n            defaultMessage:\r\n              \"Add seats to {licenseLimitStatus, select, OVER_LIMIT {invite} other {re-enable}} Users. If you already did it but it's not reflected in Strapi yet, make sure to restart your app.\",\r\n          },\r\n          { licenseLimitStatus }\r\n        ),\r\n        title: formatMessage(\r\n          {\r\n            id: 'notification.ee.warning.at-seat-limit.title',\r\n            defaultMessage:\r\n              '{licenseLimitStatus, select, OVER_LIMIT {Over} other {At}} seat limit ({enforcementUserCount}/{permittedSeats})',\r\n          },\r\n          {\r\n            licenseLimitStatus,\r\n            enforcementUserCount,\r\n            permittedSeats,\r\n          }\r\n        ),\r\n        link: {\r\n          url: isHostedOnStrapiCloud ? BILLING_STRAPI_CLOUD_URL : BILLING_SELF_HOSTED_URL,\r\n          label: formatMessage(\r\n            {\r\n              id: 'notification.ee.warning.seat-limit.link',\r\n              defaultMessage:\r\n                '{isHostedOnStrapiCloud, select, true {ADD SEATS} other {CONTACT SALES}}',\r\n            },\r\n            { isHostedOnStrapiCloud }\r\n          ),\r\n        },\r\n        blockTransition: true,\r\n        onClose() {\r\n          window.sessionStorage.setItem(`${STORAGE_KEY_PREFIX}-${pathname}`, 'true');\r\n        },\r\n      });\r\n    }\r\n  }, [\r\n    toggleNotification,\r\n    license,\r\n    pathname,\r\n    formatMessage,\r\n    isLoading,\r\n    permittedSeats,\r\n    licenseLimitStatus,\r\n    enforcementUserCount,\r\n    isHostedOnStrapiCloud,\r\n    isError,\r\n  ]);\r\n};\r\n","import { ListPageCE } from '../../../../../../../admin/src/pages/Settings/pages/Users/ListPage';\r\nimport { useLicenseLimitNotification } from '../../../../hooks/useLicenseLimitNotification';\r\n\r\nexport const UserListPageEE = () => {\r\n  useLicenseLimitNotification();\r\n\r\n  return <ListPageCE />;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;AAeA,MAAM,kBAAqB,GAAA,gCAAA;AAE3B,MAAM,wBAA2B,GAAA,yCAAA;AACjC,MAAM,uBAA0B,GAAA,yCAAA;AAEzB,MAAM,8BAA8B,MAAM;AAC/C,EAAM,MAAA,EAAE,aAAc,EAAA,GAAI,OAAQ,EAAA;AAClC,EAAA,MAAM,EAAE,OAAA,EAAS,OAAS,EAAA,SAAA,KAAc,gBAAiB,EAAA;AACzD,EAAM,MAAA,EAAE,kBAAmB,EAAA,GAAI,eAAgB,EAAA;AAC/C,EAAM,MAAA,EAAE,QAAS,EAAA,GAAI,WAAY,EAAA;AAEjC,EAAA,MAAM,EAAE,oBAAsB,EAAA,cAAA,EAAgB,oBAAoB,qBAAsB,EAAA,GACtF,WAAW,EAAC;AAEd,EAAA,KAAA,CAAM,UAAU,MAAM;AACpB,IAAA,IAAI,WAAW,SAAW,EAAA;AACxB,MAAA;AAAA;AAGF,IAAA,MAAM,4BACJ,CAAC,KAAA,CAAM,cAAc,CAAA,IACrB,CAAC,MAAO,CAAA,cAAA,CAAe,OAAQ,CAAA,CAAA,EAAG,kBAAkB,CAAI,CAAA,EAAA,QAAQ,EAAE,CACjE,KAAA,kBAAA,KAAuB,cAAc,kBAAuB,KAAA,YAAA,CAAA;AAE/D,IAAI,IAAA,gBAAA;AAEJ,IAAA,IAAI,uBAAuB,YAAc,EAAA;AACvC,MAAmB,gBAAA,GAAA,QAAA;AAAA,KACrB,MAAA,IAAW,uBAAuB,UAAY,EAAA;AAC5C,MAAmB,gBAAA,GAAA,SAAA;AAAA;AAGrB,IAAA,IAAI,yBAA2B,EAAA;AAC7B,MAAmB,kBAAA,CAAA;AAAA,QACjB,IAAM,EAAA,gBAAA;AAAA,QACN,OAAS,EAAA,aAAA;AAAA,UACP;AAAA,YACE,EAAI,EAAA,uCAAA;AAAA,YACJ,cACE,EAAA;AAAA,WACJ;AAAA,UACA,EAAE,kBAAmB;AAAA,SACvB;AAAA,QACA,KAAO,EAAA,aAAA;AAAA,UACL;AAAA,YACE,EAAI,EAAA,6CAAA;AAAA,YACJ,cACE,EAAA;AAAA,WACJ;AAAA,UACA;AAAA,YACE,kBAAA;AAAA,YACA,oBAAA;AAAA,YACA;AAAA;AACF,SACF;AAAA,QACA,IAAM,EAAA;AAAA,UACJ,GAAA,EAAK,wBAAwB,wBAA2B,GAAA,uBAAA;AAAA,UACxD,KAAO,EAAA,aAAA;AAAA,YACL;AAAA,cACE,EAAI,EAAA,yCAAA;AAAA,cACJ,cACE,EAAA;AAAA,aACJ;AAAA,YACA,EAAE,qBAAsB;AAAA;AAC1B,SACF;AAAA,QACA,eAAiB,EAAA,IAAA;AAAA,QACjB,OAAU,GAAA;AACR,UAAA,MAAA,CAAO,eAAe,OAAQ,CAAA,CAAA,EAAG,kBAAkB,CAAI,CAAA,EAAA,QAAQ,IAAI,MAAM,CAAA;AAAA;AAC3E,OACD,CAAA;AAAA;AACH,GACC,EAAA;AAAA,IACD,kBAAA;AAAA,IACA,OAAA;AAAA,IACA,QAAA;AAAA,IACA,aAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,kBAAA;AAAA,IACA,oBAAA;AAAA,IACA,qBAAA;AAAA,IACA;AAAA,GACD,CAAA;AACH,CAAA;;AChGO,MAAM,iBAAiB,MAAM;AAClC,EAA4B,2BAAA,EAAA;AAE5B,EAAA,2BAAQ,UAAW,EAAA,EAAA,CAAA;AACrB;;;;"}