{"version":3,"file":"InstalledPlugins-CiBTObSY.mjs","sources":["../../admin/src/pages/Settings/pages/InstalledPlugins.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { Table, Tbody, Td, Th, Thead, Tr, Typography, useNotifyAT } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { Layouts } from '../../../components/Layouts/Layout';\r\nimport { Page } from '../../../components/PageHelpers';\r\nimport { useTypedSelector } from '../../../core/store/hooks';\r\nimport { useNotification } from '../../../features/Notifications';\r\nimport { useAPIErrorHandler } from '../../../hooks/useAPIErrorHandler';\r\nimport { useGetPluginsQuery } from '../../../services/admin';\r\n\r\nconst InstalledPlugins = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { notifyStatus } = useNotifyAT();\r\n  const { toggleNotification } = useNotification();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n\r\n  const { isLoading, data, error } = useGetPluginsQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (data) {\r\n      notifyStatus(\r\n        formatMessage(\r\n          {\r\n            id: 'app.utils.notify.data-loaded',\r\n            defaultMessage: 'The {target} has loaded',\r\n          },\r\n          {\r\n            target: formatMessage({\r\n              id: 'global.plugins',\r\n              defaultMessage: 'Plugins',\r\n            }),\r\n          }\r\n        )\r\n      );\r\n    }\r\n\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [data, error, formatAPIError, formatMessage, notifyStatus, toggleNotification]);\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Page.Main>\r\n        <Layouts.Header\r\n          title={formatMessage({\r\n            id: 'global.plugins',\r\n            defaultMessage: 'Plugins',\r\n          })}\r\n          subtitle={formatMessage({\r\n            id: 'app.components.ListPluginsPage.description',\r\n            defaultMessage: 'List of the installed plugins in the project.',\r\n          })}\r\n        />\r\n        <Layouts.Content>\r\n          <Table colCount={2} rowCount={data?.plugins?.length ?? 0 + 1}>\r\n            <Thead>\r\n              <Tr>\r\n                <Th>\r\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                    {formatMessage({\r\n                      id: 'global.name',\r\n                      defaultMessage: 'Name',\r\n                    })}\r\n                  </Typography>\r\n                </Th>\r\n                <Th>\r\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\r\n                    {formatMessage({\r\n                      id: 'global.description',\r\n                      defaultMessage: 'description',\r\n                    })}\r\n                  </Typography>\r\n                </Th>\r\n              </Tr>\r\n            </Thead>\r\n            <Tbody>\r\n              {data?.plugins.map(({ name, displayName, description }) => {\r\n                return (\r\n                  <Tr key={name}>\r\n                    <Td>\r\n                      <Typography textColor=\"neutral800\" variant=\"omega\" fontWeight=\"bold\">\r\n                        {formatMessage({\r\n                          id: `global.plugins.${name}`,\r\n                          defaultMessage: displayName,\r\n                        })}\r\n                      </Typography>\r\n                    </Td>\r\n                    <Td>\r\n                      <Typography textColor=\"neutral800\">\r\n                        {formatMessage({\r\n                          id: `global.plugins.${name}.description`,\r\n                          defaultMessage: description,\r\n                        })}\r\n                      </Typography>\r\n                    </Td>\r\n                  </Tr>\r\n                );\r\n              })}\r\n            </Tbody>\r\n          </Table>\r\n        </Layouts.Content>\r\n      </Page.Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nconst ProtectedInstalledPlugins = () => {\r\n  const { formatMessage } = useIntl();\r\n  const permissions = useTypedSelector((state) => state.admin_app.permissions);\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions.marketplace?.main}>\r\n      <Page.Title>\r\n        {formatMessage({\r\n          id: 'global.plugins',\r\n          defaultMessage: 'Plugins',\r\n        })}\r\n      </Page.Title>\r\n      <InstalledPlugins />\r\n    </Page.Protect>\r\n  );\r\n};\r\n\r\nexport { ProtectedInstalledPlugins, InstalledPlugins };\r\n"],"names":[],"mappings":"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"}