{"version":3,"file":"ListView-DV860ejj.mjs","sources":["../../admin/src/pages/Settings/pages/ApiTokens/ListView.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { EmptyStateLayout, LinkButton } from '@strapi/design-system';\r\nimport { Plus } from '@strapi/icons';\r\nimport { EmptyDocuments } from '@strapi/icons/symbols';\r\nimport { Data } from '@strapi/types';\r\nimport * as qs from 'qs';\r\nimport { useIntl } from 'react-intl';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { useGuidedTour } from '../../../../components/GuidedTour/Provider';\r\nimport { Layouts } from '../../../../components/Layouts/Layout';\r\nimport { Page } from '../../../../components/PageHelpers';\r\nimport { useTypedSelector } from '../../../../core/store/hooks';\r\nimport { useNotification } from '../../../../features/Notifications';\r\nimport { useTracking } from '../../../../features/Tracking';\r\nimport { useAPIErrorHandler } from '../../../../hooks/useAPIErrorHandler';\r\nimport { useOnce } from '../../../../hooks/useOnce';\r\nimport { useRBAC } from '../../../../hooks/useRBAC';\r\nimport { useDeleteAPITokenMutation, useGetAPITokensQuery } from '../../../../services/apiTokens';\r\nimport { API_TOKEN_TYPE } from '../../components/Tokens/constants';\r\nimport { Table } from '../../components/Tokens/Table';\r\n\r\nconst TABLE_HEADERS = [\r\n  {\r\n    name: 'name',\r\n    label: {\r\n      id: 'Settings.apiTokens.ListView.headers.name',\r\n      defaultMessage: 'Name',\r\n    },\r\n    sortable: true,\r\n  },\r\n  {\r\n    name: 'description',\r\n    label: {\r\n      id: 'Settings.apiTokens.ListView.headers.description',\r\n      defaultMessage: 'Description',\r\n    },\r\n    sortable: false,\r\n  },\r\n  {\r\n    name: 'createdAt',\r\n    label: {\r\n      id: 'Settings.apiTokens.ListView.headers.createdAt',\r\n      defaultMessage: 'Created at',\r\n    },\r\n    sortable: false,\r\n  },\r\n  {\r\n    name: 'lastUsedAt',\r\n    label: {\r\n      id: 'Settings.apiTokens.ListView.headers.lastUsedAt',\r\n      defaultMessage: 'Last used',\r\n    },\r\n    sortable: false,\r\n  },\r\n];\r\n\r\nexport const ListView = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.settings?.['api-tokens']\r\n  );\r\n  const {\r\n    allowedActions: { canRead, canCreate, canDelete, canUpdate },\r\n  } = useRBAC(permissions);\r\n  const navigate = useNavigate();\r\n  const { trackUsage } = useTracking();\r\n  const startSection = useGuidedTour('ListView', (state) => state.startSection);\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n\r\n  React.useEffect(() => {\r\n    startSection('apiTokens');\r\n  }, [startSection]);\r\n\r\n  React.useEffect(() => {\r\n    navigate({ search: qs.stringify({ sort: 'name:ASC' }, { encode: false }) });\r\n  }, [navigate]);\r\n\r\n  const headers = TABLE_HEADERS.map((header) => ({\r\n    ...header,\r\n    label: formatMessage(header.label),\r\n  }));\r\n\r\n  useOnce(() => {\r\n    trackUsage('willAccessTokenList', {\r\n      tokenType: API_TOKEN_TYPE,\r\n    });\r\n  });\r\n\r\n  const { data: apiTokens = [], isLoading, error } = useGetAPITokensQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [error, formatAPIError, toggleNotification]);\r\n\r\n  React.useEffect(() => {\r\n    trackUsage('didAccessTokenList', { number: apiTokens.length, tokenType: API_TOKEN_TYPE });\r\n  }, [apiTokens, trackUsage]);\r\n\r\n  const [deleteToken] = useDeleteAPITokenMutation();\r\n\r\n  const handleDelete = async (id: Data.ID) => {\r\n    try {\r\n      const res = await deleteToken(id);\r\n\r\n      if ('error' in res) {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatAPIError(res.error),\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      trackUsage('didDeleteToken');\r\n    } catch {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatMessage({\r\n          id: 'notification.error',\r\n          defaultMessage: 'Something went wrong',\r\n        }),\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Page.Title>\r\n        {formatMessage(\r\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\r\n          { name: 'API Tokens' }\r\n        )}\r\n      </Page.Title>\r\n      <Layouts.Header\r\n        title={formatMessage({ id: 'Settings.apiTokens.title', defaultMessage: 'API Tokens' })}\r\n        subtitle={formatMessage({\r\n          id: 'Settings.apiTokens.description',\r\n          defaultMessage: 'List of generated tokens to consume the API',\r\n        })}\r\n        primaryAction={\r\n          canCreate && (\r\n            <LinkButton\r\n              tag={Link}\r\n              data-testid=\"create-api-token-button\"\r\n              startIcon={<Plus />}\r\n              size=\"S\"\r\n              onClick={() =>\r\n                trackUsage('willAddTokenFromList', {\r\n                  tokenType: API_TOKEN_TYPE,\r\n                })\r\n              }\r\n              to=\"/settings/api-tokens/create\"\r\n            >\r\n              {formatMessage({\r\n                id: 'Settings.apiTokens.create',\r\n                defaultMessage: 'Create new API Token',\r\n              })}\r\n            </LinkButton>\r\n          )\r\n        }\r\n      />\r\n      {!canRead ? (\r\n        <Page.NoPermissions />\r\n      ) : (\r\n        <Page.Main aria-busy={isLoading}>\r\n          <Layouts.Content>\r\n            {apiTokens.length > 0 && (\r\n              <Table\r\n                permissions={{ canRead, canDelete, canUpdate }}\r\n                headers={headers}\r\n                isLoading={isLoading}\r\n                onConfirmDelete={handleDelete}\r\n                tokens={apiTokens}\r\n                tokenType={API_TOKEN_TYPE}\r\n              />\r\n            )}\r\n            {canCreate && apiTokens.length === 0 ? (\r\n              <EmptyStateLayout\r\n                icon={<EmptyDocuments width=\"16rem\" />}\r\n                content={formatMessage({\r\n                  id: 'Settings.apiTokens.addFirstToken',\r\n                  defaultMessage: 'Add your first API Token',\r\n                })}\r\n                action={\r\n                  <LinkButton\r\n                    tag={Link}\r\n                    variant=\"secondary\"\r\n                    startIcon={<Plus />}\r\n                    to=\"/settings/api-tokens/create\"\r\n                  >\r\n                    {formatMessage({\r\n                      id: 'Settings.apiTokens.addNewToken',\r\n                      defaultMessage: 'Add new API Token',\r\n                    })}\r\n                  </LinkButton>\r\n                }\r\n              />\r\n            ) : null}\r\n            {!canCreate && apiTokens.length === 0 ? (\r\n              <EmptyStateLayout\r\n                icon={<EmptyDocuments width=\"16rem\" />}\r\n                content={formatMessage({\r\n                  id: 'Settings.apiTokens.emptyStateLayout',\r\n                  defaultMessage: 'You donâ€™t have any content yet...',\r\n                })}\r\n              />\r\n            ) : null}\r\n          </Layouts.Content>\r\n        </Page.Main>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ProtectedListView = () => {\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.settings?.['api-tokens'].main\r\n  );\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions}>\r\n      <ListView />\r\n    </Page.Protect>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}