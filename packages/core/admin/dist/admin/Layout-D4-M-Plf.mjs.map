{"version":3,"file":"Layout-D4-M-Plf.mjs","sources":["../../admin/src/hooks/useSettingsMenu.ts","../../admin/src/pages/Settings/components/SettingsNav.tsx","../../admin/src/pages/Settings/Layout.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport sortBy from 'lodash/sortBy';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { SETTINGS_LINKS_CE, SettingsMenuLink } from '../constants';\r\nimport { useAppInfo } from '../features/AppInfo';\r\nimport { useAuth } from '../features/Auth';\r\nimport { useStrapiApp } from '../features/StrapiApp';\r\nimport { selectAdminPermissions } from '../selectors';\r\nimport { PermissionMap } from '../types/permissions';\r\n\r\nimport { useEnterprise } from './useEnterprise';\r\n\r\nimport type {\r\n  StrapiAppSetting,\r\n  StrapiAppSettingLink as IStrapiAppSettingLink,\r\n} from '../core/apis/router';\r\n\r\nconst formatLinks = (menu: SettingsMenuSection[]): SettingsMenuSectionWithDisplayedLinks[] =>\r\n  menu.map((menuSection) => {\r\n    const formattedLinks = menuSection.links.map((link) => ({\r\n      ...link,\r\n      isDisplayed: false,\r\n    }));\r\n\r\n    return { ...menuSection, links: formattedLinks };\r\n  });\r\n\r\ninterface SettingsMenuLinkWithPermissions extends SettingsMenuLink {\r\n  permissions: IStrapiAppSettingLink['permissions'];\r\n  hasNotification?: boolean;\r\n}\r\n\r\ninterface StrapiAppSettingsLink extends IStrapiAppSettingLink {\r\n  licenseOnly?: never;\r\n  hasNotification?: never;\r\n}\r\n\r\ninterface SettingsMenuSection extends Omit<StrapiAppSetting, 'links'> {\r\n  links: Array<SettingsMenuLinkWithPermissions | StrapiAppSettingsLink>;\r\n}\r\n\r\ninterface SettingsMenuLinkWithPermissionsAndDisplayed extends SettingsMenuLinkWithPermissions {\r\n  isDisplayed: boolean;\r\n}\r\n\r\ninterface StrapiAppSettingLinkWithDisplayed extends StrapiAppSettingsLink {\r\n  isDisplayed: boolean;\r\n}\r\n\r\ninterface SettingsMenuSectionWithDisplayedLinks extends Omit<SettingsMenuSection, 'links'> {\r\n  links: Array<SettingsMenuLinkWithPermissionsAndDisplayed | StrapiAppSettingLinkWithDisplayed>;\r\n}\r\n\r\ntype SettingsMenu = SettingsMenuSectionWithDisplayedLinks[];\r\n\r\nconst useSettingsMenu = (): {\r\n  isLoading: boolean;\r\n  menu: SettingsMenu;\r\n} => {\r\n  const [{ isLoading, menu }, setData] = React.useState<{\r\n    isLoading: boolean;\r\n    menu: SettingsMenu;\r\n  }>({\r\n    isLoading: true,\r\n    menu: [],\r\n  });\r\n  const checkUserHasPermission = useAuth(\r\n    'useSettingsMenu',\r\n    (state) => state.checkUserHasPermissions\r\n  );\r\n  const shouldUpdateStrapi = useAppInfo('useSettingsMenu', (state) => state.shouldUpdateStrapi);\r\n  const settings = useStrapiApp('useSettingsMenu', (state) => state.settings);\r\n  const permissions = useSelector(selectAdminPermissions);\r\n\r\n  /**\r\n   * memoize the return value of this function to avoid re-computing it on every render\r\n   * because it's used in an effect it ends up re-running recursively.\r\n   */\r\n  const ceLinks = React.useMemo(() => SETTINGS_LINKS_CE(), []);\r\n\r\n  const { admin: adminLinks, global: globalLinks } = useEnterprise(\r\n    ceLinks,\r\n    async () => (await import('../../../ee/admin/src/constants')).SETTINGS_LINKS_EE(),\r\n    {\r\n      combine(ceLinks, eeLinks) {\r\n        return {\r\n          admin: [...eeLinks.admin, ...ceLinks.admin],\r\n          global: [...ceLinks.global, ...eeLinks.global],\r\n        };\r\n      },\r\n      defaultValue: {\r\n        admin: [],\r\n        global: [],\r\n      },\r\n    }\r\n  );\r\n\r\n  const addPermissions = React.useCallback(\r\n    (link: SettingsMenuLink) => {\r\n      if (!link.id) {\r\n        throw new Error('The settings menu item must have an id attribute.');\r\n      }\r\n\r\n      return {\r\n        ...link,\r\n        permissions: permissions.settings?.[link.id as keyof PermissionMap['settings']]?.main ?? [],\r\n      } satisfies SettingsMenuLinkWithPermissions;\r\n    },\r\n    [permissions.settings]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const getData = async () => {\r\n      interface MenuLinkPermission {\r\n        hasPermission: boolean;\r\n        sectionIndex: number;\r\n        linkIndex: number;\r\n      }\r\n\r\n      const buildMenuPermissions = (sections: SettingsMenuSectionWithDisplayedLinks[]) =>\r\n        Promise.all(\r\n          sections.reduce<Promise<MenuLinkPermission>[]>((acc, section, sectionIndex) => {\r\n            const linksWithPermissions = section.links.map(async (link, linkIndex) => ({\r\n              hasPermission: (await checkUserHasPermission(link.permissions)).length > 0,\r\n              sectionIndex,\r\n              linkIndex,\r\n            }));\r\n\r\n            return [...acc, ...linksWithPermissions];\r\n          }, [])\r\n        );\r\n\r\n      const menuPermissions = await buildMenuPermissions(sections);\r\n\r\n      setData((prev) => {\r\n        return {\r\n          ...prev,\r\n          isLoading: false,\r\n          menu: sections.map((section, sectionIndex) => ({\r\n            ...section,\r\n            links: section.links.map((link, linkIndex) => {\r\n              const permission = menuPermissions.find(\r\n                (permission) =>\r\n                  permission.sectionIndex === sectionIndex && permission.linkIndex === linkIndex\r\n              );\r\n\r\n              return {\r\n                ...link,\r\n                isDisplayed: Boolean(permission?.hasPermission),\r\n              };\r\n            }),\r\n          })),\r\n        };\r\n      });\r\n    };\r\n\r\n    const { global, ...otherSections } = settings;\r\n    const sections = formatLinks([\r\n      {\r\n        ...global,\r\n        links: sortBy([...global.links, ...globalLinks.map(addPermissions)], (link) => link.id).map(\r\n          (link) => ({\r\n            ...link,\r\n            hasNotification: link.id === '000-application-infos' && shouldUpdateStrapi,\r\n          })\r\n        ),\r\n      },\r\n      {\r\n        id: 'permissions',\r\n        intlLabel: { id: 'Settings.permissions', defaultMessage: 'Administration Panel' },\r\n        links: adminLinks.map(addPermissions),\r\n      },\r\n      ...Object.values(otherSections),\r\n    ]);\r\n\r\n    getData();\r\n  }, [\r\n    adminLinks,\r\n    globalLinks,\r\n    settings,\r\n    shouldUpdateStrapi,\r\n    addPermissions,\r\n    checkUserHasPermission,\r\n  ]);\r\n\r\n  return {\r\n    isLoading,\r\n    menu: menu.map((menuItem) => ({\r\n      ...menuItem,\r\n      links: menuItem.links.filter((link) => link.isDisplayed),\r\n    })),\r\n  };\r\n};\r\n\r\nexport { useSettingsMenu };\r\nexport type { SettingsMenu };\r\n","import {\r\n  SubNav,\r\n  SubNavHeader,\r\n  SubNavLink,\r\n  SubNavSection,\r\n  SubNavSections,\r\n} from '@strapi/design-system';\r\nimport { Lightning } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { useTracking } from '../../../features/Tracking';\r\nimport { SettingsMenu } from '../../../hooks/useSettingsMenu';\r\n\r\nconst CustomIcon = styled(Lightning)`\r\n  right: 15px;\r\n  position: absolute;\r\n  bottom: 50%;\r\n  transform: translateY(50%);\r\n\r\n  path {\r\n    fill: ${({ theme }) => theme.colors.warning500};\r\n  }\r\n`;\r\n\r\nconst Link = styled(SubNavLink)`\r\n  &.active ${CustomIcon} {\r\n    right: 13px;\r\n  }\r\n`;\r\n\r\ninterface SettingsNavProps {\r\n  menu: SettingsMenu;\r\n}\r\n\r\nconst SettingsNav = ({ menu }: SettingsNavProps) => {\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n  const { pathname } = useLocation();\r\n\r\n  const filteredMenu = menu.filter(\r\n    (section) => !section.links.every((link) => link.isDisplayed === false)\r\n  );\r\n\r\n  const sections = filteredMenu.map((section) => {\r\n    return {\r\n      ...section,\r\n      title: section.intlLabel,\r\n      links: section.links.map((link) => {\r\n        return {\r\n          ...link,\r\n          title: link.intlLabel,\r\n          name: link.id,\r\n        };\r\n      }),\r\n    };\r\n  });\r\n\r\n  const label = formatMessage({\r\n    id: 'global.settings',\r\n    defaultMessage: 'Settings',\r\n  });\r\n\r\n  const handleClickOnLink = (destination: string) => () => {\r\n    trackUsage('willNavigate', { from: pathname, to: destination });\r\n  };\r\n\r\n  return (\r\n    <SubNav aria-label={label}>\r\n      <SubNavHeader label={label} />\r\n      <SubNavSections>\r\n        {sections.map((section) => (\r\n          <SubNavSection key={section.id} label={formatMessage(section.intlLabel)}>\r\n            {section.links.map((link) => {\r\n              return (\r\n                <Link\r\n                  tag={NavLink}\r\n                  withBullet={link.hasNotification}\r\n                  to={link.to}\r\n                  onClick={handleClickOnLink(link.to)}\r\n                  key={link.id}\r\n                  position=\"relative\"\r\n                >\r\n                  {formatMessage(link.intlLabel)}\r\n                  {link?.licenseOnly && <CustomIcon width=\"1.5rem\" height=\"1.5rem\" />}\r\n                </Link>\r\n              );\r\n            })}\r\n          </SubNavSection>\r\n        ))}\r\n      </SubNavSections>\r\n    </SubNav>\r\n  );\r\n};\r\n\r\nexport { SettingsNav };\r\nexport type { SettingsNavProps };\r\n","import { useIntl } from 'react-intl';\r\nimport { Navigate, Outlet, useMatch } from 'react-router-dom';\r\n\r\nimport { Layouts } from '../../components/Layouts/Layout';\r\nimport { Page } from '../../components/PageHelpers';\r\nimport { useSettingsMenu } from '../../hooks/useSettingsMenu';\r\n\r\nimport { SettingsNav } from './components/SettingsNav';\r\n\r\nconst Layout = () => {\r\n  /**\r\n   * This ensures we're capturing the settingId from the URL\r\n   * but also lets any nesting after that pass.\r\n   */\r\n  const match = useMatch('/settings/:settingId/*');\r\n  const { formatMessage } = useIntl();\r\n  const { isLoading, menu } = useSettingsMenu();\r\n\r\n  // Since the useSettingsMenu hook can make API calls in order to check the links permissions\r\n  // We need to add a loading state to prevent redirecting the user while permissions are being checked\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  if (!match?.params.settingId) {\r\n    return <Navigate to=\"application-infos\" />;\r\n  }\r\n\r\n  return (\r\n    <Layouts.Root sideNav={<SettingsNav menu={menu} />}>\r\n      <Page.Title>\r\n        {formatMessage({\r\n          id: 'global.settings',\r\n          defaultMessage: 'Settings',\r\n        })}\r\n      </Page.Title>\r\n      <Outlet />\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nexport { Layout };\r\n"],"names":["ceLinks","sections","permission"],"mappings":"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"}