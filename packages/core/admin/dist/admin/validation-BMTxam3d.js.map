{"version":3,"file":"validation-BMTxam3d.js","sources":["../../admin/src/pages/Settings/pages/Users/utils/validation.ts"],"sourcesContent":["import * as yup from 'yup';\r\n\r\nimport { translatedErrors } from '../../../../../utils/translatedErrors';\r\n\r\n/**\r\n * @description This needs wrapping in `yup.object().shape()` before use.\r\n */\r\nconst COMMON_USER_SCHEMA = {\r\n  firstname: yup.string().trim().required({\r\n    id: translatedErrors.required.id,\r\n    defaultMessage: 'This field is required',\r\n  }),\r\n  lastname: yup.string(),\r\n  email: yup.string().email(translatedErrors.email).lowercase().required({\r\n    id: translatedErrors.required.id,\r\n    defaultMessage: 'This field is required',\r\n  }),\r\n  username: yup\r\n    .string()\r\n    .transform((value) => (value === '' ? undefined : value))\r\n    .nullable(),\r\n  password: yup\r\n    .string()\r\n    .transform((value) => (value === '' || value === null ? undefined : value))\r\n    .nullable()\r\n    .min(8, {\r\n      ...translatedErrors.minLength,\r\n      values: { min: 8 },\r\n    })\r\n    .matches(/[a-z]/, {\r\n      id: 'components.Input.error.contain.lowercase',\r\n      defaultMessage: 'Password must contain at least one lowercase character',\r\n    })\r\n    .matches(/[A-Z]/, {\r\n      id: 'components.Input.error.contain.uppercase',\r\n      defaultMessage: 'Password must contain at least one uppercase character',\r\n    })\r\n    .matches(/\\d/, {\r\n      id: 'components.Input.error.contain.number',\r\n      defaultMessage: 'Password must contain at least one number',\r\n    }),\r\n  confirmPassword: yup\r\n    .string()\r\n    .transform((value) => (value === '' ? null : value))\r\n    .nullable()\r\n    .min(8, {\r\n      ...translatedErrors.minLength,\r\n      values: { min: 8 },\r\n    })\r\n    .oneOf([yup.ref('password'), null], {\r\n      id: 'components.Input.error.password.noMatch',\r\n      defaultMessage: 'Passwords must match',\r\n    })\r\n    .when('password', (password, passSchema) => {\r\n      return password\r\n        ? passSchema\r\n            .required({\r\n              id: translatedErrors.required.id,\r\n              defaultMessage: 'This field is required',\r\n            })\r\n            .nullable()\r\n        : passSchema;\r\n    }),\r\n};\r\n\r\nexport { COMMON_USER_SCHEMA };\r\n"],"names":["yup","translatedErrors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,kBAAqB,GAAA;AAAA,EACzB,WAAWA,cAAI,CAAA,MAAA,EAAS,CAAA,IAAA,GAAO,QAAS,CAAA;AAAA,IACtC,EAAA,EAAIC,kBAAiB,QAAS,CAAA,EAAA;AAAA,IAC9B,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACD,QAAA,EAAUD,eAAI,MAAO,EAAA;AAAA,EACrB,KAAA,EAAOA,cAAI,CAAA,MAAA,EAAS,CAAA,KAAA,CAAMC,kBAAiB,KAAK,CAAA,CAAE,SAAU,EAAA,CAAE,QAAS,CAAA;AAAA,IACrE,EAAA,EAAIA,kBAAiB,QAAS,CAAA,EAAA;AAAA,IAC9B,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACD,QAAU,EAAAD,cAAA,CACP,MAAO,EAAA,CACP,SAAU,CAAA,CAAC,KAAW,KAAA,KAAA,KAAU,EAAK,GAAA,KAAA,CAAA,GAAY,KAAM,CAAA,CACvD,QAAS,EAAA;AAAA,EACZ,UAAUA,cACP,CAAA,MAAA,EACA,CAAA,SAAA,CAAU,CAAC,KAAW,KAAA,KAAA,KAAU,EAAM,IAAA,KAAA,KAAU,OAAO,KAAY,CAAA,GAAA,KAAM,EACzE,QAAS,EAAA,CACT,IAAI,CAAG,EAAA;AAAA,IACN,GAAGC,iBAAiB,CAAA,SAAA;AAAA,IACpB,MAAA,EAAQ,EAAE,GAAA,EAAK,CAAE;AAAA,GAClB,CACA,CAAA,OAAA,CAAQ,OAAS,EAAA;AAAA,IAChB,EAAI,EAAA,0CAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,OAAA,CAAQ,OAAS,EAAA;AAAA,IAChB,EAAI,EAAA,0CAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,OAAA,CAAQ,IAAM,EAAA;AAAA,IACb,EAAI,EAAA,uCAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CAAA;AAAA,EACH,eAAiB,EAAAD,cAAA,CACd,MAAO,EAAA,CACP,UAAU,CAAC,KAAA,KAAW,KAAU,KAAA,EAAA,GAAK,OAAO,KAAM,CAAA,CAClD,QAAS,EAAA,CACT,IAAI,CAAG,EAAA;AAAA,IACN,GAAGC,iBAAiB,CAAA,SAAA;AAAA,IACpB,MAAA,EAAQ,EAAE,GAAA,EAAK,CAAE;AAAA,GAClB,EACA,KAAM,CAAA,CAACD,eAAI,GAAI,CAAA,UAAU,CAAG,EAAA,IAAI,CAAG,EAAA;AAAA,IAClC,EAAI,EAAA,yCAAA;AAAA,IACJ,cAAgB,EAAA;AAAA,GACjB,CACA,CAAA,IAAA,CAAK,UAAY,EAAA,CAAC,UAAU,UAAe,KAAA;AAC1C,IAAO,OAAA,QAAA,GACH,WACG,QAAS,CAAA;AAAA,MACR,EAAA,EAAIC,kBAAiB,QAAS,CAAA,EAAA;AAAA,MAC9B,cAAgB,EAAA;AAAA,KACjB,CACA,CAAA,QAAA,EACH,GAAA,UAAA;AAAA,GACL;AACL;;;;"}