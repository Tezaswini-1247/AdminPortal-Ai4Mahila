{"version":3,"file":"MarketplacePage-BkiSxGiK.mjs","sources":["../../admin/src/hooks/useDebounce.ts","../../admin/src/pages/Marketplace/components/NpmPackagesFilters.tsx","../../admin/src/pages/Marketplace/components/NpmPackageCard.tsx","../../admin/src/pages/Marketplace/components/NpmPackagesGrid.tsx","../../admin/src/pages/Marketplace/components/PageHeader.tsx","../../admin/src/pages/Marketplace/components/OfflineLayout.tsx","../../admin/src/pages/Marketplace/components/SortSelect.tsx","../../admin/src/pages/Marketplace/hooks/useMarketplaceData.ts","../../admin/src/pages/Marketplace/hooks/useNavigatorOnline.ts","../../admin/src/pages/Marketplace/MarketplacePage.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nexport function useDebounce<TValue>(value: TValue, delay: number): TValue {\r\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\r\n\r\n  React.useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Tag,\r\n  MultiSelect,\r\n  MultiSelectOption,\r\n  MultiSelectProps,\r\n  Popover,\r\n  Flex,\r\n} from '@strapi/design-system';\r\nimport { Cross, Filter } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport type { Categories, Collections, FilterTypes } from '../hooks/useMarketplaceData';\r\nimport type { NpmPackageType, MarketplacePageQuery } from '../MarketplacePage';\r\n\r\ninterface NpmPackagesFiltersProps {\r\n  handleSelectClear: (type: FilterTypes) => void;\r\n  handleSelectChange: (update: Partial<MarketplacePageQuery>) => void;\r\n  npmPackageType: NpmPackageType;\r\n  possibleCategories: Partial<Record<Categories, number>>;\r\n  possibleCollections: Partial<Record<Collections, number>>;\r\n  query: MarketplacePageQuery;\r\n}\r\n\r\nconst NpmPackagesFilters = ({\r\n  handleSelectClear,\r\n  handleSelectChange,\r\n  npmPackageType,\r\n  possibleCategories,\r\n  possibleCollections,\r\n  query,\r\n}: NpmPackagesFiltersProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  const handleTagRemove = (tagToRemove: string, filterType: FilterTypes) => {\r\n    const update = {\r\n      [filterType]: (query[filterType] ?? []).filter((previousTag) => previousTag !== tagToRemove),\r\n    };\r\n\r\n    handleSelectChange(update);\r\n  };\r\n\r\n  return (\r\n    <Popover.Root>\r\n      <Popover.Trigger>\r\n        <Button variant=\"tertiary\" startIcon={<Filter />}>\r\n          {formatMessage({ id: 'app.utils.filters', defaultMessage: 'Filters' })}\r\n        </Button>\r\n      </Popover.Trigger>\r\n      <Popover.Content sideOffset={4}>\r\n        <Flex padding={3} direction=\"column\" alignItems=\"stretch\" gap={1}>\r\n          <FilterSelect\r\n            message={formatMessage({\r\n              id: 'admin.pages.MarketPlacePage.filters.collections',\r\n              defaultMessage: 'Collections',\r\n            })}\r\n            value={query?.collections || []}\r\n            onChange={(newCollections) => {\r\n              const update = { collections: newCollections };\r\n              handleSelectChange(update);\r\n            }}\r\n            onClear={() => handleSelectClear('collections')}\r\n            possibleFilters={possibleCollections}\r\n            customizeContent={(values) =>\r\n              formatMessage(\r\n                {\r\n                  id: 'admin.pages.MarketPlacePage.filters.collectionsSelected',\r\n                  defaultMessage:\r\n                    '{count, plural, =0 {No collections} one {# collection} other {# collections}} selected',\r\n                },\r\n                { count: values?.length ?? 0 }\r\n              )\r\n            }\r\n          />\r\n          {npmPackageType === 'plugin' && (\r\n            <FilterSelect\r\n              message={formatMessage({\r\n                id: 'admin.pages.MarketPlacePage.filters.categories',\r\n                defaultMessage: 'Categories',\r\n              })}\r\n              value={query?.categories || []}\r\n              onChange={(newCategories) => {\r\n                const update = { categories: newCategories };\r\n                handleSelectChange(update);\r\n              }}\r\n              onClear={() => handleSelectClear('categories')}\r\n              possibleFilters={possibleCategories}\r\n              customizeContent={(values) =>\r\n                formatMessage(\r\n                  {\r\n                    id: 'admin.pages.MarketPlacePage.filters.categoriesSelected',\r\n                    defaultMessage:\r\n                      '{count, plural, =0 {No categories} one {# category} other {# categories}} selected',\r\n                  },\r\n                  { count: values?.length ?? 0 }\r\n                )\r\n              }\r\n            />\r\n          )}\r\n        </Flex>\r\n      </Popover.Content>\r\n\r\n      {query.collections?.map((collection) => (\r\n        <Box key={collection} padding={1}>\r\n          <Tag icon={<Cross />} onClick={() => handleTagRemove(collection, 'collections')}>\r\n            {collection}\r\n          </Tag>\r\n        </Box>\r\n      ))}\r\n      {npmPackageType === 'plugin' &&\r\n        query.categories?.map((category) => (\r\n          <Box key={category} padding={1}>\r\n            <Tag icon={<Cross />} onClick={() => handleTagRemove(category, 'categories')}>\r\n              {category}\r\n            </Tag>\r\n          </Box>\r\n        ))}\r\n    </Popover.Root>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * FilterSelect\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface FilterSelectProps\r\n  extends Pick<MultiSelectProps, 'customizeContent' | 'onClear' | 'onChange' | 'value'> {\r\n  message: string;\r\n  possibleFilters:\r\n    | NpmPackagesFiltersProps['possibleCategories']\r\n    | NpmPackagesFiltersProps['possibleCollections'];\r\n}\r\n\r\nconst FilterSelect = ({\r\n  message,\r\n  value,\r\n  onChange,\r\n  possibleFilters,\r\n  onClear,\r\n  customizeContent,\r\n}: FilterSelectProps) => {\r\n  return (\r\n    <MultiSelect\r\n      data-testid={`${message}-button`}\r\n      aria-label={message}\r\n      placeholder={message}\r\n      onChange={onChange}\r\n      onClear={onClear}\r\n      value={value}\r\n      customizeContent={customizeContent}\r\n    >\r\n      {Object.entries(possibleFilters).map(([filterName, count]) => {\r\n        return (\r\n          <MultiSelectOption\r\n            data-testid={`${filterName}-${count}`}\r\n            key={filterName}\r\n            value={filterName}\r\n          >\r\n            {`${filterName} (${count})`}\r\n          </MultiSelectOption>\r\n        );\r\n      })}\r\n    </MultiSelect>\r\n  );\r\n};\r\n\r\nexport { NpmPackagesFilters };\r\nexport type { NpmPackagesFiltersProps };\r\n","import {\r\n  Box,\r\n  Flex,\r\n  Tooltip,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  LinkButton,\r\n  TypographyComponent,\r\n} from '@strapi/design-system';\r\nimport { CheckCircle, ExternalLink, Download, Star, Check, Duplicate } from '@strapi/icons';\r\nimport { GitHub } from '@strapi/icons/symbols';\r\nimport pluralize from 'pluralize';\r\nimport { useIntl } from 'react-intl';\r\nimport * as semver from 'semver';\r\nimport { styled } from 'styled-components';\r\n\r\nimport StrapiLogo from '../../../assets/images/logo-strapi-2022.svg';\r\nimport { AppInfoContextValue } from '../../../features/AppInfo';\r\nimport { useNotification } from '../../../features/Notifications';\r\nimport { useTracking } from '../../../features/Tracking';\r\nimport { useClipboard } from '../../../hooks/useClipboard';\r\n\r\nimport type { Plugin, Provider } from '../hooks/useMarketplaceData';\r\nimport type { NpmPackageType } from '../MarketplacePage';\r\n\r\n// Custom component to have an ellipsis after the 2nd line\r\nconst EllipsisText = styled<TypographyComponent<'p'>>(Typography)`\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface NpmPackageCardProps extends Pick<AppInfoContextValue, 'useYarn'> {\r\n  npmPackage: Plugin | Provider;\r\n  isInstalled: boolean;\r\n  isInDevelopmentMode: AppInfoContextValue['autoReload'];\r\n  npmPackageType: NpmPackageType;\r\n  strapiAppVersion: AppInfoContextValue['strapiVersion'];\r\n}\r\n\r\nconst NpmPackageCard = ({\r\n  npmPackage,\r\n  isInstalled,\r\n  useYarn,\r\n  isInDevelopmentMode,\r\n  npmPackageType,\r\n  strapiAppVersion,\r\n}: NpmPackageCardProps) => {\r\n  const { attributes } = npmPackage;\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n\r\n  const commandToCopy = useYarn\r\n    ? `yarn add ${attributes.npmPackageName}`\r\n    : `npm install ${attributes.npmPackageName}`;\r\n\r\n  const madeByStrapiMessage = formatMessage({\r\n    id: 'admin.pages.MarketPlacePage.plugin.tooltip.madeByStrapi',\r\n    defaultMessage: 'Made by Strapi',\r\n  });\r\n\r\n  const npmPackageHref = `https://market.strapi.io/${pluralize.plural(npmPackageType)}/${\r\n    attributes.slug\r\n  }`;\r\n\r\n  const versionRange = semver.validRange(attributes.strapiVersion);\r\n\r\n  const isCompatible = versionRange\r\n    ? semver.satisfies(strapiAppVersion ?? '', versionRange)\r\n    : false;\r\n\r\n  return (\r\n    <Flex\r\n      direction=\"column\"\r\n      justifyContent=\"space-between\"\r\n      paddingTop={4}\r\n      paddingRight={4}\r\n      paddingBottom={4}\r\n      paddingLeft={4}\r\n      hasRadius\r\n      background=\"neutral0\"\r\n      shadow=\"tableShadow\"\r\n      height=\"100%\"\r\n      alignItems=\"normal\"\r\n      data-testid=\"npm-package-card\"\r\n    >\r\n      <Box>\r\n        <Flex direction=\"row\" justifyContent=\"space-between\" alignItems=\"flex-start\">\r\n          <Box\r\n            tag=\"img\"\r\n            src={attributes.logo.url}\r\n            alt={`${attributes.name} logo`}\r\n            hasRadius\r\n            width={11}\r\n            height={11}\r\n          />\r\n          <PackageStats\r\n            githubStars={attributes.githubStars}\r\n            npmDownloads={attributes.npmDownloads}\r\n            npmPackageType={npmPackageType}\r\n          />\r\n        </Flex>\r\n        <Box paddingTop={4}>\r\n          <Typography tag=\"h3\" variant=\"delta\">\r\n            <Flex\r\n              alignItems=\"center\"\r\n              gap={attributes.validated && !attributes.madeByStrapi ? 2 : 1}\r\n            >\r\n              {attributes.name}\r\n              {attributes.validated && !attributes.madeByStrapi && (\r\n                <Tooltip\r\n                  description={formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.plugin.tooltip.verified',\r\n                    defaultMessage: 'Plugin verified by Strapi',\r\n                  })}\r\n                >\r\n                  <CheckCircle fill=\"success600\" />\r\n                </Tooltip>\r\n              )}\r\n              {attributes.madeByStrapi && (\r\n                <Tooltip description={madeByStrapiMessage}>\r\n                  <Box\r\n                    tag=\"img\"\r\n                    src={StrapiLogo}\r\n                    alt={madeByStrapiMessage}\r\n                    width={6}\r\n                    height=\"auto\"\r\n                  />\r\n                </Tooltip>\r\n              )}\r\n            </Flex>\r\n          </Typography>\r\n        </Box>\r\n        <Box paddingTop={2}>\r\n          <EllipsisText tag=\"p\" variant=\"omega\" textColor=\"neutral600\">\r\n            {attributes.description}\r\n          </EllipsisText>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Flex gap={2} style={{ alignSelf: 'flex-end' }} paddingTop={6}>\r\n        <LinkButton\r\n          size=\"S\"\r\n          href={npmPackageHref}\r\n          isExternal\r\n          endIcon={<ExternalLink />}\r\n          aria-label={formatMessage(\r\n            {\r\n              id: 'admin.pages.MarketPlacePage.plugin.info.label',\r\n              defaultMessage: 'Learn more about {pluginName}',\r\n            },\r\n            { pluginName: attributes.name }\r\n          )}\r\n          variant=\"tertiary\"\r\n          onClick={() => trackUsage('didPluginLearnMore')}\r\n        >\r\n          {formatMessage({\r\n            id: 'admin.pages.MarketPlacePage.plugin.info.text',\r\n            defaultMessage: 'More',\r\n          })}\r\n        </LinkButton>\r\n        <InstallPluginButton\r\n          isInstalled={isInstalled}\r\n          isInDevelopmentMode={isInDevelopmentMode}\r\n          isCompatible={isCompatible}\r\n          commandToCopy={commandToCopy}\r\n          strapiAppVersion={strapiAppVersion}\r\n          strapiPeerDepVersion={attributes.strapiVersion}\r\n          pluginName={attributes.name}\r\n        />\r\n      </Flex>\r\n    </Flex>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * InstallPluginButton\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface InstallPluginButtonProps\r\n  extends Pick<NpmPackageCardProps, 'isInstalled' | 'isInDevelopmentMode' | 'strapiAppVersion'> {\r\n  commandToCopy: string;\r\n  pluginName: string;\r\n  strapiPeerDepVersion?: string;\r\n  isCompatible?: boolean;\r\n}\r\n\r\nconst InstallPluginButton = ({\r\n  isInstalled,\r\n  isInDevelopmentMode,\r\n  isCompatible,\r\n  commandToCopy,\r\n  strapiAppVersion,\r\n  strapiPeerDepVersion,\r\n  pluginName,\r\n}: InstallPluginButtonProps) => {\r\n  const { toggleNotification } = useNotification();\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n  const { copy } = useClipboard();\r\n\r\n  const handleCopy = async () => {\r\n    const didCopy = await copy(commandToCopy);\r\n\r\n    if (didCopy) {\r\n      trackUsage('willInstallPlugin');\r\n      toggleNotification({\r\n        type: 'success',\r\n        message: formatMessage({ id: 'admin.pages.MarketPlacePage.plugin.copy.success' }),\r\n      });\r\n    }\r\n  };\r\n\r\n  // Already installed\r\n  if (isInstalled) {\r\n    return (\r\n      <Flex gap={2} paddingLeft={4}>\r\n        <Check width=\"1.2rem\" height=\"1.2rem\" color=\"success600\" />\r\n        <Typography variant=\"omega\" textColor=\"success600\" fontWeight=\"bold\">\r\n          {formatMessage({\r\n            id: 'admin.pages.MarketPlacePage.plugin.installed',\r\n            defaultMessage: 'Installed',\r\n          })}\r\n        </Typography>\r\n      </Flex>\r\n    );\r\n  }\r\n\r\n  // In development, show install button\r\n  if (isInDevelopmentMode && isCompatible !== false) {\r\n    return (\r\n      <CardButton\r\n        strapiAppVersion={strapiAppVersion}\r\n        strapiPeerDepVersion={strapiPeerDepVersion}\r\n        handleCopy={handleCopy}\r\n        pluginName={pluginName}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Not in development and plugin not installed already. Show nothing\r\n  return null;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * CardButton\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface CardButtonProps\r\n  extends Pick<NpmPackageCardProps, 'strapiAppVersion'>,\r\n    Pick<InstallPluginButtonProps, 'strapiPeerDepVersion' | 'pluginName'> {\r\n  handleCopy: () => void;\r\n}\r\n\r\nconst CardButton = ({\r\n  strapiPeerDepVersion,\r\n  strapiAppVersion,\r\n  handleCopy,\r\n  pluginName,\r\n}: CardButtonProps) => {\r\n  const { formatMessage } = useIntl();\r\n  const versionRange = semver.validRange(strapiPeerDepVersion);\r\n  const isCompatible = semver.satisfies(strapiAppVersion ?? '', versionRange ?? '');\r\n\r\n  const installMessage = formatMessage({\r\n    id: 'admin.pages.MarketPlacePage.plugin.copy',\r\n    defaultMessage: 'Copy install command',\r\n  });\r\n\r\n  // Only plugins receive a strapiAppVersion\r\n  if (strapiAppVersion) {\r\n    if (!versionRange || !isCompatible) {\r\n      return (\r\n        <Tooltip\r\n          data-testid={`tooltip-${pluginName}`}\r\n          label={formatMessage(\r\n            {\r\n              id: 'admin.pages.MarketPlacePage.plugin.version',\r\n              defaultMessage:\r\n                'Update your Strapi version: \"{strapiAppVersion}\" to: \"{versionRange}\"',\r\n            },\r\n            {\r\n              strapiAppVersion,\r\n              versionRange,\r\n            }\r\n          )}\r\n        >\r\n          <span>\r\n            <Button\r\n              size=\"S\"\r\n              startIcon={<Duplicate />}\r\n              variant=\"secondary\"\r\n              onClick={handleCopy}\r\n              disabled={!isCompatible}\r\n            >\r\n              {installMessage}\r\n            </Button>\r\n          </span>\r\n        </Tooltip>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button size=\"S\" startIcon={<Duplicate />} variant=\"secondary\" onClick={handleCopy}>\r\n      {installMessage}\r\n    </Button>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * PackageStats\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface PackageStatsProps {\r\n  githubStars?: number;\r\n  npmDownloads?: number;\r\n  npmPackageType: NpmPackageType;\r\n}\r\n\r\nconst PackageStats = ({ githubStars = 0, npmDownloads = 0, npmPackageType }: PackageStatsProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Flex gap={1}>\r\n      {!!githubStars && (\r\n        <>\r\n          <GitHub height=\"1.2rem\" width=\"1.2rem\" aria-hidden />\r\n          <Star height=\"1.2rem\" width=\"1.2rem\" fill=\"warning500\" aria-hidden />\r\n          <p\r\n            aria-label={formatMessage(\r\n              {\r\n                id: `admin.pages.MarketPlacePage.${npmPackageType}.githubStars`,\r\n                defaultMessage: `This {package} was starred {starsCount} on GitHub`,\r\n              },\r\n              {\r\n                starsCount: githubStars,\r\n                package: npmPackageType,\r\n              }\r\n            )}\r\n          >\r\n            <Typography variant=\"pi\" textColor=\"neutral800\">\r\n              {githubStars}\r\n            </Typography>\r\n          </p>\r\n          <VerticalDivider />\r\n        </>\r\n      )}\r\n      <Download height=\"1.2rem\" width=\"1.2rem\" aria-hidden />\r\n      <p\r\n        aria-label={formatMessage(\r\n          {\r\n            id: `admin.pages.MarketPlacePage.${npmPackageType}.downloads`,\r\n            defaultMessage: `This {package} has {downloadsCount} weekly downloads`,\r\n          },\r\n          {\r\n            downloadsCount: npmDownloads,\r\n            package: npmPackageType,\r\n          }\r\n        )}\r\n      >\r\n        <Typography variant=\"pi\" textColor=\"neutral800\">\r\n          {npmDownloads}\r\n        </Typography>\r\n      </p>\r\n    </Flex>\r\n  );\r\n};\r\n\r\nconst VerticalDivider = styled(Divider)`\r\n  width: 1.2rem;\r\n  transform: rotate(90deg);\r\n`;\r\n\r\nexport { NpmPackageCard };\r\nexport type { NpmPackageCardProps };\r\n","import { Box, BoxComponent, Flex, Grid, Typography } from '@strapi/design-system';\r\nimport { EmptyDocuments } from '@strapi/icons/symbols';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { Layouts } from '../../../components/Layouts/Layout';\r\nimport { Page } from '../../../components/PageHelpers';\r\nimport { AppInfoContextValue } from '../../../features/AppInfo';\r\n\r\nimport { NpmPackageCard, NpmPackageCardProps } from './NpmPackageCard';\r\n\r\nimport type { Plugin, Provider } from '../hooks/useMarketplaceData';\r\n\r\ninterface NpmPackagesGridProps extends Pick<NpmPackageCardProps, 'npmPackageType' | 'useYarn'> {\r\n  debouncedSearch: string;\r\n  installedPackageNames: string[];\r\n  isInDevelopmentMode: AppInfoContextValue['autoReload'];\r\n  npmPackages?: Array<Plugin | Provider>;\r\n  status: 'idle' | 'loading' | 'error' | 'success';\r\n  strapiAppVersion?: NpmPackageCardProps['strapiAppVersion'];\r\n}\r\n\r\nconst NpmPackagesGrid = ({\r\n  status,\r\n  npmPackages = [],\r\n  installedPackageNames = [],\r\n  useYarn,\r\n  isInDevelopmentMode,\r\n  npmPackageType,\r\n  strapiAppVersion,\r\n  debouncedSearch,\r\n}: NpmPackagesGridProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  if (status === 'error') {\r\n    return <Page.Error />;\r\n  }\r\n\r\n  if (status === 'loading') {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  const emptySearchMessage = formatMessage(\r\n    {\r\n      id: 'admin.pages.MarketPlacePage.search.empty',\r\n      defaultMessage: 'No result for \"{target}\"',\r\n    },\r\n    { target: debouncedSearch }\r\n  );\r\n\r\n  if (npmPackages.length === 0) {\r\n    return (\r\n      <Box position=\"relative\">\r\n        <Layouts.Grid size=\"M\">\r\n          {Array(12)\r\n            .fill(null)\r\n            .map((_, idx) => (\r\n              <EmptyPluginCard key={idx} height=\"234px\" hasRadius />\r\n            ))}\r\n        </Layouts.Grid>\r\n        <Box position=\"absolute\" top={11} width=\"100%\">\r\n          <Flex alignItems=\"center\" justifyContent=\"center\" direction=\"column\">\r\n            <EmptyDocuments width=\"160px\" height=\"88px\" />\r\n            <Box paddingTop={6}>\r\n              <Typography variant=\"delta\" tag=\"p\" textColor=\"neutral600\">\r\n                {emptySearchMessage}\r\n              </Typography>\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Grid.Root gap={4}>\r\n      {npmPackages.map((npmPackage) => (\r\n        <Grid.Item\r\n          col={4}\r\n          s={6}\r\n          xs={12}\r\n          style={{ height: '100%' }}\r\n          key={npmPackage.id}\r\n          direction=\"column\"\r\n          alignItems=\"stretch\"\r\n        >\r\n          <NpmPackageCard\r\n            npmPackage={npmPackage}\r\n            isInstalled={installedPackageNames.includes(npmPackage.attributes.npmPackageName)}\r\n            useYarn={useYarn}\r\n            isInDevelopmentMode={isInDevelopmentMode}\r\n            npmPackageType={npmPackageType}\r\n            strapiAppVersion={strapiAppVersion}\r\n          />\r\n        </Grid.Item>\r\n      ))}\r\n    </Grid.Root>\r\n  );\r\n};\r\n\r\nconst EmptyPluginCard = styled<BoxComponent>(Box)`\r\n  background: ${({ theme }) =>\r\n    `linear-gradient(180deg, rgba(234, 234, 239, 0) 0%, ${theme.colors.neutral150} 100%)`};\r\n  opacity: 0.33;\r\n`;\r\n\r\nexport { NpmPackagesGrid };\r\n","import { LinkButton } from '@strapi/design-system';\r\nimport { Upload } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { Layouts } from '../../../components/Layouts/Layout';\r\nimport { useTracking } from '../../../features/Tracking';\r\n\r\nimport type { NpmPackageType } from '../MarketplacePage';\r\n\r\ninterface PageHeaderProps {\r\n  isOnline?: boolean;\r\n  npmPackageType?: NpmPackageType;\r\n}\r\n\r\nconst PageHeader = ({ isOnline, npmPackageType = 'plugin' }: PageHeaderProps) => {\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n\r\n  const tracking = npmPackageType === 'provider' ? 'didSubmitProvider' : 'didSubmitPlugin';\r\n\r\n  return (\r\n    <Layouts.Header\r\n      title={formatMessage({\r\n        id: 'global.marketplace',\r\n        defaultMessage: 'Marketplace',\r\n      })}\r\n      subtitle={formatMessage({\r\n        id: 'admin.pages.MarketPlacePage.subtitle',\r\n        defaultMessage: 'Get more out of Strapi',\r\n      })}\r\n      primaryAction={\r\n        isOnline && (\r\n          <LinkButton\r\n            startIcon={<Upload />}\r\n            variant=\"tertiary\"\r\n            href={`https://market.strapi.io/submit-${npmPackageType}`}\r\n            onClick={() => trackUsage(tracking)}\r\n            isExternal\r\n          >\r\n            {formatMessage({\r\n              id: `admin.pages.MarketPlacePage.submit.${npmPackageType}.link`,\r\n              defaultMessage: `Submit ${npmPackageType}`,\r\n            })}\r\n          </LinkButton>\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport { PageHeader };\r\nexport type { PageHeaderProps };\r\n","import { Box, Flex, Main, Typography } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { Layouts } from '../../../components/Layouts/Layout';\r\n\r\nimport { PageHeader } from './PageHeader';\r\n\r\nconst OfflineLayout = () => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Main>\r\n        <PageHeader />\r\n        <Flex\r\n          width=\"100%\"\r\n          direction=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          paddingTop={`12rem`}\r\n        >\r\n          <Box paddingBottom={2}>\r\n            <Typography textColor=\"neutral700\" variant=\"alpha\">\r\n              {formatMessage({\r\n                id: 'admin.pages.MarketPlacePage.offline.title',\r\n                defaultMessage: 'You are offline',\r\n              })}\r\n            </Typography>\r\n          </Box>\r\n          <Box paddingBottom={6}>\r\n            <Typography textColor=\"neutral700\" variant=\"epsilon\">\r\n              {formatMessage({\r\n                id: 'admin.pages.MarketPlacePage.offline.subtitle',\r\n                defaultMessage: 'You need to be connected to the Internet to access Strapi Market.',\r\n              })}\r\n            </Typography>\r\n          </Box>\r\n          <svg\r\n            width=\"88\"\r\n            height=\"88\"\r\n            viewBox=\"0 0 88 88\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <rect x=\".5\" y=\".5\" width=\"87\" height=\"87\" rx=\"43.5\" fill=\"#F0F0FF\" />\r\n            <path\r\n              d=\"M34 39.3h-4c-2.6 0-4.7 1-6.6 2.8a9 9 0 0 0-2.7 6.6 9 9 0 0 0 2.7 6.6A9 9 0 0 0 30 58h22.8L34 39.3Zm-11-11 3-3 39 39-3 3-4.7-4.6H30a13.8 13.8 0 0 1-14-14c0-3.8 1.3-7 4-9.7 2.6-2.7 5.7-4.2 9.5-4.3L23 28.2Zm38.2 11.1c3 .2 5.5 1.5 7.6 3.7A11 11 0 0 1 72 51c0 4-1.6 7.2-5 9.5l-3.3-3.4a6.5 6.5 0 0 0 3.6-6.1c0-1.9-.7-3.5-2-5-1.5-1.3-3.1-2-5-2h-3.5v-1.2c0-3.6-1.2-6.6-3.7-9a13 13 0 0 0-15-2.3L34.6 28a17 17 0 0 1 20.3 1.5c3.5 2.7 5.5 6 6.3 10Z\"\r\n              fill=\"#4945FF\"\r\n            />\r\n            <rect x=\".5\" y=\".5\" width=\"87\" height=\"87\" rx=\"43.5\" stroke=\"#D9D8FF\" />\r\n          </svg>\r\n        </Flex>\r\n      </Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nexport { OfflineLayout };\r\n","import { Box, SingleSelectOption, SingleSelect, BoxComponent } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled } from 'styled-components';\r\n\r\nconst SORT_TYPES = {\r\n  'name:asc': {\r\n    selected: {\r\n      id: 'admin.pages.MarketPlacePage.sort.alphabetical.selected',\r\n      defaultMessage: 'Sort by alphabetical order',\r\n    },\r\n    option: {\r\n      id: 'admin.pages.MarketPlacePage.sort.alphabetical',\r\n      defaultMessage: 'Alphabetical order',\r\n    },\r\n  },\r\n  'submissionDate:desc': {\r\n    selected: {\r\n      id: 'admin.pages.MarketPlacePage.sort.newest.selected',\r\n      defaultMessage: 'Sort by newest',\r\n    },\r\n    option: {\r\n      id: 'admin.pages.MarketPlacePage.sort.newest',\r\n      defaultMessage: 'Newest',\r\n    },\r\n  },\r\n  'githubStars:desc': {\r\n    selected: {\r\n      id: 'admin.pages.MarketPlacePage.sort.githubStars.selected',\r\n      defaultMessage: 'Sort by GitHub stars',\r\n    },\r\n    option: {\r\n      id: 'admin.pages.MarketPlacePage.sort.githubStars',\r\n      defaultMessage: 'Number of GitHub stars',\r\n    },\r\n  },\r\n  'npmDownloads:desc': {\r\n    selected: {\r\n      id: 'admin.pages.MarketPlacePage.sort.npmDownloads.selected',\r\n      defaultMessage: 'Sort by npm downloads',\r\n    },\r\n    option: {\r\n      id: 'admin.pages.MarketPlacePage.sort.npmDownloads',\r\n      defaultMessage: 'Number of downloads',\r\n    },\r\n  },\r\n} as const;\r\n\r\ninterface SortSelectProps {\r\n  sortQuery: keyof typeof SORT_TYPES;\r\n  handleSelectChange: (payload: { sort: string }) => void;\r\n}\r\n\r\nconst SortSelect = ({ sortQuery, handleSelectChange }: SortSelectProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <SelectWrapper>\r\n      <SingleSelect\r\n        value={sortQuery}\r\n        customizeContent={() => formatMessage(SORT_TYPES[sortQuery].selected)}\r\n        onChange={(sortName) => {\r\n          // @ts-expect-error – in V2 design-system we'll only ever return strings.\r\n          handleSelectChange({ sort: sortName });\r\n        }}\r\n        aria-label={formatMessage({\r\n          id: 'admin.pages.MarketPlacePage.sort.label',\r\n          defaultMessage: 'Sort by',\r\n        })}\r\n        size=\"S\"\r\n      >\r\n        {Object.entries(SORT_TYPES).map(([sortName, messages]) => {\r\n          return (\r\n            <SingleSelectOption key={sortName} value={sortName}>\r\n              {formatMessage(messages.option)}\r\n            </SingleSelectOption>\r\n          );\r\n        })}\r\n      </SingleSelect>\r\n    </SelectWrapper>\r\n  );\r\n};\r\n\r\nconst SelectWrapper = styled<BoxComponent>(Box)`\r\n  font-weight: ${({ theme }) => theme.fontWeights.semiBold};\r\n\r\n  span {\r\n    font-size: ${({ theme }) => theme.fontSizes[1]};\r\n  }\r\n`;\r\n\r\nexport { SortSelect };\r\nexport type { SortSelectProps };\r\n","import { useNotifyAT } from '@strapi/design-system';\r\nimport * as qs from 'qs';\r\nimport { useIntl } from 'react-intl';\r\nimport { useQuery } from 'react-query';\r\n\r\nimport { useNotification } from '../../../features/Notifications';\r\n\r\nimport type { MarketplacePageQuery, NpmPackageType, TabQuery } from '../MarketplacePage';\r\n\r\nconst MARKETPLACE_API_URL = 'https://market-api.strapi.io';\r\n\r\ninterface UseMarketplaceDataParams {\r\n  npmPackageType: NpmPackageType;\r\n  debouncedSearch: string;\r\n  query?: MarketplacePageQuery;\r\n  tabQuery: TabQuery;\r\n  strapiVersion?: string | null;\r\n}\r\n\r\ntype Collections =\r\n  | 'Verified'\r\n  | 'Made by the community'\r\n  | 'Made by Strapi'\r\n  | 'Made by official partners';\r\n\r\ntype Categories = 'Custom fields' | 'Deployment' | 'Monitoring';\r\n\r\ntype FilterTypes = 'categories' | 'collections';\r\n\r\ninterface Plugin {\r\n  id: string;\r\n  attributes: {\r\n    name: string;\r\n    description: string;\r\n    slug: string;\r\n    npmPackageName: string;\r\n    npmPackageUrl: string;\r\n    npmDownloads: number;\r\n    repositoryUrl: string;\r\n    githubStars: number;\r\n    logo: {\r\n      url: string;\r\n    };\r\n    developerName: string;\r\n    validated: boolean;\r\n    madeByStrapi: boolean;\r\n    strapiCompatibility: string;\r\n    submissionDate: string;\r\n    collections: Collections[];\r\n    categories: Categories[];\r\n    strapiVersion: string;\r\n    screenshots: Array<{\r\n      url: string;\r\n    }>;\r\n  };\r\n}\r\n\r\ninterface Provider {\r\n  id: string;\r\n  attributes: {\r\n    name: string;\r\n    description: string;\r\n    slug: string;\r\n    npmPackageName: string;\r\n    npmPackageUrl: string;\r\n    npmDownloads: number;\r\n    repositoryUrl: string;\r\n    githubStars: number;\r\n    pluginName: string;\r\n    logo: {\r\n      url: string;\r\n    };\r\n    developerName: string;\r\n    validated: boolean;\r\n    madeByStrapi: boolean;\r\n    strapiCompatibility: string;\r\n    strapiVersion?: never;\r\n    submissionDate: string;\r\n    collections: Collections[];\r\n  };\r\n}\r\n\r\ninterface MarketplaceMeta {\r\n  collections: Record<Collections, number>;\r\n  pagination: {\r\n    page: number;\r\n    pageSize: number;\r\n    pageCount: number;\r\n    total: number;\r\n  };\r\n}\r\n\r\ninterface MarketplaceResponse<TData extends Plugin | Provider> {\r\n  data: TData[];\r\n  meta: TData extends Provider\r\n    ? MarketplaceMeta\r\n    : MarketplaceMeta & { categories: Record<Categories, number> };\r\n}\r\n\r\nfunction useMarketplaceData({\r\n  npmPackageType,\r\n  debouncedSearch,\r\n  query,\r\n  tabQuery,\r\n  strapiVersion,\r\n}: UseMarketplaceDataParams) {\r\n  const { notifyStatus } = useNotifyAT();\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const marketplaceTitle = formatMessage({\r\n    id: 'global.marketplace',\r\n    defaultMessage: 'Marketplace',\r\n  });\r\n\r\n  const notifyMarketplaceLoad = () => {\r\n    notifyStatus(\r\n      formatMessage(\r\n        {\r\n          id: 'app.utils.notify.data-loaded',\r\n          defaultMessage: 'The {target} has loaded',\r\n        },\r\n        { target: marketplaceTitle }\r\n      )\r\n    );\r\n  };\r\n\r\n  const paginationParams = {\r\n    page: query?.page || 1,\r\n    pageSize: query?.pageSize || 24,\r\n  };\r\n\r\n  const pluginParams = {\r\n    ...tabQuery.plugin,\r\n    pagination: paginationParams,\r\n    search: debouncedSearch,\r\n    version: strapiVersion,\r\n  };\r\n\r\n  const { data: pluginsResponse, status: pluginsStatus } = useQuery(\r\n    ['marketplace', 'plugins', pluginParams],\r\n    async () => {\r\n      try {\r\n        const queryString = qs.stringify(pluginParams);\r\n        const res = await fetch(`${MARKETPLACE_API_URL}/plugins?${queryString}`);\r\n\r\n        if (!res.ok) {\r\n          throw new Error('Failed to fetch marketplace plugins.');\r\n        }\r\n\r\n        const data = (await res.json()) as MarketplaceResponse<Plugin>;\r\n        return data;\r\n      } catch (error) {\r\n        // silence\r\n      }\r\n\r\n      return null;\r\n    },\r\n    {\r\n      onSuccess() {\r\n        notifyMarketplaceLoad();\r\n      },\r\n      onError() {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occured' }),\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const providerParams = {\r\n    ...tabQuery.provider,\r\n    pagination: paginationParams,\r\n    search: debouncedSearch,\r\n    version: strapiVersion,\r\n  };\r\n\r\n  const { data: providersResponse, status: providersStatus } = useQuery(\r\n    ['marketplace', 'providers', providerParams],\r\n    async () => {\r\n      const queryString = qs.stringify(providerParams);\r\n      const res = await fetch(`${MARKETPLACE_API_URL}/providers?${queryString}`);\r\n\r\n      if (!res.ok) {\r\n        throw new Error('Failed to fetch marketplace providers.');\r\n      }\r\n\r\n      const data = (await res.json()) as MarketplaceResponse<Provider>;\r\n\r\n      return data;\r\n    },\r\n    {\r\n      onSuccess() {\r\n        notifyMarketplaceLoad();\r\n      },\r\n      onError() {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatMessage({ id: 'notification.error', defaultMessage: 'An error occured' }),\r\n        });\r\n      },\r\n    }\r\n  );\r\n\r\n  const npmPackageTypeResponse = npmPackageType === 'plugin' ? pluginsResponse : providersResponse;\r\n\r\n  const possibleCollections = npmPackageTypeResponse?.meta.collections ?? {};\r\n  const possibleCategories = pluginsResponse?.meta.categories ?? {};\r\n\r\n  const { pagination } = npmPackageTypeResponse?.meta ?? {};\r\n\r\n  return {\r\n    pluginsResponse,\r\n    providersResponse,\r\n    pluginsStatus,\r\n    providersStatus,\r\n    possibleCollections,\r\n    possibleCategories,\r\n    pagination,\r\n  };\r\n}\r\n\r\nexport { useMarketplaceData };\r\nexport type {\r\n  MarketplaceResponse,\r\n  Plugin,\r\n  Provider,\r\n  MarketplaceMeta,\r\n  Collections,\r\n  Categories,\r\n  FilterTypes,\r\n  UseMarketplaceDataParams,\r\n};\r\n","import * as React from 'react';\r\n\r\n/**\r\n * For more details about this hook see:\r\n * https://www.30secondsofcode.org/react/s/use-navigator-on-line\r\n */\r\nexport const useNavigatorOnline = (): boolean => {\r\n  const onlineStatus =\r\n    typeof navigator !== 'undefined' && typeof navigator.onLine === 'boolean'\r\n      ? navigator.onLine\r\n      : true;\r\n\r\n  const [isOnline, setIsOnline] = React.useState(onlineStatus);\r\n\r\n  const setOnline = () => setIsOnline(true);\r\n  const setOffline = () => setIsOnline(false);\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('online', setOnline);\r\n    window.addEventListener('offline', setOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', setOnline);\r\n      window.removeEventListener('offline', setOffline);\r\n    };\r\n  }, []);\r\n\r\n  return isOnline;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { Box, Flex, Searchbar, Tabs } from '@strapi/design-system';\r\nimport { ExternalLink } from '@strapi/icons';\r\nimport { GlassesSquare } from '@strapi/icons/symbols';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { ContentBox } from '../../components/ContentBox';\r\nimport { Layouts } from '../../components/Layouts/Layout';\r\nimport { Page } from '../../components/PageHelpers';\r\nimport { Pagination } from '../../components/Pagination';\r\nimport { useTypedSelector } from '../../core/store/hooks';\r\nimport { useAppInfo } from '../../features/AppInfo';\r\nimport { useNotification } from '../../features/Notifications';\r\nimport { useTracking } from '../../features/Tracking';\r\nimport { useDebounce } from '../../hooks/useDebounce';\r\nimport { useQueryParams } from '../../hooks/useQueryParams';\r\n\r\nimport { NpmPackagesFilters } from './components/NpmPackagesFilters';\r\nimport { NpmPackagesGrid } from './components/NpmPackagesGrid';\r\nimport { OfflineLayout } from './components/OfflineLayout';\r\nimport { PageHeader } from './components/PageHeader';\r\nimport { SortSelect, SortSelectProps } from './components/SortSelect';\r\nimport { FilterTypes, useMarketplaceData } from './hooks/useMarketplaceData';\r\nimport { useNavigatorOnline } from './hooks/useNavigatorOnline';\r\n\r\ntype NpmPackageType = 'plugin' | 'provider';\r\n\r\ninterface MarketplacePageQuery {\r\n  collections?: string[];\r\n  categories?: string[];\r\n  npmPackageType?: NpmPackageType;\r\n  page?: number;\r\n  pageSize?: number;\r\n  search?: string;\r\n  sort?: SortSelectProps['sortQuery'];\r\n}\r\n\r\ninterface TabQuery {\r\n  plugin: MarketplacePageQuery;\r\n  provider: MarketplacePageQuery;\r\n}\r\n\r\nconst PLUGIN = 'plugin';\r\nconst PROVIDER = 'provider';\r\n\r\nconst MarketplacePage = () => {\r\n  const { formatMessage } = useIntl();\r\n  const { trackUsage } = useTracking();\r\n  const { toggleNotification } = useNotification();\r\n  const [{ query }, setQuery] = useQueryParams<MarketplacePageQuery>();\r\n  const debouncedSearch = useDebounce(query?.search, 500) || '';\r\n\r\n  const {\r\n    autoReload: isInDevelopmentMode,\r\n    dependencies,\r\n    useYarn,\r\n    strapiVersion,\r\n  } = useAppInfo('MarketplacePage', (state) => state);\r\n  const isOnline = useNavigatorOnline();\r\n\r\n  const npmPackageType = query?.npmPackageType || PLUGIN;\r\n\r\n  const [tabQuery, setTabQuery] = React.useState<TabQuery>({\r\n    plugin: npmPackageType === PLUGIN ? { ...query } : {},\r\n    provider: npmPackageType === PROVIDER ? { ...query } : {},\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    trackUsage('didGoToMarketplace');\r\n  }, [trackUsage]);\r\n\r\n  React.useEffect(() => {\r\n    if (!isInDevelopmentMode) {\r\n      toggleNotification({\r\n        type: 'info',\r\n        message: formatMessage({\r\n          id: 'admin.pages.MarketPlacePage.production',\r\n          defaultMessage: 'Manage plugins from the development environment',\r\n        }),\r\n      });\r\n    }\r\n  }, [toggleNotification, isInDevelopmentMode, formatMessage]);\r\n\r\n  const {\r\n    pluginsResponse,\r\n    providersResponse,\r\n    pluginsStatus,\r\n    providersStatus,\r\n    possibleCollections,\r\n    possibleCategories,\r\n    pagination,\r\n  } = useMarketplaceData({ npmPackageType, debouncedSearch, query, tabQuery, strapiVersion });\r\n\r\n  if (!isOnline) {\r\n    return <OfflineLayout />;\r\n  }\r\n\r\n  const handleTabChange = (tab: string) => {\r\n    const selectedTab = tab === PLUGIN || tab === PROVIDER ? tab : PLUGIN;\r\n\r\n    const hasTabQuery = tabQuery[selectedTab] && Object.keys(tabQuery[selectedTab]).length;\r\n\r\n    if (hasTabQuery) {\r\n      setQuery({\r\n        // Keep filters and search\r\n        ...tabQuery[selectedTab],\r\n        search: query?.search || '',\r\n        // Set tab and reset page\r\n        npmPackageType: selectedTab,\r\n        page: 1,\r\n      });\r\n    } else {\r\n      setQuery({\r\n        // Set tab\r\n        npmPackageType: selectedTab,\r\n        // Clear filters\r\n        collections: [],\r\n        categories: [],\r\n        sort: 'name:asc',\r\n        page: 1,\r\n        // Keep search\r\n        search: query?.search || '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSelectChange = (update: Partial<MarketplacePageQuery>) => {\r\n    setQuery({ ...update, page: 1 });\r\n    setTabQuery((prev) => ({\r\n      ...prev,\r\n      [npmPackageType]: { ...prev[npmPackageType], ...update },\r\n    }));\r\n  };\r\n\r\n  const handleSelectClear = (filterType: FilterTypes) => {\r\n    setQuery({ [filterType]: [], page: undefined }, 'remove');\r\n    setTabQuery((prev) => ({ ...prev, [npmPackageType]: {} }));\r\n  };\r\n\r\n  const handleSortSelectChange: SortSelectProps['handleSelectChange'] = ({ sort }) =>\r\n    // @ts-expect-error - this is a narrowing issue.\r\n    handleSelectChange({ sort });\r\n\r\n  // Check if plugins and providers are installed already\r\n  const installedPackageNames = Object.keys(dependencies ?? {});\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Page.Main>\r\n        <Page.Title>\r\n          {formatMessage({\r\n            id: 'admin.pages.MarketPlacePage.head',\r\n            defaultMessage: 'Marketplace - Plugins',\r\n          })}\r\n        </Page.Title>\r\n        <PageHeader isOnline={isOnline} npmPackageType={npmPackageType} />\r\n        <Layouts.Content>\r\n          <Tabs.Root variant=\"simple\" onValueChange={handleTabChange} value={npmPackageType}>\r\n            <Flex justifyContent=\"space-between\" paddingBottom={4}>\r\n              <Tabs.List\r\n                aria-label={formatMessage({\r\n                  id: 'admin.pages.MarketPlacePage.tab-group.label',\r\n                  defaultMessage: 'Plugins and Providers for Strapi',\r\n                })}\r\n              >\r\n                <Tabs.Trigger value={PLUGIN}>\r\n                  {formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.plugins',\r\n                    defaultMessage: 'Plugins',\r\n                  })}{' '}\r\n                  {pluginsResponse ? `(${pluginsResponse.meta.pagination.total})` : '...'}\r\n                </Tabs.Trigger>\r\n                <Tabs.Trigger value={PROVIDER}>\r\n                  {formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.providers',\r\n                    defaultMessage: 'Providers',\r\n                  })}{' '}\r\n                  {providersResponse ? `(${providersResponse.meta.pagination.total})` : '...'}\r\n                </Tabs.Trigger>\r\n              </Tabs.List>\r\n\r\n              <Box width=\"25%\">\r\n                <Searchbar\r\n                  name=\"searchbar\"\r\n                  onClear={() => setQuery({ search: '', page: 1 })}\r\n                  value={query?.search}\r\n                  onChange={(e) => setQuery({ search: e.target.value, page: 1 })}\r\n                  clearLabel={formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.search.clear',\r\n                    defaultMessage: 'Clear the search',\r\n                  })}\r\n                  placeholder={formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\r\n                    defaultMessage: 'Search',\r\n                  })}\r\n                >\r\n                  {formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.search.placeholder',\r\n                    defaultMessage: 'Search',\r\n                  })}\r\n                </Searchbar>\r\n              </Box>\r\n            </Flex>\r\n            <Flex paddingBottom={4} gap={2}>\r\n              <SortSelect\r\n                sortQuery={query?.sort || 'name:asc'}\r\n                handleSelectChange={handleSortSelectChange}\r\n              />\r\n              <NpmPackagesFilters\r\n                npmPackageType={npmPackageType}\r\n                possibleCollections={possibleCollections}\r\n                possibleCategories={possibleCategories}\r\n                query={query || {}}\r\n                handleSelectChange={handleSelectChange}\r\n                handleSelectClear={handleSelectClear}\r\n              />\r\n            </Flex>\r\n            <Tabs.Content value={PLUGIN}>\r\n              <NpmPackagesGrid\r\n                npmPackages={pluginsResponse?.data}\r\n                status={pluginsStatus}\r\n                installedPackageNames={installedPackageNames}\r\n                useYarn={useYarn}\r\n                isInDevelopmentMode={isInDevelopmentMode}\r\n                npmPackageType=\"plugin\"\r\n                strapiAppVersion={strapiVersion}\r\n                debouncedSearch={debouncedSearch}\r\n              />\r\n            </Tabs.Content>\r\n            <Tabs.Content value={PROVIDER}>\r\n              <NpmPackagesGrid\r\n                npmPackages={providersResponse?.data}\r\n                status={providersStatus}\r\n                installedPackageNames={installedPackageNames}\r\n                useYarn={useYarn}\r\n                isInDevelopmentMode={isInDevelopmentMode}\r\n                npmPackageType=\"provider\"\r\n                debouncedSearch={debouncedSearch}\r\n              />\r\n            </Tabs.Content>\r\n            <Pagination.Root {...pagination} defaultPageSize={24}>\r\n              <Pagination.PageSize options={['12', '24', '50', '100']} />\r\n              <Pagination.Links />\r\n            </Pagination.Root>\r\n            <Box paddingTop={8}>\r\n              <a\r\n                href=\"https://strapi.canny.io/plugin-requests\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer nofollow\"\r\n                style={{ textDecoration: 'none' }}\r\n                onClick={() => trackUsage('didMissMarketplacePlugin')}\r\n              >\r\n                <ContentBox\r\n                  title={formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.title',\r\n                    defaultMessage: 'Documentation',\r\n                  })}\r\n                  subtitle={formatMessage({\r\n                    id: 'admin.pages.MarketPlacePage.missingPlugin.description',\r\n                    defaultMessage:\r\n                      \"Tell us what plugin you are looking for and we'll let our community plugin developers know in case they are in search for inspiration!\",\r\n                  })}\r\n                  icon={<GlassesSquare />}\r\n                  iconBackground=\"alternative100\"\r\n                  endAction={\r\n                    <ExternalLink\r\n                      fill=\"neutral600\"\r\n                      width=\"1.2rem\"\r\n                      height=\"1.2rem\"\r\n                      style={{ marginLeft: '0.8rem' }}\r\n                    />\r\n                  }\r\n                />\r\n              </a>\r\n            </Box>\r\n          </Tabs.Root>\r\n        </Layouts.Content>\r\n      </Page.Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nconst ProtectedMarketplacePage = () => {\r\n  const permissions = useTypedSelector((state) => state.admin_app.permissions.marketplace?.main);\r\n\r\n  return (\r\n    <Page.Protect permissions={permissions}>\r\n      <MarketplacePage />\r\n    </Page.Protect>\r\n  );\r\n};\r\n\r\nexport { MarketplacePage, ProtectedMarketplacePage };\r\nexport type { NpmPackageType, MarketplacePageQuery, TabQuery };\r\n"],"names":[],"mappings":"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"}