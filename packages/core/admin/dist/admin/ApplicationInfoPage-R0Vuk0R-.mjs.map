{"version":3,"file":"ApplicationInfoPage-R0Vuk0R-.mjs","sources":["../../admin/src/pages/Settings/pages/ApplicationInfo/utils/constants.ts","../../admin/src/pages/Settings/pages/ApplicationInfo/utils/files.ts","../../admin/src/pages/Settings/pages/ApplicationInfo/components/LogoInput.tsx","../../admin/src/pages/Settings/pages/ApplicationInfo/ApplicationInfoPage.tsx"],"sourcesContent":["export const DIMENSION = 750;\r\nexport const SIZE = 100;\r\nexport const ACCEPTED_FORMAT = ['image/jpeg', 'image/png', 'image/svg+xml'];\r\n","import { ACCEPTED_FORMAT, DIMENSION, SIZE } from './constants';\r\n\r\nimport type { MessageDescriptor } from 'react-intl';\r\n\r\nconst FILE_FORMAT_ERROR_MESSAGE = {\r\n  id: 'Settings.application.customization.modal.upload.error-format',\r\n  defaultMessage: 'Wrong format uploaded (accepted formats only: jpeg, jpg, png, svg).',\r\n};\r\n\r\nconst FILE_SIZING_ERROR_MESSAGE = {\r\n  id: 'Settings.application.customization.modal.upload.error-size',\r\n  defaultMessage:\r\n    'The file uploaded is too large (max dimension: {dimension}x{dimension}, max file size: {size}KB)',\r\n};\r\n\r\ninterface ImageDimensions {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\ninterface ImageAsset extends ImageDimensions {\r\n  ext: string | undefined;\r\n  size: number;\r\n  name: string;\r\n  url: string;\r\n  rawFile: File;\r\n}\r\n\r\nconst parseFileMetadatas = async (file: File): Promise<ImageAsset> => {\r\n  const isFormatAuthorized = ACCEPTED_FORMAT.includes(file.type);\r\n\r\n  if (!isFormatAuthorized) {\r\n    throw new ParsingFileError('File format', FILE_FORMAT_ERROR_MESSAGE);\r\n  }\r\n\r\n  const fileDimensions = await new Promise<ImageDimensions>((resolve) => {\r\n    const reader = new FileReader();\r\n    reader.onload = () => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        resolve({ width: img.width, height: img.height });\r\n      };\r\n      img.src = reader.result as string;\r\n    };\r\n    reader.readAsDataURL(file);\r\n  });\r\n\r\n  const areDimensionsAuthorized =\r\n    fileDimensions.width <= DIMENSION && fileDimensions.height <= DIMENSION;\r\n\r\n  if (!areDimensionsAuthorized) {\r\n    throw new ParsingFileError('File sizing', FILE_SIZING_ERROR_MESSAGE);\r\n  }\r\n\r\n  const asset = {\r\n    ext: file.name.split('.').pop(),\r\n    size: file.size / 1000,\r\n    name: file.name,\r\n    url: URL.createObjectURL(file),\r\n    rawFile: file,\r\n    width: fileDimensions.width,\r\n    height: fileDimensions.height,\r\n  };\r\n\r\n  const isSizeAuthorized = asset.size <= SIZE;\r\n\r\n  if (!isSizeAuthorized) {\r\n    throw new ParsingFileError('File sizing', FILE_SIZING_ERROR_MESSAGE);\r\n  }\r\n\r\n  return asset;\r\n};\r\n\r\nclass ParsingFileError extends Error {\r\n  displayMessage: MessageDescriptor;\r\n\r\n  constructor(message: string, displayMessage: MessageDescriptor, options?: ErrorOptions) {\r\n    super(message, options);\r\n    this.displayMessage = displayMessage;\r\n  }\r\n}\r\n\r\nexport { parseFileMetadatas, ParsingFileError };\r\nexport type { ImageAsset };\r\n","import * as React from 'react';\r\n\r\nimport { createContext } from '@radix-ui/react-context';\r\nimport {\r\n  Box,\r\n  Button,\r\n  ButtonProps,\r\n  Card,\r\n  CardAsset,\r\n  CardBadge,\r\n  CardBody,\r\n  CardContent,\r\n  CardHeader,\r\n  CardSubtitle,\r\n  CardTitle,\r\n  CarouselActions,\r\n  CarouselInput,\r\n  CarouselInputProps,\r\n  CarouselSlide,\r\n  Field,\r\n  Flex,\r\n  IconButton,\r\n  Modal,\r\n  Tabs,\r\n  TextInput,\r\n  TextInputProps,\r\n  Typography,\r\n} from '@strapi/design-system';\r\nimport { PlusCircle, Plus, ArrowClockwise } from '@strapi/icons';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { useIntl } from 'react-intl';\r\nimport { styled } from 'styled-components';\r\n\r\nimport { ConfigurationContextValue } from '../../../../../features/Configuration';\r\nimport { ACCEPTED_FORMAT, DIMENSION, SIZE } from '../utils/constants';\r\nimport { ImageAsset, ParsingFileError, parseFileMetadatas } from '../utils/files';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * LogoInputContext\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface LogoInputContextValue {\r\n  localImage: ImageAsset | undefined;\r\n  goToStep: (step: Step) => void;\r\n  onClose: () => void;\r\n  setLocalImage: (asset: ImageAsset | undefined) => void;\r\n}\r\n\r\nconst [LogoInputContextProvider, useLogoInputContext] =\r\n  createContext<LogoInputContextValue>('LogoInput');\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * LogoInput\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface LogoInputProps\r\n  extends Pick<PendingLogoDialogProps, 'onChangeLogo'>,\r\n    Pick<CarouselInputProps, 'label' | 'hint'> {\r\n  canUpdate: boolean;\r\n  customLogo?: ConfigurationContextValue['logos']['auth']['custom'];\r\n  defaultLogo: string;\r\n}\r\n\r\ntype Step = 'pending' | 'upload' | undefined;\r\n\r\nconst LogoInput = ({\r\n  canUpdate,\r\n  customLogo,\r\n  defaultLogo,\r\n  hint,\r\n  label,\r\n  onChangeLogo,\r\n}: LogoInputProps) => {\r\n  const [localImage, setLocalImage] = React.useState<ImageAsset | undefined>();\r\n  const [currentStep, setCurrentStep] = React.useState<Step>();\r\n  const { formatMessage } = useIntl();\r\n\r\n  const handleClose = () => {\r\n    setLocalImage(undefined);\r\n    setCurrentStep(undefined);\r\n  };\r\n\r\n  return (\r\n    <Modal.Root\r\n      open={!!currentStep}\r\n      onOpenChange={(state) => {\r\n        if (state === false) {\r\n          handleClose();\r\n        }\r\n      }}\r\n    >\r\n      <LogoInputContextProvider\r\n        setLocalImage={setLocalImage}\r\n        localImage={localImage}\r\n        goToStep={setCurrentStep}\r\n        onClose={handleClose}\r\n      >\r\n        <CarouselInput\r\n          label={label}\r\n          selectedSlide={0}\r\n          hint={hint}\r\n          // Carousel is used here for a single media,\r\n          // we don't need previous and next labels but these props are required\r\n          previousLabel=\"\"\r\n          nextLabel=\"\"\r\n          onNext={() => {}}\r\n          onPrevious={() => {}}\r\n          secondaryLabel={customLogo?.name || 'logo.png'}\r\n          actions={\r\n            <CarouselActions>\r\n              <Modal.Trigger>\r\n                <IconButton\r\n                  disabled={!canUpdate}\r\n                  onClick={() => setCurrentStep('upload')}\r\n                  label={formatMessage({\r\n                    id: 'Settings.application.customization.carousel.change-action',\r\n                    defaultMessage: 'Change logo',\r\n                  })}\r\n                >\r\n                  <Plus />\r\n                </IconButton>\r\n              </Modal.Trigger>\r\n              {customLogo?.url && (\r\n                <IconButton\r\n                  disabled={!canUpdate}\r\n                  onClick={() => onChangeLogo(null)}\r\n                  label={formatMessage({\r\n                    id: 'Settings.application.customization.carousel.reset-action',\r\n                    defaultMessage: 'Reset logo',\r\n                  })}\r\n                >\r\n                  <ArrowClockwise />\r\n                </IconButton>\r\n              )}\r\n            </CarouselActions>\r\n          }\r\n        >\r\n          <CarouselSlide\r\n            label={formatMessage({\r\n              id: 'Settings.application.customization.carousel-slide.label',\r\n              defaultMessage: 'Logo slide',\r\n            })}\r\n          >\r\n            <Box\r\n              maxHeight=\"40%\"\r\n              maxWidth=\"40%\"\r\n              tag=\"img\"\r\n              src={customLogo?.url || defaultLogo}\r\n              alt={formatMessage({\r\n                id: 'Settings.application.customization.carousel.title',\r\n                defaultMessage: 'Logo',\r\n              })}\r\n            />\r\n          </CarouselSlide>\r\n        </CarouselInput>\r\n        <Modal.Content>\r\n          <Modal.Header>\r\n            <Modal.Title>\r\n              {formatMessage(\r\n                currentStep === 'upload'\r\n                  ? {\r\n                      id: 'Settings.application.customization.modal.upload',\r\n                      defaultMessage: 'Upload logo',\r\n                    }\r\n                  : {\r\n                      id: 'Settings.application.customization.modal.pending',\r\n                      defaultMessage: 'Pending logo',\r\n                    }\r\n              )}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          {currentStep === 'upload' ? (\r\n            <AddLogoDialog />\r\n          ) : (\r\n            <PendingLogoDialog onChangeLogo={onChangeLogo} />\r\n          )}\r\n        </Modal.Content>\r\n      </LogoInputContextProvider>\r\n    </Modal.Root>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * AddLogoDialog\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst AddLogoDialog = () => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Tabs.Root variant=\"simple\" defaultValue=\"computer\">\r\n      <Box paddingLeft={8} paddingRight={8}>\r\n        <Tabs.List\r\n          aria-label={formatMessage({\r\n            id: 'Settings.application.customization.modal.tab.label',\r\n            defaultMessage: 'How do you want to upload your assets?',\r\n          })}\r\n        >\r\n          <Tabs.Trigger value=\"computer\">\r\n            {formatMessage({\r\n              id: 'Settings.application.customization.modal.upload.from-computer',\r\n              defaultMessage: 'From computer',\r\n            })}\r\n          </Tabs.Trigger>\r\n          <Tabs.Trigger value=\"url\">\r\n            {formatMessage({\r\n              id: 'Settings.application.customization.modal.upload.from-url',\r\n              defaultMessage: 'From url',\r\n            })}\r\n          </Tabs.Trigger>\r\n        </Tabs.List>\r\n      </Box>\r\n      <Tabs.Content value=\"computer\">\r\n        <ComputerForm />\r\n      </Tabs.Content>\r\n      <Tabs.Content value=\"url\">\r\n        <URLForm />\r\n      </Tabs.Content>\r\n    </Tabs.Root>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * URLForm\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst URLForm = () => {\r\n  const { formatMessage } = useIntl();\r\n  const [logoUrl, setLogoUrl] = React.useState('');\r\n  const [error, setError] = React.useState<string>();\r\n  const { setLocalImage, goToStep, onClose } = useLogoInputContext('URLForm');\r\n\r\n  const handleChange: TextInputProps['onChange'] = (e) => {\r\n    setLogoUrl(e.target.value);\r\n  };\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = new FormData(event.target as HTMLFormElement);\r\n\r\n    const url = data.get('logo-url');\r\n\r\n    if (!url) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.get(url.toString(), { responseType: 'blob', timeout: 8000 });\r\n\r\n      const file = new File([res.data], res.config.url ?? '', {\r\n        type: res.headers['content-type'],\r\n      });\r\n\r\n      const asset = await parseFileMetadatas(file);\r\n\r\n      setLocalImage(asset);\r\n      goToStep('pending');\r\n    } catch (err) {\r\n      if (err instanceof AxiosError) {\r\n        setError(\r\n          formatMessage({\r\n            id: 'Settings.application.customization.modal.upload.error-network',\r\n            defaultMessage: 'Network error',\r\n          })\r\n        );\r\n      } else if (err instanceof ParsingFileError) {\r\n        setError(formatMessage(err.displayMessage, { size: SIZE, dimension: DIMENSION }));\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <Box paddingLeft={8} paddingRight={8} paddingTop={6} paddingBottom={6}>\r\n        <Field.Root error={error} name=\"logo-url\">\r\n          <Field.Label>\r\n            {formatMessage({\r\n              id: 'Settings.application.customization.modal.upload.from-url.input-label',\r\n              defaultMessage: 'URL',\r\n            })}\r\n          </Field.Label>\r\n          <TextInput onChange={handleChange} value={logoUrl} />\r\n          <Field.Error />\r\n        </Field.Root>\r\n      </Box>\r\n      <Modal.Footer>\r\n        <Button onClick={onClose} variant=\"tertiary\">\r\n          {formatMessage({ id: 'app.components.Button.cancel', defaultMessage: 'Cancel' })}\r\n        </Button>\r\n        <Button type=\"submit\">\r\n          {formatMessage({\r\n            id: 'Settings.application.customization.modal.upload.next',\r\n            defaultMessage: 'Next',\r\n          })}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </form>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ComputerForm\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst ComputerForm = () => {\r\n  const { formatMessage } = useIntl();\r\n  const [dragOver, setDragOver] = React.useState(false);\r\n  const [fileError, setFileError] = React.useState<string>();\r\n  const inputRef = React.useRef<HTMLInputElement>(null!);\r\n  const id = React.useId();\r\n\r\n  const { setLocalImage, goToStep, onClose } = useLogoInputContext('ComputerForm');\r\n\r\n  const handleDragEnter = () => {\r\n    setDragOver(true);\r\n  };\r\n  const handleDragLeave = () => {\r\n    setDragOver(false);\r\n  };\r\n\r\n  const handleClick: ButtonProps['onClick'] = (e) => {\r\n    e.preventDefault();\r\n    inputRef.current.click();\r\n  };\r\n\r\n  const handleChange = async () => {\r\n    handleDragLeave();\r\n\r\n    if (!inputRef.current.files) {\r\n      return;\r\n    }\r\n\r\n    const [file] = inputRef.current.files;\r\n\r\n    try {\r\n      const asset = await parseFileMetadatas(file);\r\n      setLocalImage(asset);\r\n      goToStep('pending');\r\n    } catch (err) {\r\n      if (err instanceof ParsingFileError) {\r\n        setFileError(formatMessage(err.displayMessage, { size: SIZE, dimension: DIMENSION }));\r\n        inputRef.current.focus();\r\n      } else {\r\n        throw err;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <Box paddingLeft={8} paddingRight={8} paddingTop={6} paddingBottom={6}>\r\n          <Field.Root name={id} error={fileError}>\r\n            <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\r\n              <Flex\r\n                paddingTop={9}\r\n                paddingBottom={7}\r\n                hasRadius\r\n                justifyContent=\"center\"\r\n                direction=\"column\"\r\n                background={dragOver ? 'primary100' : 'neutral100'}\r\n                borderColor={dragOver ? 'primary500' : fileError ? 'danger600' : 'neutral300'}\r\n                borderStyle=\"dashed\"\r\n                borderWidth=\"1px\"\r\n                position=\"relative\"\r\n                onDragEnter={handleDragEnter}\r\n                onDragLeave={handleDragLeave}\r\n              >\r\n                <PlusCircle fill=\"primary600\" width=\"6rem\" height=\"6rem\" aria-hidden />\r\n                <Box paddingTop={3} paddingBottom={5}>\r\n                  <Typography variant=\"delta\" tag=\"label\" htmlFor={id}>\r\n                    {formatMessage({\r\n                      id: 'Settings.application.customization.modal.upload.drag-drop',\r\n                      defaultMessage: 'Drag and Drop here or',\r\n                    })}\r\n                  </Typography>\r\n                </Box>\r\n                <Box position=\"relative\">\r\n                  <FileInput\r\n                    accept={ACCEPTED_FORMAT.join(', ')}\r\n                    type=\"file\"\r\n                    name=\"files\"\r\n                    tabIndex={-1}\r\n                    onChange={handleChange}\r\n                    ref={inputRef}\r\n                    id={id}\r\n                  />\r\n                </Box>\r\n                <Button type=\"button\" onClick={handleClick}>\r\n                  {formatMessage({\r\n                    id: 'Settings.application.customization.modal.upload.cta.browse',\r\n                    defaultMessage: 'Browse files',\r\n                  })}\r\n                </Button>\r\n                <Box paddingTop={6}>\r\n                  <Typography variant=\"pi\" textColor=\"neutral600\">\r\n                    {formatMessage(\r\n                      {\r\n                        id: 'Settings.application.customization.modal.upload.file-validation',\r\n                        defaultMessage:\r\n                          'Max dimension: {dimension}x{dimension}, Max size: {size}KB',\r\n                      },\r\n                      { size: SIZE, dimension: DIMENSION }\r\n                    )}\r\n                  </Typography>\r\n                </Box>\r\n              </Flex>\r\n              <Field.Error />\r\n            </Flex>\r\n          </Field.Root>\r\n        </Box>\r\n      </form>\r\n      <Modal.Footer>\r\n        <Button onClick={onClose} variant=\"tertiary\">\r\n          {formatMessage({ id: 'app.components.Button.cancel', defaultMessage: 'Cancel' })}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst FileInput = styled(Field.Input)`\r\n  opacity: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 1;\r\n`;\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * PendingLogoDialog\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface PendingLogoDialogProps {\r\n  onChangeLogo: (file: ImageAsset | null) => void;\r\n}\r\n\r\nconst PendingLogoDialog = ({ onChangeLogo }: PendingLogoDialogProps) => {\r\n  const { formatMessage } = useIntl();\r\n  const { localImage, setLocalImage, goToStep, onClose } = useLogoInputContext('PendingLogoDialog');\r\n\r\n  const handleGoBack = () => {\r\n    setLocalImage(undefined);\r\n    goToStep('upload');\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (localImage) {\r\n      onChangeLogo(localImage);\r\n    }\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal.Body>\r\n        <Box paddingLeft={8} paddingRight={8} paddingTop={6} paddingBottom={6}>\r\n          <Flex justifyContent=\"space-between\" paddingBottom={6}>\r\n            <Flex direction=\"column\" alignItems=\"flex-start\">\r\n              <Typography variant=\"pi\" fontWeight=\"bold\">\r\n                {formatMessage({\r\n                  id: 'Settings.application.customization.modal.pending.title',\r\n                  defaultMessage: 'Logo ready to upload',\r\n                })}\r\n              </Typography>\r\n              <Typography variant=\"pi\" textColor=\"neutral500\">\r\n                {formatMessage({\r\n                  id: 'Settings.application.customization.modal.pending.subtitle',\r\n                  defaultMessage: 'Manage the chosen logo before uploading it',\r\n                })}\r\n              </Typography>\r\n            </Flex>\r\n            <Button onClick={handleGoBack} variant=\"secondary\">\r\n              {formatMessage({\r\n                id: 'Settings.application.customization.modal.pending.choose-another',\r\n                defaultMessage: 'Choose another logo',\r\n              })}\r\n            </Button>\r\n          </Flex>\r\n          <Box maxWidth={`18rem`}>\r\n            {localImage?.url ? <ImageCardAsset asset={localImage} /> : null}\r\n          </Box>\r\n        </Box>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Modal.Close>\r\n          <Button onClick={onClose} variant=\"tertiary\">\r\n            {formatMessage({\r\n              id: 'Settings.application.customization.modal.cancel',\r\n              defaultMessage: 'Cancel',\r\n            })}\r\n          </Button>\r\n        </Modal.Close>\r\n        <Button onClick={handleUpload}>\r\n          {formatMessage({\r\n            id: 'Settings.application.customization.modal.pending.upload',\r\n            defaultMessage: 'Upload logo',\r\n          })}\r\n        </Button>\r\n      </Modal.Footer>\r\n    </>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ImageCardAsset\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface ImageCardAssetProps {\r\n  asset: ImageAsset;\r\n}\r\n\r\nconst ImageCardAsset = ({ asset }: ImageCardAssetProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardAsset size=\"S\" src={asset.url} />\r\n      </CardHeader>\r\n      <CardBody>\r\n        <CardContent>\r\n          <CardTitle>{asset.name}</CardTitle>\r\n          <CardSubtitle>\r\n            {`${asset.ext?.toUpperCase()} - ${asset.width}✕${asset.height}`}\r\n          </CardSubtitle>\r\n        </CardContent>\r\n        <CardBadge>\r\n          {formatMessage({\r\n            id: 'Settings.application.customization.modal.pending.card-badge',\r\n            defaultMessage: 'image',\r\n          })}\r\n        </CardBadge>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { LogoInput };\r\nexport type { LogoInputProps };\r\n","import * as React from 'react';\r\n\r\nimport { Box, Button, Flex, Grid, Link, Typography } from '@strapi/design-system';\r\nimport { Check, ExternalLink } from '@strapi/icons';\r\nimport { useIntl } from 'react-intl';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Layouts } from '../../../../components/Layouts/Layout';\r\nimport { Page } from '../../../../components/PageHelpers';\r\nimport { useAppInfo } from '../../../../features/AppInfo';\r\nimport { useConfiguration } from '../../../../features/Configuration';\r\nimport { useTracking } from '../../../../features/Tracking';\r\nimport { useEnterprise } from '../../../../hooks/useEnterprise';\r\nimport { useRBAC } from '../../../../hooks/useRBAC';\r\nimport { selectAdminPermissions } from '../../../../selectors';\r\n\r\nimport { LogoInput, LogoInputProps } from './components/LogoInput';\r\nimport { DIMENSION, SIZE } from './utils/constants';\r\n\r\nconst AdminSeatInfoCE = () => null;\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ApplicationInfoPage\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst ApplicationInfoPage = () => {\r\n  const { trackUsage } = useTracking();\r\n  const { formatMessage } = useIntl();\r\n  const { logos: serverLogos, updateProjectSettings } = useConfiguration('ApplicationInfoPage');\r\n  const [logos, setLogos] = React.useState({ menu: serverLogos.menu, auth: serverLogos.auth });\r\n  const { settings } = useSelector(selectAdminPermissions);\r\n\r\n  const communityEdition = useAppInfo('ApplicationInfoPage', (state) => state.communityEdition);\r\n  const latestStrapiReleaseTag = useAppInfo(\r\n    'ApplicationInfoPage',\r\n    (state) => state.latestStrapiReleaseTag\r\n  );\r\n  const nodeVersion = useAppInfo('ApplicationInfoPage', (state) => state.nodeVersion);\r\n  const shouldUpdateStrapi = useAppInfo('ApplicationInfoPage', (state) => state.shouldUpdateStrapi);\r\n  const strapiVersion = useAppInfo('ApplicationInfoPage', (state) => state.strapiVersion);\r\n\r\n  const AdminSeatInfo = useEnterprise(\r\n    AdminSeatInfoCE,\r\n    async () =>\r\n      (\r\n        await import(\r\n          '../../../../../../ee/admin/src/pages/SettingsPage/pages/ApplicationInfoPage/components/AdminSeatInfo'\r\n        )\r\n      ).AdminSeatInfoEE\r\n  );\r\n\r\n  const {\r\n    allowedActions: { canRead, canUpdate },\r\n  } = useRBAC(settings ? settings['project-settings'] : {});\r\n\r\n  const handleSubmit: React.FormEventHandler<HTMLFormElement> = (e) => {\r\n    e.preventDefault();\r\n\r\n    updateProjectSettings({\r\n      authLogo: logos.auth.custom ?? null,\r\n      menuLogo: logos.menu.custom ?? null,\r\n    });\r\n  };\r\n\r\n  const handleChangeLogo =\r\n    (logo: 'menu' | 'auth'): LogoInputProps['onChangeLogo'] =>\r\n    (newLogo) => {\r\n      /**\r\n       * If there's no newLogo value we can assume we're reseting.\r\n       */\r\n      if (newLogo === null) {\r\n        trackUsage('didClickResetLogo', {\r\n          logo,\r\n        });\r\n      }\r\n\r\n      setLogos((prev) => ({\r\n        ...prev,\r\n        [logo]: {\r\n          ...prev[logo],\r\n          custom: newLogo,\r\n        },\r\n      }));\r\n    };\r\n\r\n  React.useEffect(() => {\r\n    setLogos({\r\n      menu: serverLogos.menu,\r\n      auth: serverLogos.auth,\r\n    });\r\n  }, [serverLogos]);\r\n\r\n  // block rendering until the EE component is fully loaded\r\n  if (!AdminSeatInfo) {\r\n    return null;\r\n  }\r\n\r\n  const isSaveDisabled =\r\n    logos.auth.custom === serverLogos.auth.custom && logos.menu.custom === serverLogos.menu.custom;\r\n\r\n  return (\r\n    <Layouts.Root>\r\n      <Page.Title>\r\n        {formatMessage(\r\n          { id: 'Settings.PageTitle', defaultMessage: 'Settings - {name}' },\r\n          {\r\n            name: formatMessage({\r\n              id: 'Settings.application.header',\r\n              defaultMessage: 'Application',\r\n            }),\r\n          }\r\n        )}\r\n      </Page.Title>\r\n      <Page.Main>\r\n        <form onSubmit={handleSubmit}>\r\n          <Layouts.Header\r\n            title={formatMessage({\r\n              id: 'Settings.application.title',\r\n              defaultMessage: 'Overview',\r\n            })}\r\n            subtitle={formatMessage({\r\n              id: 'Settings.application.description',\r\n              defaultMessage: 'Administration panel’s global information',\r\n            })}\r\n            primaryAction={\r\n              canUpdate && (\r\n                <Button disabled={isSaveDisabled} type=\"submit\" startIcon={<Check />}>\r\n                  {formatMessage({ id: 'global.save', defaultMessage: 'Save' })}\r\n                </Button>\r\n              )\r\n            }\r\n          />\r\n          <Layouts.Content>\r\n            <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\r\n              <Flex\r\n                direction=\"column\"\r\n                alignItems=\"stretch\"\r\n                gap={4}\r\n                hasRadius\r\n                background=\"neutral0\"\r\n                shadow=\"tableShadow\"\r\n                paddingTop={6}\r\n                paddingBottom={6}\r\n                paddingRight={7}\r\n                paddingLeft={7}\r\n              >\r\n                <Typography variant=\"delta\" tag=\"h3\">\r\n                  {formatMessage({\r\n                    id: 'global.details',\r\n                    defaultMessage: 'Details',\r\n                  })}\r\n                </Typography>\r\n\r\n                <Grid.Root gap={5} tag=\"dl\">\r\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\r\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\r\n                      {formatMessage({\r\n                        id: 'Settings.application.strapiVersion',\r\n                        defaultMessage: 'strapi version',\r\n                      })}\r\n                    </Typography>\r\n                    <Flex gap={3} direction=\"column\" alignItems=\"start\" tag=\"dd\">\r\n                      <Typography>v{strapiVersion}</Typography>\r\n                      {shouldUpdateStrapi && (\r\n                        <Link\r\n                          href={`https://github.com/strapi/strapi/releases/tag/${latestStrapiReleaseTag}`}\r\n                          endIcon={<ExternalLink />}\r\n                        >\r\n                          {formatMessage({\r\n                            id: 'Settings.application.link-upgrade',\r\n                            defaultMessage: 'Upgrade your admin panel',\r\n                          })}\r\n                        </Link>\r\n                      )}\r\n                    </Flex>\r\n                  </Grid.Item>\r\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\r\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\r\n                      {formatMessage({\r\n                        id: 'Settings.application.edition-title',\r\n                        defaultMessage: 'current plan',\r\n                      })}\r\n                    </Typography>\r\n                    <Flex gap={3} direction=\"column\" alignItems=\"start\" tag=\"dd\">\r\n                      <Typography>\r\n                        {formatMessage(\r\n                          {\r\n                            id: 'Settings.application.ee-or-ce',\r\n                            defaultMessage:\r\n                              '{communityEdition, select, true {Community Edition} other {Enterprise Edition}}',\r\n                          },\r\n                          { communityEdition }\r\n                        )}\r\n                      </Typography>\r\n                      <Link href=\"https://strapi.io/pricing-self-hosted\" endIcon={<ExternalLink />}>\r\n                        {formatMessage({\r\n                          id: 'Settings.application.link-pricing',\r\n                          defaultMessage: 'See all pricing plans',\r\n                        })}\r\n                      </Link>\r\n                    </Flex>\r\n                  </Grid.Item>\r\n\r\n                  <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"start\">\r\n                    <Typography variant=\"sigma\" textColor=\"neutral600\" tag=\"dt\">\r\n                      {formatMessage({\r\n                        id: 'Settings.application.node-version',\r\n                        defaultMessage: 'node version',\r\n                      })}\r\n                    </Typography>\r\n                    <Typography tag=\"dd\">{nodeVersion}</Typography>\r\n                  </Grid.Item>\r\n                  <AdminSeatInfo />\r\n                </Grid.Root>\r\n              </Flex>\r\n              {canRead && (\r\n                <Box\r\n                  hasRadius\r\n                  background=\"neutral0\"\r\n                  shadow=\"tableShadow\"\r\n                  paddingTop={6}\r\n                  paddingBottom={6}\r\n                  paddingRight={7}\r\n                  paddingLeft={7}\r\n                >\r\n                  <Typography variant=\"delta\" tag=\"h3\">\r\n                    {formatMessage({\r\n                      id: 'Settings.application.customization',\r\n                      defaultMessage: 'Customization',\r\n                    })}\r\n                  </Typography>\r\n                  <Typography variant=\"pi\" textColor=\"neutral600\">\r\n                    {formatMessage(\r\n                      {\r\n                        id: 'Settings.application.customization.size-details',\r\n                        defaultMessage:\r\n                          'Max dimension: {dimension}×{dimension}, Max file size: {size}KB',\r\n                      },\r\n                      { dimension: DIMENSION, size: SIZE }\r\n                    )}\r\n                  </Typography>\r\n                  <Grid.Root paddingTop={4} gap={4}>\r\n                    <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"stretch\">\r\n                      <LogoInput\r\n                        canUpdate={canUpdate}\r\n                        customLogo={logos.menu.custom}\r\n                        defaultLogo={logos.menu.default}\r\n                        hint={formatMessage({\r\n                          id: 'Settings.application.customization.menu-logo.carousel-hint',\r\n                          defaultMessage: 'Replace the logo in the main navigation',\r\n                        })}\r\n                        label={formatMessage({\r\n                          id: 'Settings.application.customization.carousel.menu-logo.title',\r\n                          defaultMessage: 'Menu logo',\r\n                        })}\r\n                        onChangeLogo={handleChangeLogo('menu')}\r\n                      />\r\n                    </Grid.Item>\r\n                    <Grid.Item col={6} s={12} direction=\"column\" alignItems=\"stretch\">\r\n                      <LogoInput\r\n                        canUpdate={canUpdate}\r\n                        customLogo={logos.auth.custom}\r\n                        defaultLogo={logos.auth.default}\r\n                        hint={formatMessage({\r\n                          id: 'Settings.application.customization.auth-logo.carousel-hint',\r\n                          defaultMessage: 'Replace the logo in the authentication pages',\r\n                        })}\r\n                        label={formatMessage({\r\n                          id: 'Settings.application.customization.carousel.auth-logo.title',\r\n                          defaultMessage: 'Auth logo',\r\n                        })}\r\n                        onChangeLogo={handleChangeLogo('auth')}\r\n                      />\r\n                    </Grid.Item>\r\n                  </Grid.Root>\r\n                </Box>\r\n              )}\r\n            </Flex>\r\n          </Layouts.Content>\r\n        </form>\r\n      </Page.Main>\r\n    </Layouts.Root>\r\n  );\r\n};\r\n\r\nexport { ApplicationInfoPage };\r\n"],"names":[],"mappings":"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"}