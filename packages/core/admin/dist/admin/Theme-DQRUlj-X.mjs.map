{"version":3,"file":"Theme-DQRUlj-X.mjs","sources":["../../admin/src/core/apis/rbac.ts","../../admin/src/components/Context.tsx","../../admin/src/core/store/hooks.ts","../../admin/src/features/StrapiApp.tsx","../../admin/src/hooks/useQueryParams.ts","../../admin/src/reducer.ts","../../admin/src/services/auth.ts","../../admin/src/features/Auth.tsx","../../admin/src/features/Notifications.tsx","../../admin/src/utils/getPrefixedId.ts","../../admin/src/utils/normalizeAPIError.ts","../../admin/src/utils/objects.ts","../../admin/src/hooks/useAPIErrorHandler.ts","../../admin/src/components/PageHelpers.tsx","../../admin/src/utils/once.ts","../../admin/src/utils/strings.ts","../../admin/src/hooks/usePrev.ts","../../admin/src/hooks/useRBAC.ts","../../admin/src/features/AppInfo.tsx","../../admin/src/features/Tracking.tsx","../../admin/src/features/Configuration.tsx","../../admin/src/components/GuidedTour/Provider.tsx","../../admin/src/components/LanguageProvider.tsx","../../admin/src/components/Theme.tsx"],"sourcesContent":["import { Location } from 'react-router-dom';\r\n\r\nimport type { Permission, User } from '../../features/Auth';\r\n\r\ninterface RBACContext extends Pick<Location, 'pathname' | 'search'> {\r\n  /**\r\n   * The current user.\r\n   */\r\n  user?: User;\r\n  /**\r\n   * The permissions of the current user.\r\n   */\r\n  permissions: Permission[];\r\n}\r\n\r\ninterface RBACMiddleware {\r\n  (\r\n    ctx: RBACContext\r\n  ): (\r\n    next: (permissions: Permission[]) => Promise<Permission[]> | Permission[]\r\n  ) => (permissions: Permission[]) => Promise<Permission[]> | Permission[];\r\n}\r\n\r\nclass RBAC {\r\n  private middlewares: RBACMiddleware[] = [];\r\n\r\n  constructor() {}\r\n\r\n  use(middleware: RBACMiddleware[]): void;\r\n  use(middleware: RBACMiddleware): void;\r\n  use(middleware: RBACMiddleware | RBACMiddleware[]): void {\r\n    if (Array.isArray(middleware)) {\r\n      this.middlewares.push(...middleware);\r\n    } else {\r\n      this.middlewares.push(middleware);\r\n    }\r\n  }\r\n\r\n  run = async (ctx: RBACContext, permissions: Permission[]): Promise<Permission[]> => {\r\n    let index = 0;\r\n\r\n    const middlewaresToRun = this.middlewares.map((middleware) => middleware(ctx));\r\n\r\n    const next = async (permissions: Permission[]) => {\r\n      if (index < this.middlewares.length) {\r\n        return middlewaresToRun[index++](next)(permissions);\r\n      }\r\n\r\n      return permissions;\r\n    };\r\n\r\n    return next(permissions);\r\n  };\r\n}\r\n\r\nexport { RBAC };\r\nexport type { RBACMiddleware, RBACContext };\r\n","import * as React from 'react';\r\n\r\nimport * as ContextSelector from 'use-context-selector';\r\n\r\n/**\r\n * @experimental\r\n * @description Create a context provider and a hook to consume the context.\r\n *\r\n * @warning this may be removed to the design-system instead of becoming stable.\r\n */\r\nfunction createContext<ContextValueType extends object | null>(\r\n  rootComponentName: string,\r\n  defaultContext?: ContextValueType\r\n) {\r\n  const Context = ContextSelector.createContext<ContextValueType | undefined>(defaultContext);\r\n\r\n  const Provider = (props: ContextValueType & { children: React.ReactNode }) => {\r\n    const { children, ...context } = props;\r\n    // Only re-memoize when prop values change\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    const value = React.useMemo(() => context, Object.values(context)) as ContextValueType;\r\n\r\n    return <Context.Provider value={value}>{children}</Context.Provider>;\r\n  };\r\n\r\n  const useContext = <Selected,>(\r\n    consumerName: string,\r\n    selector: (value: ContextValueType) => Selected\r\n  ): Selected =>\r\n    ContextSelector.useContextSelector(Context, (ctx) => {\r\n      if (ctx) return selector(ctx);\r\n      // it's a required context.\r\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\r\n    });\r\n\r\n  Provider.displayName = rootComponentName + 'Provider';\r\n\r\n  return [Provider, useContext] as const;\r\n}\r\n\r\nexport { createContext };\r\n","import { createSelector, Selector } from '@reduxjs/toolkit';\r\nimport { useDispatch, useStore, TypedUseSelectorHook, useSelector } from 'react-redux';\r\n\r\nimport type { RootState, Store } from './configure';\r\n\r\ntype AppDispatch = Store['dispatch'];\r\n\r\nconst useTypedDispatch: () => AppDispatch = useDispatch;\r\nconst useTypedStore = useStore as () => Store;\r\nconst useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nconst createTypedSelector = <TResult>(selector: Selector<RootState, TResult>) =>\r\n  createSelector((state: RootState) => state, selector);\r\n\r\nexport { useTypedDispatch, useTypedStore, useTypedSelector, createTypedSelector };\r\n","import { createContext } from '../components/Context';\r\nimport { RBAC } from '../core/apis/rbac';\r\nimport { Router } from '../core/apis/router';\r\n\r\nimport type { StrapiApp } from '../StrapiApp';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * StrapiApp\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface StrapiAppContextValue\r\n  extends Pick<\r\n      StrapiApp,\r\n      | 'customFields'\r\n      | 'getPlugin'\r\n      | 'getAdminInjectedComponents'\r\n      | 'plugins'\r\n      | 'runHookParallel'\r\n      | 'runHookSeries'\r\n    >,\r\n    Pick<Router, 'menu' | 'settings'> {\r\n  components: StrapiApp['library']['components'];\r\n  fields: StrapiApp['library']['fields'];\r\n  rbac: RBAC;\r\n  runHookWaterfall: <TData>(\r\n    name: Parameters<StrapiApp['runHookWaterfall']>[0],\r\n    initialValue: TData\r\n  ) => TData;\r\n}\r\n\r\nconst [StrapiAppProvider, useStrapiApp] = createContext<StrapiAppContextValue>('StrapiApp');\r\n\r\nexport { StrapiAppProvider, useStrapiApp };\r\nexport type { StrapiAppContextValue };\r\n","import { useCallback, useMemo } from 'react';\r\n\r\nimport { parse, stringify } from 'qs';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst useQueryParams = <TQuery extends object>(initialParams?: TQuery) => {\r\n  const { search } = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const query = useMemo(() => {\r\n    // TODO: investigate why sometimes we're getting the search with a leading `?` and sometimes not.\r\n    const searchQuery = search.startsWith('?') ? search.slice(1) : search;\r\n    if (!search && initialParams) {\r\n      return initialParams;\r\n    }\r\n\r\n    return { ...initialParams, ...parse(searchQuery) } as TQuery;\r\n  }, [search, initialParams]);\r\n\r\n  const setQuery = useCallback(\r\n    (nextParams: TQuery, method: 'push' | 'remove' = 'push', replace = false) => {\r\n      let nextQuery = { ...query };\r\n\r\n      if (method === 'remove') {\r\n        Object.keys(nextParams).forEach((key) => {\r\n          if (Object.prototype.hasOwnProperty.call(nextQuery, key)) {\r\n            // @ts-expect-error â€“ this is fine, if you want to fix it, please do.\r\n            delete nextQuery[key];\r\n          }\r\n        });\r\n      } else {\r\n        nextQuery = { ...query, ...nextParams };\r\n      }\r\n\r\n      navigate({ search: stringify(nextQuery, { encode: false }) }, { replace });\r\n    },\r\n    [navigate, query]\r\n  );\r\n\r\n  return [{ query, rawQuery: search }, setQuery] as const;\r\n};\r\n\r\nexport { useQueryParams };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { PermissionMap } from './types/permissions';\r\n\r\nimport type { PayloadAction } from '@reduxjs/toolkit';\r\n\r\ntype ThemeName = 'light' | 'dark' | 'system';\r\n\r\ninterface AppState {\r\n  language: {\r\n    locale: string;\r\n    localeNames: Record<string, string>;\r\n  };\r\n  permissions: Partial<PermissionMap>;\r\n  theme: {\r\n    currentTheme: ThemeName;\r\n    availableThemes: string[];\r\n  };\r\n  token?: string | null;\r\n}\r\n\r\nconst STORAGE_KEYS = {\r\n  TOKEN: 'jwtToken',\r\n  USER: 'userInfo',\r\n};\r\n\r\nconst THEME_LOCAL_STORAGE_KEY = 'STRAPI_THEME';\r\nconst LANGUAGE_LOCAL_STORAGE_KEY = 'strapi-admin-language';\r\n\r\nexport const getStoredToken = (): string | null => {\r\n  const token =\r\n    localStorage.getItem(STORAGE_KEYS.TOKEN) ?? sessionStorage.getItem(STORAGE_KEYS.TOKEN);\r\n\r\n  if (typeof token === 'string') {\r\n    return JSON.parse(token);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: () => {\r\n    return {\r\n      language: {\r\n        locale: 'en',\r\n        localeNames: { en: 'English' },\r\n      },\r\n      permissions: {},\r\n      theme: {\r\n        availableThemes: [],\r\n        currentTheme: localStorage.getItem(THEME_LOCAL_STORAGE_KEY) || 'system',\r\n      },\r\n      token: null,\r\n    } as AppState;\r\n  },\r\n  reducers: {\r\n    setAppTheme(state, action: PayloadAction<ThemeName>) {\r\n      state.theme.currentTheme = action.payload;\r\n      window.localStorage.setItem(THEME_LOCAL_STORAGE_KEY, action.payload);\r\n    },\r\n    setAvailableThemes(state, action: PayloadAction<AppState['theme']['availableThemes']>) {\r\n      state.theme.availableThemes = action.payload;\r\n    },\r\n    setLocale(state, action: PayloadAction<string>) {\r\n      state.language.locale = action.payload;\r\n\r\n      window.localStorage.setItem(LANGUAGE_LOCAL_STORAGE_KEY, action.payload);\r\n      document.documentElement.setAttribute('lang', action.payload);\r\n    },\r\n    setToken(state, action: PayloadAction<string | null>) {\r\n      state.token = action.payload;\r\n    },\r\n    login(state, action: PayloadAction<{ token: string; persist?: boolean }>) {\r\n      const { token, persist } = action.payload;\r\n\r\n      if (!persist) {\r\n        window.sessionStorage.setItem(STORAGE_KEYS.TOKEN, JSON.stringify(token));\r\n      } else {\r\n        window.localStorage.setItem(STORAGE_KEYS.TOKEN, JSON.stringify(token));\r\n      }\r\n\r\n      state.token = token;\r\n    },\r\n    logout(state) {\r\n      state.token = null;\r\n      window.localStorage.removeItem(STORAGE_KEYS.TOKEN);\r\n      window.localStorage.removeItem(STORAGE_KEYS.USER);\r\n      window.sessionStorage.removeItem(STORAGE_KEYS.TOKEN);\r\n      window.sessionStorage.removeItem(STORAGE_KEYS.USER);\r\n    },\r\n  },\r\n});\r\n\r\nconst reducer = adminSlice.reducer;\r\n\r\nexport const { setAppTheme, setAvailableThemes, setLocale, setToken, logout, login } =\r\n  adminSlice.actions;\r\n\r\nexport { reducer, THEME_LOCAL_STORAGE_KEY, LANGUAGE_LOCAL_STORAGE_KEY };\r\nexport type { AppState, ThemeName };\r\n","import { ProvidersOptions } from '../../../shared/contracts/admin';\r\nimport {\r\n  type RenewToken,\r\n  type Login,\r\n  type ResetPassword,\r\n  type RegisterAdmin,\r\n  type Register,\r\n  type RegistrationInfo,\r\n  ForgotPassword,\r\n} from '../../../shared/contracts/authentication';\r\nimport { Check } from '../../../shared/contracts/permissions';\r\nimport { GetProviders, IsSSOLocked } from '../../../shared/contracts/providers';\r\nimport { type GetOwnPermissions, type GetMe, type UpdateMe } from '../../../shared/contracts/users';\r\n\r\nimport { adminApi } from './api';\r\n\r\nconst authService = adminApi\r\n  .enhanceEndpoints({\r\n    addTagTypes: ['User', 'Me', 'ProvidersOptions'],\r\n  })\r\n  .injectEndpoints({\r\n    endpoints: (builder) => ({\r\n      /**\r\n       * ME\r\n       */\r\n      getMe: builder.query<GetMe.Response['data'], void>({\r\n        query: () => ({\r\n          method: 'GET',\r\n          url: '/admin/users/me',\r\n        }),\r\n        transformResponse(res: GetMe.Response) {\r\n          return res.data;\r\n        },\r\n        providesTags: (res) => (res ? ['Me', { type: 'User', id: res.id }] : ['Me']),\r\n      }),\r\n      getMyPermissions: builder.query<GetOwnPermissions.Response['data'], void>({\r\n        query: () => ({\r\n          method: 'GET',\r\n          url: '/admin/users/me/permissions',\r\n        }),\r\n        transformResponse(res: GetOwnPermissions.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      updateMe: builder.mutation<UpdateMe.Response['data'], UpdateMe.Request['body']>({\r\n        query: (body) => ({\r\n          method: 'PUT',\r\n          url: '/admin/users/me',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: UpdateMe.Response) {\r\n          return res.data;\r\n        },\r\n        invalidatesTags: ['Me'],\r\n      }),\r\n      /**\r\n       * Permissions\r\n       */\r\n      checkPermissions: builder.query<Check.Response, Check.Request['body']>({\r\n        query: (permissions) => ({\r\n          method: 'POST',\r\n          url: '/admin/permissions/check',\r\n          data: permissions,\r\n        }),\r\n      }),\r\n      /**\r\n       * Auth methods\r\n       */\r\n      login: builder.mutation<Login.Response['data'], Login.Request['body']>({\r\n        query: (body) => ({\r\n          method: 'POST',\r\n          url: '/admin/login',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: Login.Response) {\r\n          return res.data;\r\n        },\r\n        invalidatesTags: ['Me'],\r\n      }),\r\n      logout: builder.mutation<void, void>({\r\n        query: () => ({\r\n          method: 'POST',\r\n          url: '/admin/logout',\r\n        }),\r\n      }),\r\n      resetPassword: builder.mutation<\r\n        ResetPassword.Response['data'],\r\n        ResetPassword.Request['body']\r\n      >({\r\n        query: (body) => ({\r\n          method: 'POST',\r\n          url: '/admin/reset-password',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: ResetPassword.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      renewToken: builder.mutation<RenewToken.Response['data'], RenewToken.Request['body']>({\r\n        query: (body) => ({\r\n          method: 'POST',\r\n          url: '/admin/renew-token',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: RenewToken.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      getRegistrationInfo: builder.query<\r\n        RegistrationInfo.Response['data'],\r\n        RegistrationInfo.Request['query']['registrationToken']\r\n      >({\r\n        query: (registrationToken) => ({\r\n          url: '/admin/registration-info',\r\n          method: 'GET',\r\n          config: {\r\n            params: {\r\n              registrationToken,\r\n            },\r\n          },\r\n        }),\r\n        transformResponse(res: RegistrationInfo.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      registerAdmin: builder.mutation<\r\n        RegisterAdmin.Response['data'],\r\n        RegisterAdmin.Request['body']\r\n      >({\r\n        query: (body) => ({\r\n          method: 'POST',\r\n          url: '/admin/register-admin',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: RegisterAdmin.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      registerUser: builder.mutation<Register.Response['data'], Register.Request['body']>({\r\n        query: (body) => ({\r\n          method: 'POST',\r\n          url: '/admin/register',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: Register.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      forgotPassword: builder.mutation<ForgotPassword.Response, ForgotPassword.Request['body']>({\r\n        query: (body) => ({\r\n          url: '/admin/forgot-password',\r\n          method: 'POST',\r\n          data: body,\r\n        }),\r\n      }),\r\n      isSSOLocked: builder.query<IsSSOLocked.Response['data'], void>({\r\n        query: () => ({\r\n          url: '/admin/providers/isSSOLocked',\r\n          method: 'GET',\r\n        }),\r\n        transformResponse(res: IsSSOLocked.Response) {\r\n          return res.data;\r\n        },\r\n      }),\r\n      getProviders: builder.query<GetProviders.Response, void>({\r\n        query: () => ({\r\n          url: '/admin/providers',\r\n          method: 'GET',\r\n        }),\r\n      }),\r\n      getProviderOptions: builder.query<ProvidersOptions.Response['data'], void>({\r\n        query: () => ({\r\n          url: '/admin/providers/options',\r\n          method: 'GET',\r\n        }),\r\n        transformResponse(res: ProvidersOptions.Response) {\r\n          return res.data;\r\n        },\r\n        providesTags: ['ProvidersOptions'],\r\n      }),\r\n      updateProviderOptions: builder.mutation<\r\n        ProvidersOptions.Response['data'],\r\n        ProvidersOptions.Request['body']\r\n      >({\r\n        query: (body) => ({\r\n          url: '/admin/providers/options',\r\n          method: 'PUT',\r\n          data: body,\r\n        }),\r\n        transformResponse(res: ProvidersOptions.Response) {\r\n          return res.data;\r\n        },\r\n        invalidatesTags: ['ProvidersOptions'],\r\n      }),\r\n    }),\r\n    overrideExisting: false,\r\n  });\r\n\r\nconst {\r\n  useCheckPermissionsQuery,\r\n  useLazyCheckPermissionsQuery,\r\n  useGetMeQuery,\r\n  useLoginMutation,\r\n  useRenewTokenMutation,\r\n  useLogoutMutation,\r\n  useUpdateMeMutation,\r\n  useResetPasswordMutation,\r\n  useRegisterAdminMutation,\r\n  useRegisterUserMutation,\r\n  useGetRegistrationInfoQuery,\r\n  useForgotPasswordMutation,\r\n  useGetMyPermissionsQuery,\r\n  useIsSSOLockedQuery,\r\n  useGetProvidersQuery,\r\n  useGetProviderOptionsQuery,\r\n  useUpdateProviderOptionsMutation,\r\n} = authService;\r\n\r\nexport {\r\n  useCheckPermissionsQuery,\r\n  useLazyCheckPermissionsQuery,\r\n  useGetMeQuery,\r\n  useLoginMutation,\r\n  useRenewTokenMutation,\r\n  useLogoutMutation,\r\n  useUpdateMeMutation,\r\n  useResetPasswordMutation,\r\n  useRegisterAdminMutation,\r\n  useRegisterUserMutation,\r\n  useGetRegistrationInfoQuery,\r\n  useForgotPasswordMutation,\r\n  useGetMyPermissionsQuery,\r\n  useIsSSOLockedQuery,\r\n  useGetProvidersQuery,\r\n  useGetProviderOptionsQuery,\r\n  useUpdateProviderOptionsMutation,\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nimport { Login } from '../../../shared/contracts/authentication';\r\nimport { createContext } from '../components/Context';\r\nimport { useTypedDispatch, useTypedSelector } from '../core/store/hooks';\r\nimport { useStrapiApp } from '../features/StrapiApp';\r\nimport { useQueryParams } from '../hooks/useQueryParams';\r\nimport { login as loginAction, logout as logoutAction, setLocale } from '../reducer';\r\nimport { adminApi } from '../services/api';\r\nimport {\r\n  useGetMeQuery,\r\n  useGetMyPermissionsQuery,\r\n  useLazyCheckPermissionsQuery,\r\n  useLoginMutation,\r\n  useLogoutMutation,\r\n  useRenewTokenMutation,\r\n} from '../services/auth';\r\n\r\nimport type {\r\n  Permission as PermissionContract,\r\n  SanitizedAdminUser,\r\n} from '../../../shared/contracts/shared';\r\n\r\ninterface Permission\r\n  extends Pick<PermissionContract, 'action' | 'subject'>,\r\n    Partial<Omit<PermissionContract, 'action' | 'subject'>> {}\r\n\r\ninterface User\r\n  extends Pick<SanitizedAdminUser, 'email' | 'firstname' | 'lastname' | 'username' | 'roles'>,\r\n    Partial<Omit<SanitizedAdminUser, 'email' | 'firstname' | 'lastname' | 'username' | 'roles'>> {}\r\n\r\ninterface AuthContextValue {\r\n  login: (\r\n    body: Login.Request['body'] & { rememberMe: boolean }\r\n  ) => Promise<Awaited<ReturnType<ReturnType<typeof useLoginMutation>[0]>>>;\r\n  logout: () => Promise<void>;\r\n  /**\r\n   * @alpha\r\n   * @description given a list of permissions, this function checks\r\n   * those against the current user's permissions or those passed as\r\n   * the second argument, if the user has those permissions the complete\r\n   * permission object form the API is returned. Therefore, if the list is\r\n   * empty, the user does not have any of those permissions.\r\n   */\r\n  checkUserHasPermissions: (\r\n    permissions?: Permission[],\r\n    passedPermissions?: Permission[],\r\n    rawQueryContext?: string\r\n  ) => Promise<Permission[]>;\r\n  isLoading: boolean;\r\n  permissions: Permission[];\r\n  refetchPermissions: () => Promise<void>;\r\n  token: string | null;\r\n  user?: User;\r\n}\r\n\r\nconst [Provider, useAuth] = createContext<AuthContextValue>('Auth');\r\n\r\ninterface AuthProviderProps {\r\n  children: React.ReactNode;\r\n  /**\r\n   * @internal could be removed at any time.\r\n   */\r\n  _defaultPermissions?: Permission[];\r\n\r\n  // NOTE: this is used for testing purposed only\r\n  _disableRenewToken?: boolean;\r\n}\r\n\r\nconst STORAGE_KEYS = {\r\n  TOKEN: 'jwtToken',\r\n  USER: 'userInfo',\r\n};\r\n\r\nconst AuthProvider = ({\r\n  children,\r\n  _defaultPermissions = [],\r\n  _disableRenewToken = false,\r\n}: AuthProviderProps) => {\r\n  const dispatch = useTypedDispatch();\r\n  const runRbacMiddleware = useStrapiApp('AuthProvider', (state) => state.rbac.run);\r\n  const location = useLocation();\r\n  const [{ rawQuery }] = useQueryParams();\r\n\r\n  const token = useTypedSelector((state) => state.admin_app.token ?? null);\r\n\r\n  const { data: user, isLoading: isLoadingUser } = useGetMeQuery(undefined, {\r\n    /**\r\n     * If there's no token, we don't try to fetch\r\n     * the user data because it will fail.\r\n     */\r\n    skip: !token,\r\n  });\r\n\r\n  const {\r\n    data: userPermissions = _defaultPermissions,\r\n    refetch,\r\n    isUninitialized,\r\n    isLoading: isLoadingPermissions,\r\n  } = useGetMyPermissionsQuery(undefined, {\r\n    skip: !token,\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [loginMutation] = useLoginMutation();\r\n  const [renewTokenMutation] = useRenewTokenMutation();\r\n  const [logoutMutation] = useLogoutMutation();\r\n\r\n  const clearStateAndLogout = React.useCallback(() => {\r\n    dispatch(adminApi.util.resetApiState());\r\n    dispatch(logoutAction());\r\n    navigate('/auth/login');\r\n  }, [dispatch, navigate]);\r\n\r\n  /**\r\n   * Fetch data from storages on mount and store it in our state.\r\n   * It's not normally stored in session storage unless the user\r\n   * does click \"remember me\" when they login. We also need to renew the token.\r\n   */\r\n  React.useEffect(() => {\r\n    if (token && !_disableRenewToken) {\r\n      renewTokenMutation({ token }).then((res) => {\r\n        if ('data' in res) {\r\n          dispatch(\r\n            loginAction({\r\n              token: res.data.token,\r\n            })\r\n          );\r\n        } else {\r\n          clearStateAndLogout();\r\n        }\r\n      });\r\n    }\r\n  }, [token, dispatch, renewTokenMutation, clearStateAndLogout, _disableRenewToken]);\r\n\r\n  React.useEffect(() => {\r\n    if (user) {\r\n      if (user.preferedLanguage) {\r\n        dispatch(setLocale(user.preferedLanguage));\r\n      }\r\n    }\r\n  }, [dispatch, user]);\r\n\r\n  React.useEffect(() => {\r\n    /**\r\n     * This will log a user out of all tabs if they log out in one tab.\r\n     */\r\n    const handleUserStorageChange = (event: StorageEvent) => {\r\n      if (event.key === STORAGE_KEYS.USER && event.newValue === null) {\r\n        clearStateAndLogout();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('storage', handleUserStorageChange);\r\n\r\n    return () => {\r\n      window.removeEventListener('storage', handleUserStorageChange);\r\n    };\r\n  });\r\n\r\n  const login = React.useCallback<AuthContextValue['login']>(\r\n    async ({ rememberMe, ...body }) => {\r\n      const res = await loginMutation(body);\r\n\r\n      /**\r\n       * There will always be a `data` key in the response\r\n       * because if something fails, it will throw an error.\r\n       */\r\n      if ('data' in res) {\r\n        const { token } = res.data;\r\n\r\n        dispatch(\r\n          loginAction({\r\n            token,\r\n            persist: rememberMe,\r\n          })\r\n        );\r\n      }\r\n\r\n      return res;\r\n    },\r\n    [dispatch, loginMutation]\r\n  );\r\n\r\n  const logout = React.useCallback(async () => {\r\n    await logoutMutation();\r\n    clearStateAndLogout();\r\n  }, [clearStateAndLogout, logoutMutation]);\r\n\r\n  const refetchPermissions = React.useCallback(async () => {\r\n    if (!isUninitialized) {\r\n      await refetch();\r\n    }\r\n  }, [isUninitialized, refetch]);\r\n\r\n  const [checkPermissions] = useLazyCheckPermissionsQuery();\r\n  const checkUserHasPermissions: AuthContextValue['checkUserHasPermissions'] = React.useCallback(\r\n    async (\r\n      permissions,\r\n      passedPermissions,\r\n      // TODO:\r\n      // Here we have parameterised checkUserHasPermissions in order to pass\r\n      // query context from elsewhere in the application.\r\n      // See packages/core/content-manager/admin/src/features/DocumentRBAC.tsx\r\n\r\n      // This is in order to calculate permissions on accurate query params.\r\n      // We should be able to rely on the query params in this provider\r\n      // If we need to pass additional context to the RBAC middleware\r\n      // we should define a better context type.\r\n      rawQueryContext\r\n    ) => {\r\n      /**\r\n       * If there's no permissions to check, then we allow it to\r\n       * pass to preserve existing behaviours.\r\n       *\r\n       * TODO: should we review this? it feels more dangerous than useful.\r\n       */\r\n      if (!permissions || permissions.length === 0) {\r\n        return [{ action: '', subject: '' }];\r\n      }\r\n\r\n      /**\r\n       * Given the provided permissions, return the permissions from either passedPermissions\r\n       * or userPermissions as this is expected to be the full permission entity.\r\n       */\r\n      const actualUserPermissions = passedPermissions ?? userPermissions;\r\n\r\n      const matchingPermissions = actualUserPermissions.filter(\r\n        (permission) =>\r\n          permissions.findIndex(\r\n            (perm) => perm.action === permission.action && perm.subject === permission.subject\r\n          ) >= 0\r\n      );\r\n\r\n      const middlewaredPermissions = await runRbacMiddleware(\r\n        {\r\n          user,\r\n          permissions: userPermissions,\r\n          pathname: location.pathname,\r\n          search: (rawQueryContext || rawQuery).split('?')[1] ?? '',\r\n        },\r\n        matchingPermissions\r\n      );\r\n\r\n      const shouldCheckConditions = middlewaredPermissions.some(\r\n        (perm) => Array.isArray(perm.conditions) && perm.conditions.length > 0\r\n      );\r\n\r\n      if (!shouldCheckConditions) {\r\n        return middlewaredPermissions;\r\n      }\r\n\r\n      const { data, error } = await checkPermissions({\r\n        permissions: middlewaredPermissions.map((perm) => ({\r\n          action: perm.action,\r\n          subject: perm.subject,\r\n        })),\r\n      });\r\n\r\n      if (error) {\r\n        throw error;\r\n      } else {\r\n        return middlewaredPermissions.filter((_, index) => data?.data[index] === true);\r\n      }\r\n    },\r\n    [checkPermissions, location.pathname, rawQuery, runRbacMiddleware, user, userPermissions]\r\n  );\r\n\r\n  const isLoading = isLoadingUser || isLoadingPermissions;\r\n\r\n  return (\r\n    <Provider\r\n      token={token}\r\n      user={user}\r\n      login={login}\r\n      logout={logout}\r\n      permissions={userPermissions}\r\n      checkUserHasPermissions={checkUserHasPermissions}\r\n      refetchPermissions={refetchPermissions}\r\n      isLoading={isLoading}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, useAuth, STORAGE_KEYS };\r\nexport type { AuthContextValue, Permission, User };\r\n","import * as React from 'react';\r\n\r\nimport { Alert, AlertVariant, Flex, useCallbackRef, Link } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\n\r\ninterface NotificationLink {\r\n  label: string;\r\n  target?: string;\r\n  url: string;\r\n}\r\n\r\ninterface NotificationConfig {\r\n  blockTransition?: boolean;\r\n  link?: NotificationLink;\r\n  message?: string;\r\n  onClose?: () => void;\r\n  timeout?: number;\r\n  title?: string;\r\n  type?: 'info' | 'warning' | 'danger' | 'success';\r\n}\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Context\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface NotificationsContextValue {\r\n  /**\r\n   * Toggles a notification, wrapped in `useCallback` for a stable identity.\r\n   */\r\n  toggleNotification: (config: NotificationConfig) => void;\r\n}\r\n\r\nconst NotificationsContext = React.createContext<NotificationsContextValue>({\r\n  toggleNotification: () => {},\r\n});\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Provider\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface NotificationsProviderProps {\r\n  children: React.ReactNode;\r\n}\r\ninterface Notification extends NotificationConfig {\r\n  id: number;\r\n}\r\n\r\n/**\r\n * @internal\r\n * @description DO NOT USE. This will be removed before stable release of v5.\r\n */\r\nconst NotificationsProvider = ({ children }: NotificationsProviderProps) => {\r\n  const notificationIdRef = React.useRef(0);\r\n\r\n  const [notifications, setNotifications] = React.useState<Notification[]>([]);\r\n\r\n  const toggleNotification = React.useCallback(\r\n    ({ type, message, link, timeout, blockTransition, onClose, title }: NotificationConfig) => {\r\n      setNotifications((s) => [\r\n        ...s,\r\n        {\r\n          id: notificationIdRef.current++,\r\n          type,\r\n          message,\r\n          link,\r\n          timeout,\r\n          blockTransition,\r\n          onClose,\r\n          title,\r\n        },\r\n      ]);\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearNotification = React.useCallback((id: number) => {\r\n    setNotifications((s) => s.filter((n) => n.id !== id));\r\n  }, []);\r\n\r\n  const value = React.useMemo(() => ({ toggleNotification }), [toggleNotification]);\r\n\r\n  return (\r\n    <NotificationsContext.Provider value={value}>\r\n      <Flex\r\n        left=\"50%\"\r\n        marginLeft=\"-250px\"\r\n        position=\"fixed\"\r\n        direction=\"column\"\r\n        alignItems=\"stretch\"\r\n        gap={2}\r\n        top={`4.6rem`}\r\n        width={`50rem`}\r\n        zIndex=\"notification\"\r\n      >\r\n        {notifications.map((notification) => {\r\n          return (\r\n            <Notification\r\n              key={notification.id}\r\n              {...notification}\r\n              clearNotification={clearNotification}\r\n            />\r\n          );\r\n        })}\r\n      </Flex>\r\n      {children}\r\n    </NotificationsContext.Provider>\r\n  );\r\n};\r\n\r\ninterface NotificationProps extends Notification {\r\n  clearNotification: (id: number) => void;\r\n}\r\n\r\nconst Notification = ({\r\n  clearNotification,\r\n  blockTransition = false,\r\n  id,\r\n  link,\r\n  message,\r\n  onClose,\r\n  timeout = 2500,\r\n  title,\r\n  type,\r\n}: NotificationProps) => {\r\n  const { formatMessage } = useIntl();\r\n  /**\r\n   * Chances are `onClose` won't be classed as stabilised,\r\n   * so we use `useCallbackRef` to avoid make it stable.\r\n   */\r\n  const onCloseCallback = useCallbackRef(onClose);\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    onCloseCallback();\r\n\r\n    clearNotification(id);\r\n  }, [clearNotification, id, onCloseCallback]);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  React.useEffect(() => {\r\n    if (!blockTransition) {\r\n      const timeoutReference = setTimeout(() => {\r\n        handleClose();\r\n      }, timeout);\r\n\r\n      return () => {\r\n        clearTimeout(timeoutReference);\r\n      };\r\n    }\r\n  }, [blockTransition, handleClose, timeout]);\r\n\r\n  let variant: AlertVariant;\r\n  let alertTitle: string;\r\n\r\n  if (type === 'info') {\r\n    variant = 'default';\r\n    alertTitle = formatMessage({\r\n      id: 'notification.default.title',\r\n      defaultMessage: 'Information:',\r\n    });\r\n  } else if (type === 'danger') {\r\n    variant = 'danger';\r\n    alertTitle = formatMessage({\r\n      id: 'notification.warning.title',\r\n      defaultMessage: 'Warning:',\r\n    });\r\n  } else if (type === 'warning') {\r\n    variant = 'warning';\r\n    alertTitle = formatMessage({\r\n      id: 'notification.warning.title',\r\n      defaultMessage: 'Warning:',\r\n    });\r\n  } else {\r\n    variant = 'success';\r\n    alertTitle = formatMessage({\r\n      id: 'notification.success.title',\r\n      defaultMessage: 'Success:',\r\n    });\r\n  }\r\n\r\n  if (title) {\r\n    alertTitle = title;\r\n  }\r\n\r\n  return (\r\n    <Alert\r\n      action={\r\n        link ? (\r\n          <Link href={link.url} isExternal>\r\n            {link.label}\r\n          </Link>\r\n        ) : undefined\r\n      }\r\n      onClose={handleClose}\r\n      closeLabel={formatMessage({\r\n        id: 'global.close',\r\n        defaultMessage: 'Close',\r\n      })}\r\n      title={alertTitle}\r\n      variant={variant}\r\n    >\r\n      {message}\r\n    </Alert>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Hook\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\n/**\r\n * @preserve\r\n * @description Returns an object to interact with the notification\r\n * system. The callbacks are wrapped in `useCallback` for a stable\r\n * identity.\r\n *\r\n * @example\r\n * ```tsx\r\n * import { useNotification } from '@strapi/strapi/admin';\r\n *\r\n * const MyComponent = () => {\r\n *  const { toggleNotification } = useNotification();\r\n *\r\n *  return <button onClick={() => toggleNotification({ message: 'Hello world!' })}>Click me</button>;\r\n */\r\nconst useNotification = () => React.useContext(NotificationsContext);\r\n\r\nexport { NotificationsProvider, useNotification };\r\nexport type { NotificationConfig, NotificationsContextValue };\r\n","/**\r\n * Prefix message with 'apiError.'\r\n */\r\nexport function getPrefixedId(message: string, callback?: (prefixedMessage: string) => string) {\r\n  const prefixedMessage = `apiError.${message}`;\r\n\r\n  // if a prefix function has been passed in it is used to\r\n  // prefix the id, e.g. to allow an error message to be\r\n  // set only for a localization namespace\r\n  if (typeof callback === 'function') {\r\n    return callback(prefixedMessage);\r\n  }\r\n\r\n  return prefixedMessage;\r\n}\r\n","import { getPrefixedId } from './getPrefixedId';\r\n\r\nimport type { ApiError } from '../hooks/useAPIErrorHandler';\r\nimport type { FetchError } from '../utils/getFetchClient';\r\nimport type { errors } from '@strapi/utils';\r\n\r\nexport interface NormalizeErrorOptions {\r\n  name?: string;\r\n  intlMessagePrefixCallback?: (id: string) => string;\r\n}\r\n\r\ninterface NormalizeErrorReturn {\r\n  id: string;\r\n  defaultMessage: string;\r\n  name?: string;\r\n  values: Record<'path', string> | Record<string, never>;\r\n}\r\n\r\ninterface YupFormattedError {\r\n  path: string[];\r\n  message: string;\r\n  name: string;\r\n}\r\n\r\nfunction normalizeError(\r\n  error: ApiError | YupFormattedError,\r\n  { name, intlMessagePrefixCallback }: NormalizeErrorOptions\r\n): NormalizeErrorReturn {\r\n  const { message } = error;\r\n\r\n  const normalizedError = {\r\n    id: getPrefixedId(message, intlMessagePrefixCallback),\r\n    defaultMessage: message,\r\n    name: error.name ?? name,\r\n    values: {},\r\n  };\r\n\r\n  if ('path' in error) {\r\n    normalizedError.values = { path: error.path.join('.') };\r\n  }\r\n\r\n  return normalizedError;\r\n}\r\n\r\nconst validateErrorIsYupValidationError = (\r\n  err: ApiError\r\n): err is errors.YupValidationError & { details: { errors: YupFormattedError[] } } =>\r\n  typeof err.details === 'object' && err.details !== null && 'errors' in err.details;\r\n\r\n/**\r\n * Normalize the format of `ResponseError`\r\n * in places where the hook `useAPIErrorHandler` can not called\r\n * (e.g. outside of a React component).\r\n */\r\nexport function normalizeAPIError(\r\n  apiError: FetchError,\r\n  intlMessagePrefixCallback?: NormalizeErrorOptions['intlMessagePrefixCallback']\r\n):\r\n  | NormalizeErrorReturn\r\n  | { name: string; message: string | null; errors: NormalizeErrorReturn[] }\r\n  | null {\r\n  const error = apiError.response?.data?.error;\r\n\r\n  if (error) {\r\n    // some errors carry multiple errors (such as ValidationError)\r\n    if (validateErrorIsYupValidationError(error)) {\r\n      return {\r\n        name: error.name,\r\n        message: error?.message || null,\r\n        errors: error.details.errors.map((err) =>\r\n          normalizeError(err, { name: error.name, intlMessagePrefixCallback })\r\n        ),\r\n      };\r\n    }\r\n    return normalizeError(error, { intlMessagePrefixCallback });\r\n  }\r\n\r\n  return null;\r\n}\r\n","import clone from 'lodash/clone';\r\nimport toPath from 'lodash/toPath';\r\n\r\n/**\r\n * Deeply get a value from an object via its path.\r\n */\r\nexport function getIn(obj: any, key: string | string[], def?: any, pathStartIndex: number = 0) {\r\n  const path = toPath(key);\r\n  while (obj && pathStartIndex < path.length) {\r\n    obj = obj[path[pathStartIndex++]];\r\n  }\r\n\r\n  // check if path is not in the end\r\n  if (pathStartIndex !== path.length && !obj) {\r\n    return def;\r\n  }\r\n\r\n  return obj === undefined ? def : obj;\r\n}\r\n\r\n/** @internal is the given object an Object? */\r\nexport const isObject = (obj: any): obj is object =>\r\n  obj !== null && typeof obj === 'object' && !Array.isArray(obj);\r\n\r\n/** @internal is the given object an integer? */\r\nexport const isInteger = (obj: any): boolean => String(Math.floor(Number(obj))) === obj;\r\n\r\n/**\r\n * Deeply set a value from in object via its path. If the value at `path`\r\n * has changed, return a shallow copy of obj with `value` set at `path`.\r\n * If `value` has not changed, return the original `obj`.\r\n *\r\n * Existing objects / arrays along `path` are also shallow copied. Sibling\r\n * objects along path retain the same internal js reference. Since new\r\n * objects / arrays are only created along `path`, we can test if anything\r\n * changed in a nested structure by comparing the object's reference in\r\n * the old and new object, similar to how russian doll cache invalidation\r\n * works.\r\n *\r\n * In earlier versions of this function, which used cloneDeep, there were\r\n * issues whereby settings a nested value would mutate the parent\r\n * instead of creating a new object. `clone` avoids that bug making a\r\n * shallow copy of the objects along the update path\r\n * so no object is mutated in place.\r\n *\r\n * Before changing this function, please read through the following\r\n * discussions.\r\n *\r\n * @see https://github.com/developit/linkstate\r\n * @see https://github.com/jaredpalmer/formik/pull/123\r\n */\r\nexport function setIn(obj: any, path: string, value: any): any {\r\n  const res: any = clone(obj); // this keeps inheritance when obj is a class\r\n  let resVal: any = res;\r\n  let i = 0;\r\n  const pathArray = toPath(path);\r\n\r\n  for (; i < pathArray.length - 1; i++) {\r\n    const currentPath: string = pathArray[i];\r\n    const currentObj: any = getIn(obj, pathArray.slice(0, i + 1));\r\n\r\n    if (currentObj && (isObject(currentObj) || Array.isArray(currentObj))) {\r\n      resVal = resVal[currentPath] = clone(currentObj);\r\n    } else {\r\n      const nextPath: string = pathArray[i + 1];\r\n      resVal = resVal[currentPath] = isInteger(nextPath) && Number(nextPath) >= 0 ? [] : {};\r\n    }\r\n  }\r\n\r\n  // Return original object if new value is the same as current\r\n  if ((i === 0 ? obj : resVal)[pathArray[i]] === value) {\r\n    return obj;\r\n  }\r\n\r\n  if (value === undefined) {\r\n    delete resVal[pathArray[i]];\r\n  } else {\r\n    resVal[pathArray[i]] = value;\r\n  }\r\n\r\n  // If the path array has a single element, the loop did not run.\r\n  // Deleting on `resVal` had no effect in this scenario, so we delete on the result instead.\r\n  if (i === 0 && value === undefined) {\r\n    delete res[pathArray[i]];\r\n  }\r\n\r\n  return res;\r\n}\r\n","import * as React from 'react';\r\n\r\nimport { IntlFormatters, useIntl } from 'react-intl';\r\n\r\nimport { FetchError } from '../utils/getFetchClient';\r\nimport { getPrefixedId } from '../utils/getPrefixedId';\r\nimport { NormalizeErrorOptions, normalizeAPIError } from '../utils/normalizeAPIError';\r\nimport { setIn } from '../utils/objects';\r\n\r\nimport type { errors } from '@strapi/utils';\r\n\r\ntype ApiError =\r\n  | errors.ApplicationError\r\n  | errors.ForbiddenError\r\n  | errors.NotFoundError\r\n  | errors.NotImplementedError\r\n  | errors.PaginationError\r\n  | errors.PayloadTooLargeError\r\n  | errors.PolicyError\r\n  | errors.RateLimitError\r\n  | errors.UnauthorizedError\r\n  | errors.ValidationError\r\n  | errors.YupValidationError;\r\n\r\ninterface UnknownApiError {\r\n  /**\r\n   * The name of the ApiError, is always a static value.\r\n   */\r\n  name: 'UnknownError';\r\n  /**\r\n   * The error message.\r\n   */\r\n  message: string;\r\n  /**\r\n   * The error details.\r\n   */\r\n  details?: unknown;\r\n  /**\r\n   * The HTTP status code of the error.\r\n   */\r\n  status?: number;\r\n}\r\n\r\n/**\r\n * The last item is the fallback error SerializedError which\r\n * typically comes from redux-toolkit itself.\r\n */\r\ninterface SerializedError {\r\n  /**\r\n   * The name of the error.\r\n   */\r\n  name?: string;\r\n  /**\r\n   * The error message that explains what went wrong.\r\n   */\r\n  message?: string;\r\n  /**\r\n   * The stack trace of the error.\r\n   */\r\n  stack?: string;\r\n  /**\r\n   * A specific error code associated with the error.\r\n   */\r\n  code?: string;\r\n}\r\n\r\n/**\r\n * These are the types or errors we return\r\n * from the redux-toolkit data-fetching setup.\r\n */\r\ntype BaseQueryError = ApiError | UnknownApiError | SerializedError;\r\n\r\ninterface YupFormattedError {\r\n  /**\r\n   * An array representing the path to the field where the validation error occurred.\r\n   */\r\n  path: string[];\r\n  /**\r\n   * The error message describing the validation failure.\r\n   */\r\n  message: string;\r\n  /**\r\n   * The name of the error, typically identifies the type of validation error that occurred.\r\n   */\r\n  name: string;\r\n}\r\n\r\n/**\r\n * @public\r\n * @description The purpose of this hook is to offer a unified way to handle errors thrown by API endpoints, regardless of the type of error (`ValidationError`, `ApplicationErrror` ...)\r\nthat has been thrown.\r\n * @example\r\n * ```tsx\r\n * import * as React from 'react';\r\n * import { useFetchClient, useAPIErrorHandler, useNotification } from '@strapi/admin/admin';\r\n *\r\n * const MyComponent = () => {\r\n *   const { get } = useFetchClient();\r\n *   const { formatAPIError } = useAPIErrorHandler(getTrad);\r\n *   const { toggleNotification } = useNotification();\r\n *\r\n *   const handleDeleteItem = async () => {\r\n *     try {\r\n *       return await get('/admin');\r\n *     } catch (error) {\r\n *       toggleNotification({\r\n *         type: 'danger',\r\n *         message: formatAPIError(error),\r\n *       });\r\n *     }\r\n *   };\r\n *   return <button onClick={handleDeleteItem}>Delete item</button>;\r\n * };\r\n * ```\r\n */\r\nexport function useAPIErrorHandler(\r\n  intlMessagePrefixCallback?: FormatAPIErrorOptions['intlMessagePrefixCallback']\r\n) {\r\n  const { formatMessage } = useIntl();\r\n\r\n  /**\r\n   * @description This method try to normalize the passed error\r\n   * and then call formatAPIError to stringify the ResponseObject\r\n   * into a string. If it fails it will call formatFetchError and\r\n   * return the error message.\r\n   */\r\n  const formatError = React.useCallback(\r\n    (error: FetchError) => {\r\n      // Try to normalize the passed error first. This will fail for e.g. network\r\n      // errors which are thrown by fetchClient directly.\r\n      try {\r\n        const formattedErr = formatAPIError(error, { intlMessagePrefixCallback, formatMessage });\r\n\r\n        if (!formattedErr) {\r\n          return formatFetchError(error, { intlMessagePrefixCallback, formatMessage });\r\n        }\r\n\r\n        return formattedErr;\r\n      } catch (_) {\r\n        throw new Error('formatAPIError: Unknown error:', error);\r\n      }\r\n    },\r\n    [formatMessage, intlMessagePrefixCallback]\r\n  );\r\n\r\n  return {\r\n    /**\r\n     * @alpha\r\n     * Convert ValidationErrors from the API into an object that can be used by forms.\r\n     */\r\n    _unstableFormatValidationErrors: React.useCallback(\r\n      (error: Extract<BaseQueryError, { name: 'ValidationError' }>): Record<string, string> => {\r\n        if (typeof error.details === 'object' && error.details !== null) {\r\n          if ('errors' in error.details && Array.isArray(error.details.errors)) {\r\n            const validationErrors = error.details.errors as YupFormattedError[];\r\n\r\n            return validationErrors.reduce((acc, err) => {\r\n              const { path, message } = err;\r\n\r\n              return setIn(acc, path.join('.'), message);\r\n            }, {});\r\n          } else {\r\n            const details = error.details as Record<string, string[]>;\r\n\r\n            return Object.keys(details).reduce((acc, key) => {\r\n              const messages = details[key];\r\n\r\n              return {\r\n                ...acc,\r\n                [key]: messages.join(', '),\r\n              };\r\n            }, {});\r\n          }\r\n        } else {\r\n          return {};\r\n        }\r\n      },\r\n      []\r\n    ),\r\n    /**\r\n     * @alpha\r\n     * This handles the errors given from `redux-toolkit`'s axios based baseQuery function.\r\n     */\r\n    _unstableFormatAPIError: React.useCallback(\r\n      (error: BaseQueryError) => {\r\n        const err = {\r\n          response: {\r\n            data: {\r\n              error,\r\n            },\r\n          },\r\n        } as FetchError;\r\n\r\n        /**\r\n         * There's a chance with SerializedErrors that the message is not set.\r\n         * In that case we return a generic error message.\r\n         */\r\n        if (!error.message) {\r\n          return 'Unknown error occured.';\r\n        }\r\n\r\n        return formatError(err);\r\n      },\r\n      [formatError]\r\n    ),\r\n    formatAPIError: formatError,\r\n  };\r\n}\r\n\r\nfunction formatFetchError(\r\n  error: FetchError,\r\n  { intlMessagePrefixCallback, formatMessage }: FormatAPIErrorOptions\r\n) {\r\n  const { code, message } = error;\r\n\r\n  return formatMessage(\r\n    {\r\n      id: getPrefixedId(message, intlMessagePrefixCallback),\r\n      defaultMessage: message,\r\n    },\r\n    {\r\n      code,\r\n    }\r\n  );\r\n}\r\n\r\ntype FormatAPIErrorOptions = Partial<Pick<NormalizeErrorOptions, 'intlMessagePrefixCallback'>> &\r\n  Pick<IntlFormatters, 'formatMessage'>;\r\n\r\n/**\r\n * @description This method stringifies the `ResponseObject` into\r\n * a string. If multiple errors are thrown by the API, which\r\n * happens e.g.in the case of a `ValidationError`, all errors\r\n * will bo concatenated into a single string.\r\n */\r\nfunction formatAPIError(\r\n  error: FetchError,\r\n  { formatMessage, intlMessagePrefixCallback }: FormatAPIErrorOptions\r\n) {\r\n  if (!formatMessage) {\r\n    throw new Error('The formatMessage callback is a mandatory argument.');\r\n  }\r\n\r\n  const normalizedError = normalizeAPIError(error, intlMessagePrefixCallback);\r\n\r\n  if (!normalizedError) {\r\n    return null;\r\n  }\r\n\r\n  if ('message' in normalizedError && normalizedError.message !== null) {\r\n    return normalizedError.message;\r\n  }\r\n\r\n  // stringify multiple errors\r\n  if ('errors' in normalizedError) {\r\n    return normalizedError.errors\r\n      .map(({ id, defaultMessage, values }) => formatMessage({ id, defaultMessage }, values))\r\n      .join('\\n');\r\n  }\r\n\r\n  return formatMessage(normalizedError);\r\n}\r\n\r\nexport type { ApiError };\r\n","import * as React from 'react';\r\n\r\nimport {\r\n  Box,\r\n  EmptyStateLayout,\r\n  type EmptyStateLayoutProps,\r\n  Flex,\r\n  Loader,\r\n  Main,\r\n  MainProps,\r\n} from '@strapi/design-system';\r\nimport { WarningCircle } from '@strapi/icons';\r\nimport { EmptyPermissions, EmptyDocuments } from '@strapi/icons/symbols';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { useAuth, Permission } from '../features/Auth';\r\nimport { useNotification } from '../features/Notifications';\r\nimport { useAPIErrorHandler } from '../hooks/useAPIErrorHandler';\r\nimport { useCheckPermissionsQuery } from '../services/auth';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Main\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface PageMainProps extends MainProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst PageMain = ({ children, ...restProps }: PageMainProps) => {\r\n  return <Main {...restProps}>{children}</Main>;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Loading\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface LoadingProps {\r\n  /**\r\n   * @default 'Loading content.'\r\n   */\r\n  children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * @public\r\n * @description A loading component that should be rendered as the page\r\n * whilst you load the content for the aforementioned page.\r\n */\r\nconst Loading = ({ children = 'Loading content.' }: LoadingProps) => {\r\n  return (\r\n    <PageMain height=\"100vh\" aria-busy={true}>\r\n      <Flex alignItems=\"center\" height=\"100%\" justifyContent=\"center\">\r\n        <Loader>{children}</Loader>\r\n      </Flex>\r\n    </PageMain>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Error\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface ErrorProps extends Partial<EmptyStateLayoutProps> {}\r\n\r\n/**\r\n * TODO: should we start passing our errors here so they're persisted on the screen?\r\n * This could follow something similar to how the global app error works...?\r\n */\r\n\r\n/**\r\n * @public\r\n * @description An error component that should be rendered as the page\r\n * when an error occurs.\r\n */\r\nconst Error = (props: ErrorProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <PageMain height=\"100%\">\r\n      <Flex alignItems=\"center\" height=\"100%\" justifyContent=\"center\">\r\n        <EmptyStateLayout\r\n          icon={<WarningCircle width=\"16rem\" />}\r\n          content={formatMessage({\r\n            id: 'anErrorOccurred',\r\n            defaultMessage: 'Woops! Something went wrong. Please, try again.',\r\n          })}\r\n          {...props}\r\n        />\r\n      </Flex>\r\n    </PageMain>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * NoPermissions\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface NoPermissionsProps extends Partial<EmptyStateLayoutProps> {}\r\n\r\n/**\r\n * @public\r\n * @description A component that should be rendered as the page\r\n * when the user does not have the permissions to access the content.\r\n * This component does not check any permissions, it's up to you to decide\r\n * when it should be rendered.\r\n */\r\nconst NoPermissions = (props: NoPermissionsProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <PageMain height=\"100%\">\r\n      <Flex alignItems=\"center\" height=\"100%\" justifyContent=\"center\">\r\n        <Box minWidth=\"50%\">\r\n          <EmptyStateLayout\r\n            icon={<EmptyPermissions width=\"16rem\" />}\r\n            content={formatMessage({\r\n              id: 'app.components.EmptyStateLayout.content-permissions',\r\n              defaultMessage: \"You don't have the permissions to access that content\",\r\n            })}\r\n            {...props}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </PageMain>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * NoData\r\n * -----------------------------------------------------------------------------------------------*/\r\ninterface NoDataProps extends Partial<EmptyStateLayoutProps> {}\r\n\r\n/**\r\n * @public\r\n * @description A component that should be rendered as the page\r\n * when there is no data available to display.\r\n * This component does not check any permissions, it's up to you to decide\r\n * when it should be rendered.\r\n */\r\nconst NoData = (props: NoDataProps) => {\r\n  const { formatMessage } = useIntl();\r\n\r\n  return (\r\n    <PageMain height=\"100%\" background=\"neutral100\">\r\n      <Flex alignItems=\"center\" height=\"100%\" width=\"100%\" justifyContent=\"center\">\r\n        <Box minWidth=\"50%\">\r\n          <EmptyStateLayout\r\n            icon={<EmptyDocuments width=\"16rem\" />}\r\n            action={props.action}\r\n            content={formatMessage({\r\n              id: 'app.components.EmptyStateLayout.content-document',\r\n              defaultMessage: 'No content found',\r\n            })}\r\n            {...props}\r\n          />\r\n        </Box>\r\n      </Flex>\r\n    </PageMain>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Protect\r\n * -----------------------------------------------------------------------------------------------*/\r\nexport interface ProtectProps {\r\n  /**\r\n   * The children to render if the user has the required permissions.\r\n   * If providing a function, it will be called with an object containing\r\n   * the permissions the user has based on the array you passed to the component.\r\n   */\r\n  children: React.ReactNode | ((args: { permissions: Permission[] }) => React.ReactNode);\r\n  /**\r\n   * The permissions the user needs to have to access the content.\r\n   */\r\n  permissions?: Array<Omit<Partial<Permission>, 'action'> & Pick<Permission, 'action'>>;\r\n}\r\n\r\n/**\r\n * @public\r\n * @description A wrapper component that should be used to protect a page. It will check the permissions\r\n * you pass to it and render the children if the user has the required permissions. If a user does not have ALL\r\n * the required permissions, it will redirect the user to the home page. Whilst these checks happen it will render\r\n * the loading component and should the check fail it will render the error component with a notification.\r\n */\r\nconst Protect = ({ permissions = [], children }: ProtectProps) => {\r\n  const userPermissions = useAuth('Protect', (state) => state.permissions);\r\n  const { toggleNotification } = useNotification();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n\r\n  const matchingPermissions = userPermissions.filter(\r\n    (permission) =>\r\n      permissions.findIndex(\r\n        (perm) => perm.action === permission.action && perm.subject === permission.subject\r\n      ) >= 0\r\n  );\r\n\r\n  const shouldCheckConditions = matchingPermissions.some(\r\n    (perm) => Array.isArray(perm.conditions) && perm.conditions.length > 0\r\n  );\r\n\r\n  const { isLoading, error, data } = useCheckPermissionsQuery(\r\n    {\r\n      permissions: matchingPermissions.map((perm) => ({\r\n        action: perm.action,\r\n        subject: perm.subject,\r\n      })),\r\n    },\r\n    {\r\n      skip: !shouldCheckConditions,\r\n    }\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatAPIError(error),\r\n      });\r\n    }\r\n  }, [error, formatAPIError, toggleNotification]);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <Error />;\r\n  }\r\n\r\n  const { data: permissionsData } = data || {};\r\n\r\n  const canAccess =\r\n    shouldCheckConditions && permissionsData\r\n      ? !permissionsData.includes(false)\r\n      : matchingPermissions.length > 0;\r\n\r\n  if (!canAccess) {\r\n    return <NoPermissions />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {typeof children === 'function' ? children({ permissions: matchingPermissions }) : children}\r\n    </>\r\n  );\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Title\r\n * -----------------------------------------------------------------------------------------------*/\r\nexport interface TitleProps {\r\n  children: string;\r\n}\r\n\r\n/**\r\n * @public\r\n * @description This component takes the children (must be a string) and sets\r\n * it as the title of the html.\r\n */\r\nconst Title = ({ children: title }: TitleProps) => {\r\n  React.useEffect(() => {\r\n    document.title = `${title} | AI4Mahila`;\r\n  }, [title]);\r\n\r\n  return null;\r\n};\r\n\r\nconst Page = {\r\n  Error,\r\n  Loading,\r\n  NoPermissions,\r\n  Protect,\r\n  NoData,\r\n  Main: PageMain,\r\n  Title,\r\n};\r\n\r\nexport { Page };\r\nexport type { ErrorProps, LoadingProps, NoPermissionsProps, PageMainProps as MainProps };\r\n","export const once = <TFunc extends (...args: any) => any>(fn: TFunc) => {\r\n  const func = fn;\r\n  let called = false;\r\n\r\n  if (typeof func !== 'function') {\r\n    throw new TypeError(`once requires a function parameter`);\r\n  }\r\n\r\n  return (...args: any) => {\r\n    if (!called && process.env.NODE_ENV === 'development') {\r\n      func(...args);\r\n      called = true;\r\n    }\r\n  };\r\n};\r\n","const capitalise = (str: string): string => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\nexport { capitalise };\r\n","import { useEffect, useRef } from 'react';\r\n\r\nexport const usePrev = <T>(value: T): T | undefined => {\r\n  const ref = useRef<T>();\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n};\r\n","import * as React from 'react';\r\n\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nimport { useAuth, Permission } from '../features/Auth';\r\nimport { once } from '../utils/once';\r\nimport { capitalise } from '../utils/strings';\r\n\r\nimport { usePrev } from './usePrev';\r\n\r\ntype AllowedActions = Record<string, boolean>;\r\n\r\n/**\r\n * @public\r\n * @description This hooks takes an object or array of permissions (the latter preferred) and\r\n * runs through them to match against the current user's permissions as well as the RBAC middleware\r\n * system checking any conditions that may be present. It returns the filtered permissions as the complete\r\n * object from the API and a set of actions that can be performed. An action is derived from the last part\r\n * of the permission action e.g. `admin::roles.create` would be `canCreate`. If there's a hyphen in the action\r\n * this is removed and capitalised e.g `admin::roles.create-draft` would be `canCreateDraft`.\r\n * @example\r\n * ```tsx\r\n * import { Page, useRBAC } from '@strapi/strapi/admin'\r\n *\r\n * const MyProtectedPage = () => {\r\n *  const { allowedActions, isLoading, error, permissions } = useRBAC([{ action: 'admin::roles.create' }])\r\n *\r\n *  if(isLoading) {\r\n *    return <Page.Loading />\r\n *  }\r\n *\r\n *  if(error){\r\n *    return <Page.Error />\r\n *  }\r\n *\r\n *  if(!allowedActions.canCreate) {\r\n *    return null\r\n *  }\r\n *\r\n *  return <MyPage permissions={permissions} />\r\n * }\r\n * ```\r\n */\r\nconst useRBAC = (\r\n  permissionsToCheck: Record<string, Permission[]> | Permission[] = [],\r\n  passedPermissions?: Permission[],\r\n  rawQueryContext?: string\r\n): {\r\n  allowedActions: AllowedActions;\r\n  isLoading: boolean;\r\n  error?: unknown;\r\n  permissions: Permission[];\r\n} => {\r\n  const isLoadingAuth = useAuth('useRBAC', (state) => state.isLoading);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [error, setError] = React.useState<unknown>();\r\n  const [data, setData] = React.useState<Record<string, boolean>>();\r\n\r\n  const warnOnce = React.useMemo(() => once(console.warn), []);\r\n\r\n  const actualPermissionsToCheck: Permission[] = React.useMemo(() => {\r\n    if (Array.isArray(permissionsToCheck)) {\r\n      return permissionsToCheck;\r\n    } else {\r\n      warnOnce(\r\n        'useRBAC: The first argument should be an array of permissions, not an object. This will be deprecated in the future.'\r\n      );\r\n\r\n      return Object.values(permissionsToCheck).flat();\r\n    }\r\n  }, [permissionsToCheck, warnOnce]);\r\n\r\n  /**\r\n   * This is the default value we return until the queryResults[i].data\r\n   * are all resolved with data. This preserves the original behaviour.\r\n   */\r\n  const defaultAllowedActions = React.useMemo(() => {\r\n    return actualPermissionsToCheck.reduce<Record<string, boolean>>((acc, permission) => {\r\n      return {\r\n        ...acc,\r\n        [getActionName(permission)]: false,\r\n      };\r\n    }, {});\r\n  }, [actualPermissionsToCheck]);\r\n\r\n  const checkUserHasPermissions = useAuth('useRBAC', (state) => state.checkUserHasPermissions);\r\n\r\n  const permssionsChecked = usePrev(actualPermissionsToCheck);\r\n  const contextChecked = usePrev(rawQueryContext);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      !isEqual(permssionsChecked, actualPermissionsToCheck) ||\r\n      // TODO: also run this when the query context changes\r\n      contextChecked !== rawQueryContext\r\n    ) {\r\n      setIsLoading(true);\r\n      setData(undefined);\r\n      setError(undefined);\r\n\r\n      checkUserHasPermissions(actualPermissionsToCheck, passedPermissions, rawQueryContext)\r\n        .then((res) => {\r\n          if (res) {\r\n            setData(\r\n              res.reduce<Record<string, boolean>>((acc, permission) => {\r\n                return {\r\n                  ...acc,\r\n                  [getActionName(permission)]: true,\r\n                };\r\n              }, {})\r\n            );\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          setError(err);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n  }, [\r\n    actualPermissionsToCheck,\r\n    checkUserHasPermissions,\r\n    passedPermissions,\r\n    permissionsToCheck,\r\n    permssionsChecked,\r\n    contextChecked,\r\n    rawQueryContext,\r\n  ]);\r\n\r\n  /**\r\n   * This hook originally would not return allowedActions\r\n   * until all the checks were complete.\r\n   */\r\n  const allowedActions = Object.entries({\r\n    ...defaultAllowedActions,\r\n    ...data,\r\n  }).reduce((acc, [name, allowed]) => {\r\n    acc[`can${capitalise(name)}`] = allowed;\r\n\r\n    return acc;\r\n  }, {} as AllowedActions);\r\n\r\n  return {\r\n    allowedActions,\r\n    permissions: actualPermissionsToCheck,\r\n    isLoading: isLoading || isLoadingAuth,\r\n    error,\r\n  };\r\n};\r\n\r\nconst getActionName = (permission: Permission): string => {\r\n  const [action = ''] = permission.action.split('.').slice(-1);\r\n  return action.split('-').map(capitalise).join('');\r\n};\r\n\r\nexport { useRBAC };\r\nexport type { AllowedActions };\r\n","import { createContext } from '../components/Context';\r\n\r\ninterface AppInfoContextValue {\r\n  autoReload?: boolean;\r\n  communityEdition?: boolean;\r\n  currentEnvironment?: string;\r\n  dependencies?: Record<string, string>;\r\n  latestStrapiReleaseTag?: string;\r\n  nodeVersion?: string;\r\n  projectId?: string | null;\r\n  shouldUpdateStrapi?: boolean;\r\n  strapiVersion?: string | null;\r\n  useYarn?: boolean;\r\n  userId?: string;\r\n}\r\n\r\nconst [AppInfoProvider, useAppInfo] = createContext<AppInfoContextValue>('AppInfo', {});\r\n\r\nexport { AppInfoProvider, useAppInfo };\r\n\r\nexport type { AppInfoContextValue };\r\n","import * as React from 'react';\r\n\r\nimport axios, { AxiosResponse } from 'axios';\r\n\r\nimport { useInitQuery, useTelemetryPropertiesQuery } from '../services/admin';\r\n\r\nimport { useAppInfo } from './AppInfo';\r\nimport { useAuth } from './Auth';\r\n\r\nexport interface TelemetryProperties {\r\n  useTypescriptOnServer?: boolean;\r\n  useTypescriptOnAdmin?: boolean;\r\n  isHostedOnStrapiCloud?: boolean;\r\n  numberOfAllContentTypes?: number;\r\n  numberOfComponents?: number;\r\n  numberOfDynamicZones?: number;\r\n}\r\n\r\nexport interface TrackingContextValue {\r\n  uuid?: string | boolean;\r\n  telemetryProperties?: TelemetryProperties;\r\n}\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Context\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nconst TrackingContext = React.createContext<TrackingContextValue>({\r\n  uuid: false,\r\n});\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Provider\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nexport interface TrackingProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst TrackingProvider = ({ children }: TrackingProviderProps) => {\r\n  const token = useAuth('App', (state) => state.token);\r\n  const { data: initData } = useInitQuery();\r\n  const { uuid } = initData ?? {};\r\n\r\n  const { data } = useTelemetryPropertiesQuery(undefined, {\r\n    skip: !initData?.uuid || !token,\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (uuid && data) {\r\n      const event = 'didInitializeAdministration';\r\n      try {\r\n        fetch('https://analytics.strapi.io/api/v2/track', {\r\n          method: 'POST',\r\n          body: JSON.stringify({\r\n            // This event is anonymous\r\n            event,\r\n            userId: '',\r\n            eventPropeties: {},\r\n            groupProperties: { ...data, projectId: uuid },\r\n          }),\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'X-Strapi-Event': event,\r\n          },\r\n        });\r\n      } catch {\r\n        // silence is golden\r\n      }\r\n    }\r\n  }, [data, uuid]);\r\n\r\n  const value = React.useMemo(\r\n    () => ({\r\n      uuid,\r\n      telemetryProperties: data,\r\n    }),\r\n    [uuid, data]\r\n  );\r\n\r\n  return <TrackingContext.Provider value={value}>{children}</TrackingContext.Provider>;\r\n};\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Hook\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\n/**\r\n * We can group these events together because none have properties so there's no benefit\r\n * to having them as separate types.\r\n *\r\n * Meanwhile those with properties have different property shapes corresponding to the specific\r\n * event so understanding which properties go with which event is very helpful.\r\n */\r\ninterface EventWithoutProperties {\r\n  name:\r\n    | 'changeComponentsOrder'\r\n    | 'didAccessAuthenticatedAdministration'\r\n    | 'didAddComponentToDynamicZone'\r\n    | 'didBulkDeleteEntries'\r\n    | 'didNotBulkDeleteEntries'\r\n    | 'didChangeDisplayedFields'\r\n    | 'didCheckDraftRelations'\r\n    | 'didClickGuidedTourHomepageApiTokens'\r\n    | 'didClickGuidedTourHomepageContentManager'\r\n    | 'didClickGuidedTourHomepageContentTypeBuilder'\r\n    | 'didClickGuidedTourStep1CollectionType'\r\n    | 'didClickGuidedTourStep2ContentManager'\r\n    | 'didClickGuidedTourStep3ApiTokens'\r\n    | 'didClickonBlogSection'\r\n    | 'didClickonCodeExampleSection'\r\n    | 'didClickonReadTheDocumentationSection'\r\n    | 'didClickOnTryStrapiCloudSection'\r\n    | 'didClickonTutorialSection'\r\n    | 'didCreateGuidedTourCollectionType'\r\n    | 'didCreateGuidedTourEntry'\r\n    | 'didCreateNewRole'\r\n    | 'didCreateRole'\r\n    | 'didDeleteToken'\r\n    | 'didDuplicateRole'\r\n    | 'didEditEditSettings'\r\n    | 'didEditEmailTemplates'\r\n    | 'didEditFieldNameOnContentType'\r\n    | 'didEditListSettings'\r\n    | 'didEditMediaLibraryConfig'\r\n    | 'didEditNameOfContentType'\r\n    | 'didGenerateGuidedTourApiTokens'\r\n    | 'didGoToMarketplace'\r\n    | 'didLaunchGuidedtour'\r\n    | 'didMissMarketplacePlugin'\r\n    | 'didNotCreateFirstAdmin'\r\n    | 'didNotSaveComponent'\r\n    | 'didPluginLearnMore'\r\n    | 'didPublishEntry'\r\n    | 'didBulkPublishEntries'\r\n    | 'didNotBulkPublishEntries'\r\n    | 'didUnpublishEntry'\r\n    | 'didBulkUnpublishEntries'\r\n    | 'didNotBulkUnpublishEntries'\r\n    | 'didSaveComponent'\r\n    | 'didSaveContentType'\r\n    | 'didSearch'\r\n    | 'didSkipGuidedtour'\r\n    | 'didSubmitPlugin'\r\n    | 'didSubmitProvider'\r\n    | 'didUpdateConditions'\r\n    | 'didSelectAllMediaLibraryElements'\r\n    | 'didSelectContentTypeFieldSettings'\r\n    | 'didSelectContentTypeSettings'\r\n    | 'didEditAuthenticationProvider'\r\n    | 'didRestoreHistoryVersion'\r\n    | 'hasClickedCTBAddFieldBanner'\r\n    | 'removeComponentFromDynamicZone'\r\n    | 'willAddMoreFieldToContentType'\r\n    | 'willBulkDeleteEntries'\r\n    | 'willBulkPublishEntries'\r\n    | 'willBulkUnpublishEntries'\r\n    | 'willChangeNumberOfEntriesPerPage'\r\n    | 'willCheckDraftRelations'\r\n    | 'willCreateComponent'\r\n    | 'willCreateComponentFromAttributesModal'\r\n    | 'willCreateContentType'\r\n    | 'willCreateFirstAdmin'\r\n    | 'willCreateNewRole'\r\n    | 'willCreateRole'\r\n    | 'willCreateSingleType'\r\n    | 'willCreateStage'\r\n    | 'willCreateWorkflow'\r\n    | 'willDeleteEntryFromList'\r\n    | 'willDeleteFieldOfContentType'\r\n    | 'willDuplicateRole'\r\n    | 'willEditEditLayout'\r\n    | 'willEditEmailTemplates'\r\n    | 'willEditEntryFromButton'\r\n    | 'willEditEntryFromList'\r\n    | 'willEditFieldOfContentType'\r\n    | 'willEditMediaLibraryConfig'\r\n    | 'willEditNameOfContentType'\r\n    | 'willEditNameOfSingleType'\r\n    | 'willEditAuthenticationProvider'\r\n    | 'willEditFieldNameOnContentType'\r\n    | 'willEditStage'\r\n    | 'willFilterEntries'\r\n    | 'willInstallPlugin'\r\n    | 'willPublishEntry'\r\n    | 'willUnpublishEntry'\r\n    | 'willSaveComponent'\r\n    | 'willSaveContentType'\r\n    | 'willSaveContentTypeLayout'\r\n    | 'didEditFieldNameOnContentType'\r\n    | 'didCreateRelease';\r\n  properties?: never;\r\n}\r\n\r\ninterface DidFilterMediaLibraryElementsEvent {\r\n  name: 'didFilterMediaLibraryElements';\r\n  properties: MediaEvents['properties'] & {\r\n    filter: string;\r\n  };\r\n}\r\n\r\ninterface DidSortMediaLibraryElementsEvent {\r\n  name: 'didSortMediaLibraryElements';\r\n  properties: MediaEvents['properties'] & {\r\n    sort: string;\r\n  };\r\n}\r\n\r\ninterface DidCropFileEvent {\r\n  name: 'didCropFile';\r\n  properties: MediaEvents['properties'] & {\r\n    duplicatedFile: null | boolean;\r\n  };\r\n}\r\n\r\ninterface DidSelectFile {\r\n  name: 'didSelectFile';\r\n  properties: MediaEvents['properties'] & {\r\n    source: 'url' | 'computer';\r\n  };\r\n}\r\n\r\ninterface DidEditMediaLibraryElementsEvent {\r\n  name: 'didEditMediaLibraryElements';\r\n  properties: MediaEvents['properties'] & {\r\n    type: string;\r\n    changeLocation: string | boolean;\r\n  };\r\n}\r\n\r\ninterface MediaEvents {\r\n  name:\r\n    | 'didSearchMediaLibraryElements'\r\n    | 'didReplaceMedia'\r\n    | 'didAddMediaLibraryFolders'\r\n    | 'willAddMediaLibraryAssets';\r\n  properties: {\r\n    location: string;\r\n  };\r\n}\r\n\r\ninterface DidSelectContentTypeFieldTypeEvent {\r\n  name: 'didSelectContentTypeFieldType';\r\n  properties: {\r\n    type?: string;\r\n  };\r\n}\r\n\r\ninterface DidChangeModeEvent {\r\n  name: 'didChangeMode';\r\n  properties: {\r\n    newMode: string;\r\n  };\r\n}\r\ninterface DidSubmitWithErrorsFirstAdminEvent {\r\n  name: 'didSubmitWithErrorsFirstAdmin';\r\n  properties: {\r\n    count: string;\r\n  };\r\n}\r\n\r\ninterface WillNavigateEvent {\r\n  name: 'willNavigate';\r\n  properties: {\r\n    from: string;\r\n    to: string;\r\n  };\r\n}\r\n\r\ninterface DidAccessTokenListEvent {\r\n  name: 'didAccessTokenList';\r\n  properties: {\r\n    tokenType: TokenEvents['properties']['tokenType'];\r\n    number: number;\r\n  };\r\n}\r\ninterface LogoEvent {\r\n  name: 'didChangeLogo' | 'didClickResetLogo';\r\n  properties: {\r\n    logo: 'menu' | 'auth';\r\n  };\r\n}\r\n\r\ninterface TokenEvents {\r\n  name:\r\n    | 'didCopyTokenKey'\r\n    | 'didAddTokenFromList'\r\n    | 'didEditTokenFromList'\r\n    | 'willAccessTokenList'\r\n    | 'willAddTokenFromList'\r\n    | 'willCreateToken'\r\n    | 'willDeleteToken'\r\n    | 'willEditToken'\r\n    | 'willEditTokenFromList';\r\n  properties: {\r\n    tokenType: 'api-token' | 'transfer-token';\r\n  };\r\n}\r\n\r\ninterface WillModifyTokenEvent {\r\n  name: 'didCreateToken' | 'didEditToken';\r\n  properties: {\r\n    tokenType: TokenEvents['properties']['tokenType'];\r\n    type: 'custom' | 'full-access' | 'read-only' | Array<'push' | 'pull' | 'push-pull'>;\r\n  };\r\n}\r\n\r\ninterface DeleteEntryEvents {\r\n  name: 'willDeleteEntry' | 'didDeleteEntry' | 'didNotDeleteEntry';\r\n  properties: {\r\n    status?: string;\r\n    error?: unknown;\r\n  };\r\n}\r\n\r\ninterface CreateEntryEvents {\r\n  name: 'willCreateEntry' | 'didCreateEntry' | 'didNotCreateEntry';\r\n  properties: {\r\n    status?: string;\r\n    error?: unknown;\r\n  };\r\n}\r\n\r\ninterface UpdateEntryEvents {\r\n  name: 'willEditEntry' | 'didEditEntry' | 'didNotEditEntry';\r\n  properties: {\r\n    status?: string;\r\n    error?: unknown;\r\n  };\r\n}\r\n\r\ninterface DidFilterEntriesEvent {\r\n  name: 'didFilterEntries';\r\n  properties: {\r\n    useRelation: boolean;\r\n  };\r\n}\r\n\r\ninterface DidPublishRelease {\r\n  name: 'didPublishRelease';\r\n  properties: {\r\n    totalEntries: number;\r\n    totalPublishedEntries: number;\r\n    totalUnpublishedEntries: number;\r\n  };\r\n}\r\n\r\ntype EventsWithProperties =\r\n  | CreateEntryEvents\r\n  | DidAccessTokenListEvent\r\n  | DidChangeModeEvent\r\n  | DidCropFileEvent\r\n  | DeleteEntryEvents\r\n  | DidEditMediaLibraryElementsEvent\r\n  | DidFilterMediaLibraryElementsEvent\r\n  | DidFilterEntriesEvent\r\n  | DidSelectContentTypeFieldTypeEvent\r\n  | DidSelectFile\r\n  | DidSortMediaLibraryElementsEvent\r\n  | DidSubmitWithErrorsFirstAdminEvent\r\n  | LogoEvent\r\n  | TokenEvents\r\n  | UpdateEntryEvents\r\n  | WillModifyTokenEvent\r\n  | WillNavigateEvent\r\n  | DidPublishRelease\r\n  | MediaEvents;\r\n\r\nexport type TrackingEvent = EventWithoutProperties | EventsWithProperties;\r\nexport interface UseTrackingReturn {\r\n  /**\r\n   * This type helps show all the available event names before you start typing,\r\n   * however autocomplete isn't great.\r\n   */\r\n  trackUsage<TEvent extends TrackingEvent>(\r\n    event: TEvent['name'],\r\n    properties: TEvent['properties']\r\n  ): Promise<null | AxiosResponse<string>>;\r\n  trackUsage<TEvent extends Extract<TrackingEvent, { properties?: never }>>(\r\n    event: TEvent['name'],\r\n    properties?: never\r\n  ): Promise<null | AxiosResponse<string>>;\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  trackUsage<TEvent extends Extract<TrackingEvent, { properties: object }>>(\r\n    event: TEvent['name'],\r\n    properties: TEvent['properties']\r\n  ): Promise<null | AxiosResponse<string>>;\r\n}\r\n\r\n/**\r\n * @description Used to send amplitude events to the Strapi Tracking hub.\r\n *\r\n * @example\r\n * ```tsx\r\n * import { useTracking } from '@strapi/strapi/admin';\r\n *\r\n * const MyComponent = () => {\r\n *  const { trackUsage } = useTracking();\r\n *\r\n *  const handleClick = () => {\r\n *   trackUsage('my-event', { myProperty: 'myValue' });\r\n *  }\r\n *\r\n *  return <button onClick={handleClick}>Send Event</button>\r\n * }\r\n * ```\r\n */\r\nconst useTracking = (): UseTrackingReturn => {\r\n  const { uuid, telemetryProperties } = React.useContext(TrackingContext);\r\n  const userId = useAppInfo('useTracking', (state) => state.userId);\r\n  const trackUsage = React.useCallback(\r\n    async <TEvent extends TrackingEvent>(\r\n      event: TEvent['name'],\r\n      properties?: TEvent['properties']\r\n    ) => {\r\n      try {\r\n        if (uuid && !window.strapi.telemetryDisabled) {\r\n          const res = await axios.post<string>(\r\n            'https://analytics.strapi.io/api/v2/track',\r\n            {\r\n              event,\r\n              userId,\r\n              eventProperties: { ...properties },\r\n              userProperties: {},\r\n              groupProperties: {\r\n                ...telemetryProperties,\r\n                projectId: uuid,\r\n                projectType: window.strapi.projectType,\r\n              },\r\n            },\r\n            {\r\n              headers: {\r\n                'Content-Type': 'application/json',\r\n                'X-Strapi-Event': event,\r\n              },\r\n            }\r\n          );\r\n\r\n          return res;\r\n        }\r\n      } catch (err) {\r\n        // Silence is golden\r\n      }\r\n\r\n      return null;\r\n    },\r\n    [telemetryProperties, userId, uuid]\r\n  );\r\n\r\n  return { trackUsage };\r\n};\r\n\r\nexport { TrackingProvider, useTracking };\r\n","import * as React from 'react';\r\n\r\nimport { createContext } from '@radix-ui/react-context';\r\nimport { useIntl } from 'react-intl';\r\n\r\nimport { UpdateProjectSettings } from '../../../shared/contracts/admin';\r\nimport { Page } from '../components/PageHelpers';\r\nimport { useTypedSelector } from '../core/store/hooks';\r\nimport { useAPIErrorHandler } from '../hooks/useAPIErrorHandler';\r\nimport { useRBAC } from '../hooks/useRBAC';\r\nimport {\r\n  ConfigurationLogo,\r\n  useInitQuery,\r\n  useProjectSettingsQuery,\r\n  useUpdateProjectSettingsMutation,\r\n} from '../services/admin';\r\n\r\nimport { useAuth } from './Auth';\r\nimport { useNotification } from './Notifications';\r\nimport { useTracking } from './Tracking';\r\n\r\nimport type { StrapiApp } from '../StrapiApp';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * Configuration Context\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface UpdateProjectSettingsBody {\r\n  authLogo:\r\n    | ((UpdateProjectSettings.Request['body']['authLogo'] | ConfigurationLogo['custom']) & {\r\n        rawFile?: File;\r\n      })\r\n    | null;\r\n  menuLogo:\r\n    | ((UpdateProjectSettings.Request['body']['menuLogo'] | ConfigurationLogo['custom']) & {\r\n        rawFile?: File;\r\n      })\r\n    | null;\r\n}\r\n\r\ninterface ConfigurationContextValue {\r\n  logos: {\r\n    auth: ConfigurationLogo;\r\n    menu: ConfigurationLogo;\r\n  };\r\n  showTutorials: boolean;\r\n  showReleaseNotification: boolean;\r\n  updateProjectSettings: (body: UpdateProjectSettingsBody) => Promise<void>;\r\n}\r\n\r\nconst [ConfigurationContextProvider, useConfiguration] =\r\n  createContext<ConfigurationContextValue>('ConfigurationContext');\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * ConfigurationProvider\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface ConfigurationProviderProps {\r\n  children: React.ReactNode;\r\n  defaultAuthLogo: StrapiApp['configurations']['authLogo'];\r\n  defaultMenuLogo: StrapiApp['configurations']['menuLogo'];\r\n  showReleaseNotification?: boolean;\r\n  showTutorials?: boolean;\r\n}\r\n\r\nconst ConfigurationProvider = ({\r\n  children,\r\n  defaultAuthLogo,\r\n  defaultMenuLogo,\r\n  showReleaseNotification = false,\r\n  showTutorials = false,\r\n}: ConfigurationProviderProps) => {\r\n  const { trackUsage } = useTracking();\r\n  const { formatMessage } = useIntl();\r\n  const { toggleNotification } = useNotification();\r\n  const { _unstableFormatAPIError: formatAPIError } = useAPIErrorHandler();\r\n  const permissions = useTypedSelector(\r\n    (state) => state.admin_app.permissions.settings?.['project-settings']\r\n  );\r\n  const token = useAuth('ConfigurationProvider', (state) => state.token);\r\n\r\n  const {\r\n    allowedActions: { canRead },\r\n  } = useRBAC(permissions);\r\n\r\n  const {\r\n    data: { authLogo: customAuthLogo, menuLogo: customMenuLogo } = {},\r\n    error,\r\n    isLoading,\r\n  } = useInitQuery();\r\n\r\n  React.useEffect(() => {\r\n    if (error) {\r\n      toggleNotification({\r\n        type: 'danger',\r\n        message: formatMessage({ id: 'app.containers.App.notification.error.init' }),\r\n      });\r\n    }\r\n  }, [error, formatMessage, toggleNotification]);\r\n\r\n  const { data, isSuccess } = useProjectSettingsQuery(undefined, {\r\n    skip: !token || !canRead,\r\n  });\r\n\r\n  const [updateProjectSettingsMutation] = useUpdateProjectSettingsMutation();\r\n\r\n  const updateProjectSettings = React.useCallback(\r\n    async (body: UpdateProjectSettingsBody) => {\r\n      const formData = new FormData();\r\n\r\n      /**\r\n       * We either only send files or we send null values.\r\n       * Null removes the logo. If you don't want to effect\r\n       * an existing logo, don't send anything.\r\n       */\r\n      Object.entries(body).forEach(([key, value]) => {\r\n        if (value?.rawFile) {\r\n          formData.append(key, value.rawFile);\r\n        } else if (value === null) {\r\n          formData.append(key, JSON.stringify(value));\r\n        }\r\n      });\r\n\r\n      const res = await updateProjectSettingsMutation(formData);\r\n\r\n      if ('data' in res) {\r\n        const updatedMenuLogo = !!res.data.menuLogo && !!body.menuLogo?.rawFile;\r\n        const updatedAuthLogo = !!res.data.authLogo && !!body.authLogo?.rawFile;\r\n\r\n        if (updatedMenuLogo) {\r\n          trackUsage('didChangeLogo', {\r\n            logo: 'menu',\r\n          });\r\n        }\r\n\r\n        if (updatedAuthLogo) {\r\n          trackUsage('didChangeLogo', {\r\n            logo: 'auth',\r\n          });\r\n        }\r\n\r\n        toggleNotification({\r\n          type: 'success',\r\n          message: formatMessage({ id: 'app', defaultMessage: 'Saved' }),\r\n        });\r\n      } else {\r\n        toggleNotification({\r\n          type: 'danger',\r\n          message: formatAPIError(res.error),\r\n        });\r\n      }\r\n    },\r\n    [formatAPIError, formatMessage, toggleNotification, trackUsage, updateProjectSettingsMutation]\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Page.Loading />;\r\n  }\r\n\r\n  return (\r\n    <ConfigurationContextProvider\r\n      showReleaseNotification={showReleaseNotification}\r\n      showTutorials={showTutorials}\r\n      logos={{\r\n        menu: {\r\n          custom: isSuccess\r\n            ? data?.menuLogo\r\n            : {\r\n                url: customMenuLogo ?? '',\r\n              },\r\n          default: defaultMenuLogo,\r\n        },\r\n        auth: {\r\n          custom: isSuccess\r\n            ? data?.authLogo\r\n            : {\r\n                url: customAuthLogo ?? '',\r\n              },\r\n          default: defaultAuthLogo,\r\n        },\r\n      }}\r\n      updateProjectSettings={updateProjectSettings}\r\n    >\r\n      {children}\r\n    </ConfigurationContextProvider>\r\n  );\r\n};\r\n\r\nexport {\r\n  ConfigurationContextProvider as _internalConfigurationContextProvider,\r\n  ConfigurationProvider,\r\n  useConfiguration,\r\n};\r\nexport type {\r\n  ConfigurationProviderProps,\r\n  ConfigurationContextValue,\r\n  ConfigurationLogo,\r\n  UpdateProjectSettingsBody,\r\n};\r\n","import * as React from 'react';\r\n\r\nimport { produce } from 'immer';\r\nimport get from 'lodash/get';\r\nimport set from 'lodash/set';\r\n\r\nconst GUIDED_TOUR_COMPLETED_STEPS = 'GUIDED_TOUR_COMPLETED_STEPS';\r\nconst GUIDED_TOUR_CURRENT_STEP = 'GUIDED_TOUR_CURRENT_STEP';\r\nconst GUIDED_TOUR_SKIPPED = 'GUIDED_TOUR_SKIPPED';\r\n\r\nconst GUIDED_TOUR_KEYS = {\r\n  GUIDED_TOUR_COMPLETED_STEPS,\r\n  GUIDED_TOUR_CURRENT_STEP,\r\n  GUIDED_TOUR_SKIPPED,\r\n} as const;\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * GuidedTourProvider\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\nimport { createContext } from '../Context';\r\n\r\ntype SectionKey = keyof GuidedTourContextValue['guidedTourState'];\r\ntype StepKey = keyof GuidedTourContextValue['guidedTourState'][SectionKey];\r\ntype Step = `${SectionKey}.${StepKey}`;\r\ninterface GuidedTourContextValue {\r\n  currentStep: Step | null;\r\n  guidedTourState: {\r\n    contentTypeBuilder: {\r\n      create: boolean;\r\n      success: boolean;\r\n    };\r\n    contentManager: {\r\n      create: boolean;\r\n      success: boolean;\r\n    };\r\n    apiTokens: {\r\n      create: boolean;\r\n      success: boolean;\r\n    };\r\n  };\r\n  isGuidedTourVisible: boolean;\r\n  isSkipped: boolean;\r\n  setCurrentStep: (step: Step | null) => void | null;\r\n  setGuidedTourVisibility: (isVisible: boolean) => void;\r\n  setSkipped: (isSkipped: boolean) => void;\r\n  setStepState: (step: Step, state: boolean) => void;\r\n  startSection: (section: SectionKey) => void;\r\n}\r\n\r\nconst [GuidedTourProviderImpl, useGuidedTour] = createContext<GuidedTourContextValue>('GuidedTour');\r\n\r\ninterface GuidedTourProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst GuidedTourProvider = ({ children }: GuidedTourProviderProps) => {\r\n  const [{ currentStep, guidedTourState, isGuidedTourVisible, isSkipped }, dispatch] =\r\n    React.useReducer(reducer, initialState, initialiseState);\r\n\r\n  const setCurrentStep = (step: SetCurrentStepAction['step']) => {\r\n    // if step is null it is intentional, we need to dispatch it\r\n    if (step !== null) {\r\n      const isStepAlreadyDone = get(guidedTourState, step);\r\n      const [sectionName, stepName] = step.split('.') as [SectionKey, StepKey];\r\n      const sectionArray = Object.entries(guidedTourState[sectionName]);\r\n\r\n      const currentStepIndex = sectionArray.findIndex(([key]) => key === stepName);\r\n      const previousSteps = sectionArray.slice(0, currentStepIndex);\r\n\r\n      const isStepToShow = previousSteps.every(([, sectionValue]) => sectionValue);\r\n\r\n      if (isStepAlreadyDone || isSkipped || !isStepToShow) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    window.localStorage.setItem(GUIDED_TOUR_CURRENT_STEP, JSON.stringify(null));\r\n\r\n    return dispatch({\r\n      type: 'SET_CURRENT_STEP',\r\n      step,\r\n    });\r\n  };\r\n\r\n  const setGuidedTourVisibility = (value: SetGuidedTourVisibilityAction['value']) => {\r\n    dispatch({\r\n      type: 'SET_GUIDED_TOUR_VISIBILITY',\r\n      value,\r\n    });\r\n  };\r\n\r\n  const setStepState = (currentStep: Step, value: SetStepStateAction['value']) => {\r\n    addCompletedStep(currentStep);\r\n\r\n    dispatch({\r\n      type: 'SET_STEP_STATE',\r\n      currentStep,\r\n      value,\r\n    });\r\n  };\r\n\r\n  const startSection = (sectionName: SectionKey) => {\r\n    const sectionSteps = guidedTourState[sectionName];\r\n\r\n    if (sectionSteps) {\r\n      const guidedTourArray = Object.entries(guidedTourState);\r\n\r\n      // Find current section position in the guidedTourArray\r\n      // Get only previous sections based on current section position\r\n      const currentSectionIndex = guidedTourArray.findIndex(([key]) => key === sectionName);\r\n      const previousSections = guidedTourArray.slice(0, currentSectionIndex);\r\n\r\n      // Check if every steps from previous section are done\r\n      const isSectionToShow = previousSections.every(([, sectionValue]) =>\r\n        Object.values(sectionValue).every(Boolean)\r\n      );\r\n\r\n      const [firstStep] = Object.keys(sectionSteps) as [StepKey];\r\n      const isFirstStepDone = sectionSteps[firstStep];\r\n\r\n      if (isSectionToShow && !currentStep && !isFirstStepDone) {\r\n        setCurrentStep(`${sectionName}.${firstStep}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const setSkipped = (value: SetSkippedAction['value']) => {\r\n    window.localStorage.setItem(GUIDED_TOUR_SKIPPED, JSON.stringify(value));\r\n\r\n    dispatch({\r\n      type: 'SET_SKIPPED',\r\n      value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GuidedTourProviderImpl\r\n      guidedTourState={guidedTourState}\r\n      currentStep={currentStep}\r\n      setCurrentStep={setCurrentStep}\r\n      setGuidedTourVisibility={setGuidedTourVisibility}\r\n      setSkipped={setSkipped}\r\n      setStepState={setStepState}\r\n      startSection={startSection}\r\n      isGuidedTourVisible={isGuidedTourVisible}\r\n      isSkipped={isSkipped}\r\n    >\r\n      {children}\r\n    </GuidedTourProviderImpl>\r\n  );\r\n};\r\n\r\ntype State = Pick<\r\n  GuidedTourContextValue,\r\n  'guidedTourState' | 'currentStep' | 'isGuidedTourVisible' | 'isSkipped'\r\n>;\r\n\r\nconst initialState = {\r\n  currentStep: null,\r\n  guidedTourState: {\r\n    contentTypeBuilder: {\r\n      create: false,\r\n      success: false,\r\n    },\r\n    contentManager: {\r\n      create: false,\r\n      success: false,\r\n    },\r\n    apiTokens: {\r\n      create: false,\r\n      success: false,\r\n    },\r\n  },\r\n  isGuidedTourVisible: false,\r\n  isSkipped: false,\r\n} satisfies State;\r\n\r\ninterface SetCurrentStepAction {\r\n  type: 'SET_CURRENT_STEP';\r\n  step: Step | null;\r\n}\r\n\r\ninterface SetStepStateAction {\r\n  type: 'SET_STEP_STATE';\r\n  currentStep: Step;\r\n  value: boolean;\r\n}\r\n\r\ninterface SetSkippedAction {\r\n  type: 'SET_SKIPPED';\r\n  value: boolean;\r\n}\r\n\r\ninterface SetGuidedTourVisibilityAction {\r\n  type: 'SET_GUIDED_TOUR_VISIBILITY';\r\n  value: boolean;\r\n}\r\n\r\ntype Action =\r\n  | SetCurrentStepAction\r\n  | SetStepStateAction\r\n  | SetSkippedAction\r\n  | SetGuidedTourVisibilityAction;\r\n\r\nconst reducer: React.Reducer<State, Action> = (state: State = initialState, action: Action) =>\r\n  produce(state, (draftState) => {\r\n    switch (action.type) {\r\n      case 'SET_CURRENT_STEP': {\r\n        draftState.currentStep = action.step;\r\n        break;\r\n      }\r\n      case 'SET_STEP_STATE': {\r\n        const [section, step] = action.currentStep.split('.') as [SectionKey, StepKey];\r\n        draftState.guidedTourState[section][step] = action.value;\r\n        break;\r\n      }\r\n      case 'SET_SKIPPED': {\r\n        draftState.isSkipped = action.value;\r\n        break;\r\n      }\r\n      case 'SET_GUIDED_TOUR_VISIBILITY': {\r\n        draftState.isGuidedTourVisible = action.value;\r\n        break;\r\n      }\r\n      default: {\r\n        return draftState;\r\n      }\r\n    }\r\n  });\r\n\r\nconst initialiseState = (initialState: State) => {\r\n  const copyInitialState = { ...initialState };\r\n  const guidedTourLocaleStorage = JSON.parse(\r\n    window.localStorage.getItem(GUIDED_TOUR_COMPLETED_STEPS) ?? '[]'\r\n  );\r\n  const currentStepLocaleStorage = JSON.parse(\r\n    window.localStorage.getItem(GUIDED_TOUR_CURRENT_STEP) ?? 'null'\r\n  );\r\n  const skippedLocaleStorage = JSON.parse(\r\n    window.localStorage.getItem(GUIDED_TOUR_SKIPPED) ?? 'null'\r\n  );\r\n\r\n  if (Array.isArray(guidedTourLocaleStorage)) {\r\n    guidedTourLocaleStorage.forEach((step) => {\r\n      const [sectionName, stepName] = step.split('.');\r\n      set(copyInitialState, ['guidedTourState', sectionName, stepName], true);\r\n    });\r\n  }\r\n\r\n  // if current step when initializing mark it as done\r\n  if (currentStepLocaleStorage) {\r\n    const [sectionName, stepName] = currentStepLocaleStorage.split('.') as [SectionKey, StepKey];\r\n    set(copyInitialState, ['guidedTourState', sectionName, stepName], true);\r\n\r\n    addCompletedStep(currentStepLocaleStorage as Step);\r\n\r\n    window.localStorage.setItem(GUIDED_TOUR_CURRENT_STEP, JSON.stringify(null));\r\n  }\r\n\r\n  if (skippedLocaleStorage !== null) {\r\n    set(copyInitialState, 'isSkipped', skippedLocaleStorage);\r\n  }\r\n\r\n  return copyInitialState;\r\n};\r\n\r\n/**\r\n * @description Add a completed step to the local storage if it does not already exist.\r\n */\r\nconst addCompletedStep = (completedStep: Step) => {\r\n  const currentSteps = JSON.parse(window.localStorage.getItem(GUIDED_TOUR_COMPLETED_STEPS) ?? '[]');\r\n\r\n  if (!Array.isArray(currentSteps)) {\r\n    return;\r\n  }\r\n\r\n  const isAlreadyStored = currentSteps.includes(completedStep);\r\n\r\n  if (isAlreadyStored) {\r\n    return;\r\n  }\r\n\r\n  window.localStorage.setItem(\r\n    GUIDED_TOUR_COMPLETED_STEPS,\r\n    JSON.stringify([...currentSteps, completedStep])\r\n  );\r\n};\r\n\r\nexport { GuidedTourProvider, useGuidedTour, GuidedTourContextValue, GUIDED_TOUR_KEYS };\r\n","import * as React from 'react';\r\n\r\nimport defaultsDeep from 'lodash/defaultsDeep';\r\nimport { IntlProvider } from 'react-intl';\r\n\r\nimport { useTypedSelector } from '../core/store/hooks';\r\n\r\n/* -------------------------------------------------------------------------------------------------\r\n * LanguageProvider\r\n * -----------------------------------------------------------------------------------------------*/\r\n\r\ninterface LanguageProviderProps {\r\n  children: React.ReactNode;\r\n  messages: Record<string, Record<string, string>>;\r\n}\r\n\r\nconst LanguageProvider = ({ children, messages }: LanguageProviderProps) => {\r\n  const locale = useTypedSelector((state) => state.admin_app.language.locale);\r\n  const appMessages = defaultsDeep(messages[locale], messages.en);\r\n\r\n  return (\r\n    <IntlProvider locale={locale} defaultLocale=\"en\" messages={appMessages} textComponent=\"span\">\r\n      {children}\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nexport { LanguageProvider };\r\nexport type { LanguageProviderProps };\r\n","import * as React from 'react';\r\n\r\nimport { DesignSystemProvider } from '@strapi/design-system';\r\nimport { useIntl } from 'react-intl';\r\nimport { useDispatch } from 'react-redux';\r\nimport { DefaultTheme, createGlobalStyle } from 'styled-components';\r\n\r\nimport { useTypedSelector } from '../core/store/hooks';\r\nimport { setAvailableThemes } from '../reducer';\r\n\r\ninterface ThemeProps {\r\n  children: React.ReactNode;\r\n  themes: {\r\n    dark: DefaultTheme;\r\n    light: DefaultTheme;\r\n  };\r\n}\r\n\r\nconst Theme = ({ children, themes }: ThemeProps) => {\r\n  const { currentTheme } = useTypedSelector((state) => state.admin_app.theme);\r\n  const [systemTheme, setSystemTheme] = React.useState<'light' | 'dark'>();\r\n  const { locale } = useIntl();\r\n  const dispatch = useDispatch();\r\n\r\n  // Listen to changes in the system theme\r\n  React.useEffect(() => {\r\n    const themeWatcher = window.matchMedia('(prefers-color-scheme: dark)');\r\n    setSystemTheme(themeWatcher.matches ? 'dark' : 'light');\r\n\r\n    const listener = (event: MediaQueryListEvent) => {\r\n      setSystemTheme(event.matches ? 'dark' : 'light');\r\n    };\r\n    themeWatcher.addEventListener('change', listener);\r\n\r\n    // Remove listener on cleanup\r\n    return () => {\r\n      themeWatcher.removeEventListener('change', listener);\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setAvailableThemes(Object.keys(themes)));\r\n  }, [dispatch, themes]);\r\n\r\n  const computedThemeName = currentTheme === 'system' ? systemTheme : currentTheme;\r\n\r\n  return (\r\n    <DesignSystemProvider\r\n      locale={locale}\r\n      /**\r\n       * TODO: could we make this neater i.e. by setting up the context to throw\r\n       * if it can't find it, that way the type is always fully defined and we're\r\n       * not checking it all the time...\r\n       */\r\n      theme={themes?.[computedThemeName || 'light']}\r\n    >\r\n      {children}\r\n      <GlobalStyle />\r\n    </DesignSystemProvider>\r\n  );\r\n};\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background: ${({ theme }) => theme.colors.neutral100};\r\n  }\r\n`;\r\n\r\nexport { Theme };\r\nexport type { ThemeProps };\r\n"],"names":["permissions","STORAGE_KEYS","reducer","logoutAction","loginAction","login","token","logout","Error","createContext","currentStep","initialState"],"mappings":"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"}