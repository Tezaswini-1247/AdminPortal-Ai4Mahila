{"version":3,"file":"registries.mjs","sources":["../../src/providers/registries.ts"],"sourcesContent":["import { hooks } from '@strapi/utils';\r\n\r\nimport { defineProvider } from './provider';\r\nimport * as registries from '../registries';\r\nimport { loadApplicationContext } from '../loaders';\r\nimport * as syncMigrations from '../migrations';\r\nimport { discardDocumentDrafts } from '../migrations/database/5.0.0-discard-drafts';\r\n\r\nexport default defineProvider({\r\n  init(strapi) {\r\n    strapi\r\n      .add('content-types', () => registries.contentTypes())\r\n      .add('components', () => registries.components())\r\n      .add('services', () => registries.services(strapi))\r\n      .add('policies', () => registries.policies())\r\n      .add('middlewares', () => registries.middlewares())\r\n      .add('hooks', () => registries.hooks())\r\n      .add('controllers', () => registries.controllers(strapi))\r\n      .add('modules', () => registries.modules(strapi))\r\n      .add('plugins', () => registries.plugins(strapi))\r\n      .add('custom-fields', () => registries.customFields(strapi))\r\n      .add('apis', () => registries.apis(strapi))\r\n      .add('models', () => registries.models())\r\n      .add('sanitizers', registries.sanitizers())\r\n      .add('validators', registries.validators());\r\n  },\r\n  async register(strapi) {\r\n    await loadApplicationContext(strapi);\r\n\r\n    strapi.get('hooks').set('strapi::content-types.beforeSync', hooks.createAsyncParallelHook());\r\n    strapi.get('hooks').set('strapi::content-types.afterSync', hooks.createAsyncParallelHook());\r\n\r\n    // Content migration to enable draft and publish\r\n    strapi.hook('strapi::content-types.beforeSync').register(syncMigrations.disable);\r\n    strapi.hook('strapi::content-types.afterSync').register(syncMigrations.enable);\r\n\r\n    // Database migrations\r\n    strapi.db.migrations.providers.internal.register(discardDocumentDrafts);\r\n  },\r\n});\r\n"],"names":["registries.contentTypes","registries.components","registries.services","registries.policies","registries.middlewares","registries.hooks","registries.controllers","registries.modules","registries.plugins","registries.customFields","registries.apis","registries.models","registries.sanitizers","registries.validators","syncMigrations.disable","syncMigrations.enable"],"mappings":";;;;;;;;;;;;;;;;;;;AAQA,MAAA,aAAe,eAAe;AAAA,EAC5B,KAAK,QAAQ;AAER,WAAA,IAAI,iBAAiB,MAAMA,qBAAyB,CAAA,EACpD,IAAI,cAAc,MAAMC,mBAAuB,CAAA,EAC/C,IAAI,YAAY,MAAMC,iBAAoB,MAAM,CAAC,EACjD,IAAI,YAAY,MAAMC,iBAAqB,CAAA,EAC3C,IAAI,eAAe,MAAMC,oBAAuB,CAAC,EACjD,IAAI,SAAS,MAAMC,eAAkB,EACrC,IAAI,eAAe,MAAMC,oBAAuB,MAAM,CAAC,EACvD,IAAI,WAAW,MAAMC,gBAAmB,MAAM,CAAC,EAC/C,IAAI,WAAW,MAAMC,gBAAmB,MAAM,CAAC,EAC/C,IAAI,iBAAiB,MAAMC,qBAAwB,MAAM,CAAC,EAC1D,IAAI,QAAQ,MAAMC,aAAgB,MAAM,CAAC,EACzC,IAAI,UAAU,MAAMC,SAAkB,CAAC,EACvC,IAAI,cAAcC,mBAAuB,CAAA,EACzC,IAAI,cAAcC,oBAAuB;AAAA,EAC9C;AAAA,EACA,MAAM,SAAS,QAAQ;AACrB,UAAM,uBAAuB,MAAM;AAEnC,WAAO,IAAI,OAAO,EAAE,IAAI,oCAAoC,MAAM,yBAAyB;AAC3F,WAAO,IAAI,OAAO,EAAE,IAAI,mCAAmC,MAAM,yBAAyB;AAG1F,WAAO,KAAK,kCAAkC,EAAE,SAASC,OAAsB;AAC/E,WAAO,KAAK,iCAAiC,EAAE,SAASC,MAAqB;AAG7E,WAAO,GAAG,WAAW,UAAU,SAAS,SAAS,qBAAqB;AAAA,EAAA;AAE1E,CAAC;"}