{"version":3,"file":"policies.js","sources":["../../src/loaders/policies.ts"],"sourcesContent":["import { join, extname, basename } from 'path';\r\nimport fse from 'fs-extra';\r\nimport { importDefault } from '@strapi/utils';\r\n\r\nimport type { Core } from '@strapi/types';\r\n\r\n// TODO:: allow folders with index.js inside for bigger policies\r\nexport default async function loadPolicies(strapi: Core.Strapi) {\r\n  const dir = strapi.dirs.dist.policies;\r\n\r\n  if (!(await fse.pathExists(dir))) {\r\n    return;\r\n  }\r\n\r\n  const policies: Record<string, Core.Policy> = {};\r\n  const paths = await fse.readdir(dir, { withFileTypes: true });\r\n\r\n  for (const fd of paths) {\r\n    const { name } = fd;\r\n    const fullPath = join(dir, name);\r\n\r\n    if (fd.isFile() && extname(name) === '.js') {\r\n      const key = basename(name, '.js');\r\n      policies[key] = importDefault(fullPath);\r\n    }\r\n  }\r\n\r\n  strapi.get('policies').add(`global::`, policies);\r\n}\r\n"],"names":["fse","join","extname","basename","importDefault"],"mappings":";;;;;;AAOA,eAA8B,aAAa,QAAqB;AACxD,QAAA,MAAM,OAAO,KAAK,KAAK;AAE7B,MAAI,CAAE,MAAMA,aAAAA,QAAI,WAAW,GAAG,GAAI;AAChC;AAAA,EAAA;AAGF,QAAM,WAAwC,CAAC;AACzC,QAAA,QAAQ,MAAMA,qBAAI,QAAQ,KAAK,EAAE,eAAe,MAAM;AAE5D,aAAW,MAAM,OAAO;AAChB,UAAA,EAAE,SAAS;AACX,UAAA,WAAWC,KAAAA,KAAK,KAAK,IAAI;AAE/B,QAAI,GAAG,OAAO,KAAKC,KAAQ,QAAA,IAAI,MAAM,OAAO;AACpC,YAAA,MAAMC,KAAAA,SAAS,MAAM,KAAK;AACvB,eAAA,GAAG,IAAIC,YAAA,cAAc,QAAQ;AAAA,IAAA;AAAA,EACxC;AAGF,SAAO,IAAI,UAAU,EAAE,IAAI,YAAY,QAAQ;AACjD;;"}