{"version":3,"file":"condition.mjs","sources":["../../../../../src/services/content-api/permissions/providers/condition.ts"],"sourcesContent":["import { providerFactory } from '@strapi/utils';\r\n\r\nexport interface Condition {\r\n  name: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\nexport default (options = {}) => {\r\n  const provider = providerFactory(options);\r\n\r\n  return {\r\n    ...provider,\r\n\r\n    async register(condition: Condition) {\r\n      if (strapi.isLoaded) {\r\n        throw new Error(`You can't register new conditions outside the bootstrap function.`);\r\n      }\r\n\r\n      return provider.register(condition.name, condition);\r\n    },\r\n  };\r\n};\r\n"],"names":[],"mappings":";AAOA,MAAA,0BAAe,CAAC,UAAU,CAAA,MAAO;AACzB,QAAA,WAAW,gBAAgB,OAAO;AAEjC,SAAA;AAAA,IACL,GAAG;AAAA,IAEH,MAAM,SAAS,WAAsB;AACnC,UAAI,OAAO,UAAU;AACb,cAAA,IAAI,MAAM,mEAAmE;AAAA,MAAA;AAGrF,aAAO,SAAS,SAAS,UAAU,MAAM,SAAS;AAAA,IAAA;AAAA,EAEtD;AACF;"}