{"version":3,"file":"features.mjs","sources":["../../src/services/features.ts"],"sourcesContent":["/**\r\n * The features service is responsible for managing features within strapi,\r\n * including interacting with the feature configuration file to know\r\n * which are enabled and disabled.\r\n */\r\n\r\nimport type { Core, Modules } from '@strapi/types';\r\n\r\ntype FeatureName = keyof Modules.Features.FeaturesConfig['future'];\r\n\r\nconst createFeaturesService = (strapi: Core.Strapi): Modules.Features.FeaturesService => {\r\n  const service: Modules.Features.FeaturesService = {\r\n    get config() {\r\n      return strapi.config.get<Modules.Features.FeaturesService['config']>('features');\r\n    },\r\n    future: {\r\n      isEnabled(futureFlagName: string): boolean {\r\n        return service.config?.future?.[futureFlagName as FeatureName] === true;\r\n      },\r\n    },\r\n  };\r\n\r\n  return service;\r\n};\r\n\r\nexport { createFeaturesService };\r\nexport type FeaturesService = Modules.Features.FeaturesService;\r\n"],"names":[],"mappings":"AAUM,MAAA,wBAAwB,CAAC,WAA0D;AACvF,QAAM,UAA4C;AAAA,IAChD,IAAI,SAAS;AACJ,aAAA,OAAO,OAAO,IAAgD,UAAU;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACN,UAAU,gBAAiC;AACzC,eAAO,QAAQ,QAAQ,SAAS,cAA6B,MAAM;AAAA,MAAA;AAAA,IACrE;AAAA,EAEJ;AAEO,SAAA;AACT;"}