{"version":3,"file":"fields.mjs","sources":["../../../../src/services/document-service/transform/fields.ts"],"sourcesContent":["import type { Modules, UID } from '@strapi/types';\r\n\r\ntype Fields = Modules.Documents.Params.Pick<UID.Schema, 'fields'>['fields'];\r\n\r\nexport const transformFields = (fields: Fields): Fields => {\r\n  // If  it's a string, and it doesn't contain documentId, should be an array\r\n  if (typeof fields === 'string') {\r\n    // '*' => '*'\r\n    if (fields === '*') {\r\n      return fields;\r\n    }\r\n\r\n    // '' => 'documentId'\r\n    if (fields === '') {\r\n      return 'documentId';\r\n    }\r\n\r\n    // 'name,description' => 'name,description,documentId'\r\n    if (!fields.split(',').includes('documentId')) {\r\n      return `${fields},documentId`;\r\n    }\r\n  }\r\n\r\n  // It's not an array, ignore it\r\n  if (!fields || !Array.isArray(fields)) {\r\n    // If fields is empty, return it as is\r\n    return fields;\r\n  }\r\n\r\n  // Ensure we are always selecting the documentId\r\n  // ['name', 'description'] => ['name', 'description', 'documentId']\r\n  if (!fields.includes('documentId')) {\r\n    fields.push('documentId');\r\n  }\r\n\r\n  return fields;\r\n};\r\n"],"names":[],"mappings":"AAIa,MAAA,kBAAkB,CAAC,WAA2B;AAErD,MAAA,OAAO,WAAW,UAAU;AAE9B,QAAI,WAAW,KAAK;AACX,aAAA;AAAA,IAAA;AAIT,QAAI,WAAW,IAAI;AACV,aAAA;AAAA,IAAA;AAIT,QAAI,CAAC,OAAO,MAAM,GAAG,EAAE,SAAS,YAAY,GAAG;AAC7C,aAAO,GAAG,MAAM;AAAA,IAAA;AAAA,EAClB;AAIF,MAAI,CAAC,UAAU,CAAC,MAAM,QAAQ,MAAM,GAAG;AAE9B,WAAA;AAAA,EAAA;AAKT,MAAI,CAAC,OAAO,SAAS,YAAY,GAAG;AAClC,WAAO,KAAK,YAAY;AAAA,EAAA;AAGnB,SAAA;AACT;"}