{"version":3,"file":"dp.js","sources":["../../../../../../src/services/document-service/transform/relations/utils/dp.ts"],"sourcesContent":["import { isNil } from 'lodash/fp';\r\n\r\nimport { contentTypes } from '@strapi/utils';\r\nimport { UID } from '@strapi/types';\r\n\r\nimport { LongHandDocument } from './types';\r\n\r\ntype Status = 'draft' | 'published';\r\n\r\nexport const getRelationTargetStatus = (\r\n  relation: Pick<LongHandDocument, 'documentId' | 'status'>,\r\n  opts: {\r\n    targetUid: UID.Schema;\r\n    sourceUid: UID.Schema;\r\n    sourceStatus?: Status;\r\n  }\r\n): Status[] => {\r\n  // Ignore if the target content type does not have draft and publish enabled\r\n  const targetContentType = strapi.getModel(opts.targetUid);\r\n  const sourceContentType = strapi.getModel(opts.sourceUid);\r\n\r\n  const targetHasDP = contentTypes.hasDraftAndPublish(targetContentType);\r\n  const sourceHasDP = contentTypes.hasDraftAndPublish(sourceContentType);\r\n\r\n  if (!targetHasDP) {\r\n    return ['published'];\r\n  }\r\n\r\n  /**\r\n   * If both source and target have DP enabled,\r\n   * connect it to the same status as the source status\r\n   */\r\n  if (sourceHasDP && !isNil(opts.sourceStatus)) {\r\n    return [opts.sourceStatus];\r\n  }\r\n\r\n  /**\r\n   * Use the status from the relation if it's set\r\n   */\r\n  if (relation.status) {\r\n    switch (relation.status) {\r\n      case 'published':\r\n        return ['published'];\r\n      default:\r\n        // Default to draft if it's an invalid status (e.g. modified)\r\n        return ['draft'];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * If DP is disabled and relation does not specify any status\r\n   * Connect to both draft and published versions\r\n   */\r\n  if (!sourceHasDP) {\r\n    return ['draft', 'published'];\r\n  }\r\n\r\n  // Default to draft as a fallback\r\n  return ['draft'];\r\n};\r\n"],"names":["contentTypes","isNil"],"mappings":";;;;AASa,MAAA,0BAA0B,CACrC,UACA,SAKa;AAEb,QAAM,oBAAoB,OAAO,SAAS,KAAK,SAAS;AACxD,QAAM,oBAAoB,OAAO,SAAS,KAAK,SAAS;AAElD,QAAA,cAAcA,YAAAA,aAAa,mBAAmB,iBAAiB;AAC/D,QAAA,cAAcA,YAAAA,aAAa,mBAAmB,iBAAiB;AAErE,MAAI,CAAC,aAAa;AAChB,WAAO,CAAC,WAAW;AAAA,EAAA;AAOrB,MAAI,eAAe,CAACC,GAAAA,MAAM,KAAK,YAAY,GAAG;AACrC,WAAA,CAAC,KAAK,YAAY;AAAA,EAAA;AAM3B,MAAI,SAAS,QAAQ;AACnB,YAAQ,SAAS,QAAQ;AAAA,MACvB,KAAK;AACH,eAAO,CAAC,WAAW;AAAA,MACrB;AAEE,eAAO,CAAC,OAAO;AAAA,IAAA;AAAA,EACnB;AAOF,MAAI,CAAC,aAAa;AACT,WAAA,CAAC,SAAS,WAAW;AAAA,EAAA;AAI9B,SAAO,CAAC,OAAO;AACjB;;"}