{"version":3,"file":"worker-queue.js","sources":["../../src/services/worker-queue.ts"],"sourcesContent":["/**\r\n * Simple worker queue in memory\r\n */\r\nimport createDebugger from 'debug';\r\nimport type { Logger } from '@strapi/logger';\r\nimport type { Utils } from '@strapi/types';\r\n\r\nconst debug = createDebugger('strapi:worker-queue');\r\n\r\ninterface ConstructorParameters {\r\n  logger: Logger;\r\n  concurrency?: number;\r\n}\r\n\r\ntype Worker<TPayload, TReturn> = (payload: TPayload) => Promise<TReturn> | TReturn;\r\n\r\nconst noop: Utils.Function.Any = () => {};\r\n\r\nexport default class WorkerQueue<TPayload, TReturn> {\r\n  logger: Logger;\r\n\r\n  worker: Worker<TPayload, TReturn>;\r\n\r\n  concurrency: number;\r\n\r\n  running: number;\r\n\r\n  queue: TPayload[];\r\n\r\n  constructor({ logger, concurrency = 5 }: ConstructorParameters) {\r\n    debug('Initialize worker queue');\r\n\r\n    this.logger = logger;\r\n    this.worker = noop;\r\n\r\n    this.concurrency = concurrency;\r\n    this.running = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  subscribe(worker: Worker<TPayload, TReturn>) {\r\n    debug('Subscribe to worker queue');\r\n    this.worker = worker;\r\n  }\r\n\r\n  enqueue(payload: TPayload) {\r\n    debug('Enqueue event in worker queue');\r\n    if (this.running < this.concurrency) {\r\n      this.running += 1;\r\n      this.execute(payload);\r\n    } else {\r\n      this.queue.unshift(payload);\r\n    }\r\n  }\r\n\r\n  pop() {\r\n    debug('Pop worker queue and execute');\r\n    const payload = this.queue.pop();\r\n\r\n    if (payload) {\r\n      this.execute(payload);\r\n    } else {\r\n      this.running -= 1;\r\n    }\r\n  }\r\n\r\n  async execute(payload: TPayload) {\r\n    debug('Execute worker');\r\n    try {\r\n      await this.worker(payload);\r\n    } catch (error) {\r\n      this.logger.error(error);\r\n    } finally {\r\n      this.pop();\r\n    }\r\n  }\r\n}\r\n"],"names":["createDebugger"],"mappings":";;;;AAOA,MAAM,QAAQA,gCAAe,qBAAqB;AASlD,MAAM,OAA2B,MAAM;AAAC;AAExC,MAAqB,YAA+B;AAAA,EAClD;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA;AAAA,EAEA,YAAY,EAAE,QAAQ,cAAc,KAA4B;AAC9D,UAAM,yBAAyB;AAE/B,SAAK,SAAS;AACd,SAAK,SAAS;AAEd,SAAK,cAAc;AACnB,SAAK,UAAU;AACf,SAAK,QAAQ,CAAC;AAAA,EAAA;AAAA,EAGhB,UAAU,QAAmC;AAC3C,UAAM,2BAA2B;AACjC,SAAK,SAAS;AAAA,EAAA;AAAA,EAGhB,QAAQ,SAAmB;AACzB,UAAM,+BAA+B;AACjC,QAAA,KAAK,UAAU,KAAK,aAAa;AACnC,WAAK,WAAW;AAChB,WAAK,QAAQ,OAAO;AAAA,IAAA,OACf;AACA,WAAA,MAAM,QAAQ,OAAO;AAAA,IAAA;AAAA,EAC5B;AAAA,EAGF,MAAM;AACJ,UAAM,8BAA8B;AAC9B,UAAA,UAAU,KAAK,MAAM,IAAI;AAE/B,QAAI,SAAS;AACX,WAAK,QAAQ,OAAO;AAAA,IAAA,OACf;AACL,WAAK,WAAW;AAAA,IAAA;AAAA,EAClB;AAAA,EAGF,MAAM,QAAQ,SAAmB;AAC/B,UAAM,gBAAgB;AAClB,QAAA;AACI,YAAA,KAAK,OAAO,OAAO;AAAA,aAClB,OAAO;AACT,WAAA,OAAO,MAAM,KAAK;AAAA,IAAA,UACvB;AACA,WAAK,IAAI;AAAA,IAAA;AAAA,EACX;AAEJ;;"}