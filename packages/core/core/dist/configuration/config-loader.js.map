{"version":3,"file":"config-loader.js","sources":["../../src/configuration/config-loader.ts"],"sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport { loadConfigFile } from '../utils/load-config-file';\r\n\r\nconst VALID_EXTENSIONS = ['.js', '.json'];\r\n\r\n// These filenames are restricted, but will also emit a warning that the filename is probably a mistake\r\nconst MISTAKEN_FILENAMES = {\r\n  middleware: 'middlewares',\r\n  plugin: 'plugins',\r\n};\r\n\r\n// the following are restricted to prevent conflicts with existing STRAPI_* env vars or root level config options\r\n// must all be lowercase to match validator\r\nconst RESTRICTED_FILENAMES = [\r\n  // existing env vars\r\n  'uuid',\r\n  'hosting',\r\n  'license',\r\n  'enforce',\r\n  'disable',\r\n  'enable',\r\n  'telemetry',\r\n\r\n  // reserved for future internal use\r\n  'strapi',\r\n  'internal',\r\n\r\n  // root level config options\r\n  // TODO: it would be better to move these out of the root config and allow them to be loaded\r\n  'launchedAt',\r\n  'serveAdminPanel',\r\n  'autoReload',\r\n  'environment',\r\n  'packageJsonStrapi',\r\n  'info',\r\n  'autoReload',\r\n  'dirs',\r\n\r\n  // probably mistaken/typo filenames\r\n  ...Object.keys(MISTAKEN_FILENAMES),\r\n];\r\n\r\n// Existing Strapi configuration files\r\nconst STRAPI_CONFIG_FILENAMES = [\r\n  'admin',\r\n  'server',\r\n  'api',\r\n  'database',\r\n  'middlewares',\r\n  'plugins',\r\n  'features',\r\n];\r\n\r\n// Note: we don't have access to strapi logger at this point so we can't use it\r\nconst logWarning = (message: string) => {\r\n  console.warn(message);\r\n};\r\n\r\nexport default (dir: string) => {\r\n  if (!fs.existsSync(dir)) return {};\r\n\r\n  const allFiles = fs.readdirSync(dir, { withFileTypes: true });\r\n  const seenFilenames = new Set<string>();\r\n  const configFiles = allFiles.reduce((acc, file) => {\r\n    const baseName = path.basename(file.name, path.extname(file.name));\r\n    const baseNameLower = baseName.toLowerCase();\r\n    const extension = path.extname(file.name);\r\n    const extensionLower = extension.toLowerCase();\r\n\r\n    if (!file.isFile()) {\r\n      return acc;\r\n    }\r\n\r\n    if (!VALID_EXTENSIONS.includes(extensionLower)) {\r\n      logWarning(\r\n        `Config file not loaded, extension must be one of ${VALID_EXTENSIONS.join(',')}): ${\r\n          file.name\r\n        }`\r\n      );\r\n      return acc;\r\n    }\r\n\r\n    if (RESTRICTED_FILENAMES.includes(baseNameLower)) {\r\n      logWarning(`Config file not loaded, restricted filename: ${file.name}`);\r\n\r\n      // suggest the filename they probably meant\r\n      if (baseNameLower in MISTAKEN_FILENAMES) {\r\n        console.log(\r\n          `Did you mean ${MISTAKEN_FILENAMES[baseNameLower as keyof typeof MISTAKEN_FILENAMES]}]} ?`\r\n        );\r\n      }\r\n\r\n      return acc;\r\n    }\r\n\r\n    // restricted names and Strapi configs are also restricted from being prefixes\r\n    const restrictedPrefix = [...RESTRICTED_FILENAMES, ...STRAPI_CONFIG_FILENAMES].find(\r\n      (restrictedName) =>\r\n        restrictedName.startsWith(baseNameLower) && restrictedName !== baseNameLower\r\n    );\r\n    if (restrictedPrefix) {\r\n      logWarning(\r\n        `Config file not loaded, filename cannot start with ${restrictedPrefix}: ${file.name}`\r\n      );\r\n    }\r\n\r\n    /**\r\n     *  Note: If user config files contain non-alpha-numeric characters, we won't be able to auto-load env\r\n     * into them.\r\n     *\r\n     * For the initial feature, we will only load our internal configs, but later when we provide a method\r\n     * to define the shape of custom configs, we will need to warn that those filenames can't be loaded\r\n     * for technical limitations on env variable names\r\n     *  */\r\n    // if (!/^[A-Za-z0-9]+$/.test(baseName)) {\r\n    //   logWarning(\"Using a non-alphanumeric config file name prevents Strapi from auto-loading it from environment variables.\")\r\n    // }\r\n\r\n    // filter filenames without case-insensitive uniqueness\r\n    if (seenFilenames.has(baseNameLower)) {\r\n      logWarning(\r\n        `Config file not loaded, case-insensitive name matches other config file: ${file.name}`\r\n      );\r\n      return acc;\r\n    }\r\n    seenFilenames.add(baseNameLower);\r\n\r\n    // If file passes all filters, add it to the accumulator\r\n    acc.push(file);\r\n    return acc;\r\n  }, [] as fs.Dirent[]);\r\n\r\n  return configFiles.reduce(\r\n    (acc, file) => {\r\n      const key = path.basename(file.name, path.extname(file.name));\r\n\r\n      acc[key] = loadConfigFile(path.resolve(dir, file.name));\r\n\r\n      return acc;\r\n    },\r\n    {} as Record<string, unknown>\r\n  );\r\n};\r\n"],"names":["fs","path","loadConfigFile"],"mappings":";;;;;;;AAIA,MAAM,mBAAmB,CAAC,OAAO,OAAO;AAGxC,MAAM,qBAAqB;AAAA,EACzB,YAAY;AAAA,EACZ,QAAQ;AACV;AAIA,MAAM,uBAAuB;AAAA;AAAA,EAE3B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA;AAAA,EACA;AAAA;AAAA;AAAA,EAIA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA;AAAA,EAGA,GAAG,OAAO,KAAK,kBAAkB;AACnC;AAGA,MAAM,0BAA0B;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAGA,MAAM,aAAa,CAAC,YAAoB;AACtC,UAAQ,KAAK,OAAO;AACtB;AAEA,MAAe,gBAAA,CAAC,QAAgB;AAC9B,MAAI,CAACA,YAAAA,QAAG,WAAW,GAAG,UAAU,CAAC;AAEjC,QAAM,WAAWA,YAAAA,QAAG,YAAY,KAAK,EAAE,eAAe,MAAM;AACtD,QAAA,oCAAoB,IAAY;AACtC,QAAM,cAAc,SAAS,OAAO,CAAC,KAAK,SAAS;AAC3C,UAAA,WAAWC,sBAAK,SAAS,KAAK,MAAMA,cAAAA,QAAK,QAAQ,KAAK,IAAI,CAAC;AAC3D,UAAA,gBAAgB,SAAS,YAAY;AAC3C,UAAM,YAAYA,cAAA,QAAK,QAAQ,KAAK,IAAI;AAClC,UAAA,iBAAiB,UAAU,YAAY;AAEzC,QAAA,CAAC,KAAK,UAAU;AACX,aAAA;AAAA,IAAA;AAGT,QAAI,CAAC,iBAAiB,SAAS,cAAc,GAAG;AAC9C;AAAA,QACE,oDAAoD,iBAAiB,KAAK,GAAG,CAAC,MAC5E,KAAK,IACP;AAAA,MACF;AACO,aAAA;AAAA,IAAA;AAGL,QAAA,qBAAqB,SAAS,aAAa,GAAG;AACrC,iBAAA,gDAAgD,KAAK,IAAI,EAAE;AAGtE,UAAI,iBAAiB,oBAAoB;AAC/B,gBAAA;AAAA,UACN,gBAAgB,mBAAmB,aAAgD,CAAC;AAAA,QACtF;AAAA,MAAA;AAGK,aAAA;AAAA,IAAA;AAIT,UAAM,mBAAmB,CAAC,GAAG,sBAAsB,GAAG,uBAAuB,EAAE;AAAA,MAC7E,CAAC,mBACC,eAAe,WAAW,aAAa,KAAK,mBAAmB;AAAA,IACnE;AACA,QAAI,kBAAkB;AACpB;AAAA,QACE,sDAAsD,gBAAgB,KAAK,KAAK,IAAI;AAAA,MACtF;AAAA,IAAA;AAgBE,QAAA,cAAc,IAAI,aAAa,GAAG;AACpC;AAAA,QACE,4EAA4E,KAAK,IAAI;AAAA,MACvF;AACO,aAAA;AAAA,IAAA;AAET,kBAAc,IAAI,aAAa;AAG/B,QAAI,KAAK,IAAI;AACN,WAAA;AAAA,EACT,GAAG,EAAiB;AAEpB,SAAO,YAAY;AAAA,IACjB,CAAC,KAAK,SAAS;AACP,YAAA,MAAMA,sBAAK,SAAS,KAAK,MAAMA,cAAAA,QAAK,QAAQ,KAAK,IAAI,CAAC;AAExD,UAAA,GAAG,IAAIC,8BAAeD,cAAAA,QAAK,QAAQ,KAAK,KAAK,IAAI,CAAC;AAE/C,aAAA;AAAA,IACT;AAAA,IACA,CAAA;AAAA,EACF;AACF;;"}