{"version":3,"file":"components.mjs","sources":["../../src/registries/components.ts"],"sourcesContent":["import { has } from 'lodash/fp';\r\nimport type { Struct, UID } from '@strapi/types';\r\n\r\nconst componentsRegistry = () => {\r\n  const components: Record<UID.Component, Struct.ComponentSchema> = {};\r\n\r\n  return {\r\n    /**\r\n     * Returns this list of registered components uids\r\n     */\r\n    keys(): UID.Component[] {\r\n      return Object.keys(components) as UID.Component[];\r\n    },\r\n\r\n    /**\r\n     * Returns the instance of a component. Instantiate the component if not already done\r\n     */\r\n    get(uid: UID.Component) {\r\n      return components[uid];\r\n    },\r\n\r\n    /**\r\n     * Returns a map with all the components in a namespace\r\n     */\r\n    getAll() {\r\n      return components;\r\n    },\r\n\r\n    /**\r\n     * Registers a component\r\n     */\r\n    set(uid: UID.Component, component: Struct.ComponentSchema) {\r\n      if (has(uid, components)) {\r\n        throw new Error(`Component ${uid} has already been registered.`);\r\n      }\r\n\r\n      components[uid] = component;\r\n\r\n      return this;\r\n    },\r\n\r\n    /**\r\n     * Registers a map of components for a specific namespace\r\n     */\r\n    add(newComponents: Record<UID.Component, Struct.ComponentSchema>) {\r\n      for (const uid of Object.keys(newComponents) as UID.Component[]) {\r\n        this.set(uid, newComponents[uid]);\r\n      }\r\n    },\r\n  };\r\n};\r\n\r\nexport default componentsRegistry;\r\n"],"names":[],"mappings":";AAGA,MAAM,qBAAqB,MAAM;AAC/B,QAAM,aAA4D,CAAC;AAE5D,SAAA;AAAA;AAAA;AAAA;AAAA,IAIL,OAAwB;AACf,aAAA,OAAO,KAAK,UAAU;AAAA,IAC/B;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,KAAoB;AACtB,aAAO,WAAW,GAAG;AAAA,IACvB;AAAA;AAAA;AAAA;AAAA,IAKA,SAAS;AACA,aAAA;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,KAAoB,WAAmC;AACrD,UAAA,IAAI,KAAK,UAAU,GAAG;AACxB,cAAM,IAAI,MAAM,aAAa,GAAG,+BAA+B;AAAA,MAAA;AAGjE,iBAAW,GAAG,IAAI;AAEX,aAAA;AAAA,IACT;AAAA;AAAA;AAAA;AAAA,IAKA,IAAI,eAA8D;AAChE,iBAAW,OAAO,OAAO,KAAK,aAAa,GAAsB;AAC/D,aAAK,IAAI,KAAK,cAAc,GAAG,CAAC;AAAA,MAAA;AAAA,IAClC;AAAA,EAEJ;AACF;"}