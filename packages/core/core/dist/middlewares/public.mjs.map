{"version":3,"file":"public.mjs","sources":["../../src/middlewares/public.ts"],"sourcesContent":["import { defaultsDeep } from 'lodash/fp';\r\nimport koaStatic from 'koa-static';\r\nimport type { Core } from '@strapi/types';\r\n\r\ntype Config = koaStatic.Options;\r\n\r\nconst defaults = {\r\n  maxAge: 60000,\r\n};\r\n\r\nexport const publicStatic: Core.MiddlewareFactory = (\r\n  config: Config,\r\n  { strapi }: { strapi: Core.Strapi }\r\n) => {\r\n  const { maxAge } = defaultsDeep(defaults, config);\r\n\r\n  strapi.server.routes([\r\n    {\r\n      method: 'GET',\r\n      path: '/',\r\n      handler(ctx) {\r\n        ctx.redirect(strapi.config.get('admin.url', '/admin'));\r\n      },\r\n      config: { auth: false },\r\n    },\r\n    // All other public GET-routes except /uploads/(.*) which is handled in upload middleware\r\n    {\r\n      method: 'GET',\r\n      path: '/((?!uploads/).+)',\r\n      handler: koaStatic(strapi.dirs.static.public, {\r\n        maxage: maxAge,\r\n        defer: true,\r\n      }),\r\n      config: { auth: false },\r\n    },\r\n  ]);\r\n};\r\n"],"names":[],"mappings":";;AAMA,MAAM,WAAW;AAAA,EACf,QAAQ;AACV;AAEO,MAAM,eAAuC,CAClD,QACA,EAAE,aACC;AACH,QAAM,EAAE,OAAW,IAAA,aAAa,UAAU,MAAM;AAEhD,SAAO,OAAO,OAAO;AAAA,IACnB;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,QAAQ,KAAK;AACX,YAAI,SAAS,OAAO,OAAO,IAAI,aAAa,QAAQ,CAAC;AAAA,MACvD;AAAA,MACA,QAAQ,EAAE,MAAM,MAAM;AAAA,IACxB;AAAA;AAAA,IAEA;AAAA,MACE,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,SAAS,UAAU,OAAO,KAAK,OAAO,QAAQ;AAAA,QAC5C,QAAQ;AAAA,QACR,OAAO;AAAA,MAAA,CACR;AAAA,MACD,QAAQ,EAAE,MAAM,MAAM;AAAA,IAAA;AAAA,EACxB,CACD;AACH;"}