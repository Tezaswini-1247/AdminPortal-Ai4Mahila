{"version":3,"file":"pagination.js","sources":["../../../src/core-api/service/pagination.ts"],"sourcesContent":["import { omit, has, toNumber, isNil } from 'lodash/fp';\r\n\r\nimport { errors, pagination } from '@strapi/utils';\r\n\r\ninterface BasePaginationParams {\r\n  withCount?: boolean | 't' | '1' | 'true' | 'f' | '0' | 'false' | 0 | 1;\r\n}\r\n\r\ntype PagedPagination = BasePaginationParams & {\r\n  page?: number;\r\n  pageSize?: number;\r\n};\r\n\r\ntype OffsetPagination = BasePaginationParams & {\r\n  start?: number;\r\n  limit?: number;\r\n};\r\n\r\nexport type PaginationParams = PagedPagination | OffsetPagination;\r\n\r\ntype PaginationInfo =\r\n  | {\r\n      page: number;\r\n      pageSize: number;\r\n    }\r\n  | {\r\n      start: number;\r\n      limit: number;\r\n    };\r\n\r\n/**\r\n * Default limit values from config\r\n */\r\nconst getLimitConfigDefaults = () => ({\r\n  defaultLimit: toNumber(strapi.config.get('api.rest.defaultLimit', 25)),\r\n  maxLimit: toNumber(strapi.config.get('api.rest.maxLimit')) || null,\r\n});\r\n\r\nconst isOffsetPagination = (pagination?: PaginationParams): pagination is OffsetPagination =>\r\n  has('start', pagination) || has('limit', pagination);\r\n\r\nconst isPagedPagination = (pagination?: PaginationParams): pagination is PagedPagination =>\r\n  has('page', pagination) || has('pageSize', pagination) || !isOffsetPagination(pagination);\r\n\r\nconst shouldCount = (params: { pagination?: PaginationParams }) => {\r\n  if (has('pagination.withCount', params)) {\r\n    const withCount = params.pagination?.withCount;\r\n\r\n    if (typeof withCount === 'boolean') {\r\n      return withCount;\r\n    }\r\n\r\n    if (typeof withCount === 'undefined') {\r\n      return false;\r\n    }\r\n\r\n    if (['true', 't', '1', 1].includes(withCount)) {\r\n      return true;\r\n    }\r\n\r\n    if (['false', 'f', '0', 0].includes(withCount)) {\r\n      return false;\r\n    }\r\n\r\n    throw new errors.ValidationError(\r\n      'Invalid withCount parameter. Expected \"t\",\"1\",\"true\",\"false\",\"0\",\"f\"'\r\n    );\r\n  }\r\n\r\n  return Boolean(strapi.config.get('api.rest.withCount', true));\r\n};\r\n\r\nconst getPaginationInfo = (params: { pagination?: PaginationParams }): PaginationInfo => {\r\n  const { defaultLimit, maxLimit } = getLimitConfigDefaults();\r\n\r\n  const { start, limit } = pagination.withDefaultPagination(params.pagination || {}, {\r\n    defaults: { offset: { limit: defaultLimit }, page: { pageSize: defaultLimit } },\r\n    maxLimit: maxLimit || -1,\r\n  });\r\n\r\n  return { start, limit };\r\n};\r\n\r\nconst transformPaginationResponse = (\r\n  paginationInfo: PaginationInfo,\r\n  total: number | undefined,\r\n  isPaged: boolean\r\n) => {\r\n  const transform = isPaged\r\n    ? pagination.transformPagedPaginationInfo\r\n    : pagination.transformOffsetPaginationInfo;\r\n\r\n  const paginationResponse = transform(paginationInfo, total!);\r\n\r\n  if (isNil(total)) {\r\n    // Ignore total and pageCount if `total` value is not available.\r\n    return omit(['total', 'pageCount'], paginationResponse) as ReturnType<typeof transform>;\r\n  }\r\n\r\n  return paginationResponse;\r\n};\r\n\r\nexport { isPagedPagination, shouldCount, getPaginationInfo, transformPaginationResponse };\r\n"],"names":["toNumber","pagination","has","errors","isNil","omit"],"mappings":";;;;AAiCA,MAAM,yBAAyB,OAAO;AAAA,EACpC,cAAcA,GAAS,SAAA,OAAO,OAAO,IAAI,yBAAyB,EAAE,CAAC;AAAA,EACrE,UAAUA,GAAS,SAAA,OAAO,OAAO,IAAI,mBAAmB,CAAC,KAAK;AAChE;AAEA,MAAM,qBAAqB,CAACC,gBAC1BC,OAAI,SAASD,WAAU,KAAKC,GAAAA,IAAI,SAASD,WAAU;AAErD,MAAM,oBAAoB,CAACA,gBACzBC,GAAA,IAAI,QAAQD,WAAU,KAAKC,GAAA,IAAI,YAAYD,WAAU,KAAK,CAAC,mBAAmBA,WAAU;AAEpF,MAAA,cAAc,CAAC,WAA8C;AAC7D,MAAAC,GAAA,IAAI,wBAAwB,MAAM,GAAG;AACjC,UAAA,YAAY,OAAO,YAAY;AAEjC,QAAA,OAAO,cAAc,WAAW;AAC3B,aAAA;AAAA,IAAA;AAGL,QAAA,OAAO,cAAc,aAAa;AAC7B,aAAA;AAAA,IAAA;AAGL,QAAA,CAAC,QAAQ,KAAK,KAAK,CAAC,EAAE,SAAS,SAAS,GAAG;AACtC,aAAA;AAAA,IAAA;AAGL,QAAA,CAAC,SAAS,KAAK,KAAK,CAAC,EAAE,SAAS,SAAS,GAAG;AACvC,aAAA;AAAA,IAAA;AAGT,UAAM,IAAIC,YAAO,OAAA;AAAA,MACf;AAAA,IACF;AAAA,EAAA;AAGF,SAAO,QAAQ,OAAO,OAAO,IAAI,sBAAsB,IAAI,CAAC;AAC9D;AAEM,MAAA,oBAAoB,CAAC,WAA8D;AACvF,QAAM,EAAE,cAAc,SAAS,IAAI,uBAAuB;AAEpD,QAAA,EAAE,OAAO,UAAUF,YAAAA,WAAW,sBAAsB,OAAO,cAAc,IAAI;AAAA,IACjF,UAAU,EAAE,QAAQ,EAAE,OAAO,aAAa,GAAG,MAAM,EAAE,UAAU,eAAe;AAAA,IAC9E,UAAU,YAAY;AAAA,EAAA,CACvB;AAEM,SAAA,EAAE,OAAO,MAAM;AACxB;AAEA,MAAM,8BAA8B,CAClC,gBACA,OACA,YACG;AACH,QAAM,YAAY,UACdA,YAAW,WAAA,+BACXA,YAAW,WAAA;AAET,QAAA,qBAAqB,UAAU,gBAAgB,KAAM;AAEvD,MAAAG,GAAAA,MAAM,KAAK,GAAG;AAEhB,WAAOC,GAAK,KAAA,CAAC,SAAS,WAAW,GAAG,kBAAkB;AAAA,EAAA;AAGjD,SAAA;AACT;;;;;"}