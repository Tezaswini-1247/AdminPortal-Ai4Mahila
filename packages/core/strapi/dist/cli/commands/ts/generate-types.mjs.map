{"version":3,"file":"generate-types.mjs","sources":["../../../../src/cli/commands/ts/generate-types.ts"],"sourcesContent":["import { createCommand } from 'commander';\r\nimport tsUtils from '@strapi/typescript-utils';\r\nimport { createStrapi, compileStrapi } from '@strapi/core';\r\n\r\nimport type { StrapiCommand } from '../../types';\r\nimport { runAction } from '../../utils/helpers';\r\n\r\ninterface CmdOptions {\r\n  debug?: boolean;\r\n  silent?: boolean;\r\n  verbose?: boolean;\r\n  outDir?: string;\r\n}\r\n\r\nconst action = async ({ debug, silent, verbose, outDir }: CmdOptions) => {\r\n  if ((debug || verbose) && silent) {\r\n    console.error('Flags conflict: both silent and debug mode are enabled, exiting...');\r\n    process.exit(1);\r\n  }\r\n\r\n  const appContext = await compileStrapi({ ignoreDiagnostics: true });\r\n  const app = await createStrapi(appContext).register();\r\n\r\n  await tsUtils.generators.generate({\r\n    strapi: app,\r\n    pwd: appContext.appDir,\r\n    rootDir: outDir ?? undefined,\r\n    logger: {\r\n      silent,\r\n      debug,\r\n    },\r\n    artifacts: { contentTypes: true, components: true },\r\n  });\r\n\r\n  await app.destroy();\r\n};\r\n\r\n/**\r\n * `$ strapi ts:generate-types`\r\n */\r\nconst command: StrapiCommand = () => {\r\n  return createCommand('ts:generate-types')\r\n    .description(`Generate TypeScript typings for your schemas`)\r\n    .option('-d, --debug', `Run the generation with debug messages`, false)\r\n    .option('-s, --silent', `Run the generation silently, without any output`, false)\r\n    .option(\r\n      '-o, --out-dir <outDir>',\r\n      'Specify a relative root directory in which the definitions will be generated. Changing this value might break types exposed by Strapi that relies on generated types.'\r\n    )\r\n    .action(runAction('ts:generate-types', action));\r\n};\r\n\r\nexport { action, command };\r\n"],"names":["tsUtils"],"mappings":";;;;AAcA,MAAM,SAAS,OAAO,EAAE,OAAO,QAAQ,SAAS,aAAyB;AAClE,OAAA,SAAS,YAAY,QAAQ;AAChC,YAAQ,MAAM,oEAAoE;AAClF,YAAQ,KAAK,CAAC;AAAA,EAAA;AAGhB,QAAM,aAAa,MAAM,cAAc,EAAE,mBAAmB,MAAM;AAClE,QAAM,MAAM,MAAM,aAAa,UAAU,EAAE,SAAS;AAE9C,QAAAA,iBAAQ,WAAW,SAAS;AAAA,IAChC,QAAQ;AAAA,IACR,KAAK,WAAW;AAAA,IAChB,SAAS,UAAU;AAAA,IACnB,QAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAAA,IACA,WAAW,EAAE,cAAc,MAAM,YAAY,KAAK;AAAA,EAAA,CACnD;AAED,QAAM,IAAI,QAAQ;AACpB;AAKA,MAAM,UAAyB,MAAM;AACnC,SAAO,cAAc,mBAAmB,EACrC,YAAY,8CAA8C,EAC1D,OAAO,eAAe,0CAA0C,KAAK,EACrE,OAAO,gBAAgB,mDAAmD,KAAK,EAC/E;AAAA,IACC;AAAA,IACA;AAAA,EAED,EAAA,OAAO,UAAU,qBAAqB,MAAM,CAAC;AAClD;"}