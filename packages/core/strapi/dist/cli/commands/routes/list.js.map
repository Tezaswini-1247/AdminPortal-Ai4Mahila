{"version":3,"file":"list.js","sources":["../../../../src/cli/commands/routes/list.ts"],"sourcesContent":["import { createCommand } from 'commander';\r\nimport CLITable from 'cli-table3';\r\nimport chalk from 'chalk';\r\nimport { toUpper } from 'lodash/fp';\r\n\r\nimport { createStrapi, compileStrapi } from '@strapi/core';\r\n\r\nimport type { StrapiCommand } from '../../types';\r\nimport { runAction } from '../../utils/helpers';\r\n\r\nconst action = async () => {\r\n  const appContext = await compileStrapi();\r\n  const app = await createStrapi(appContext).load();\r\n\r\n  const list = app.server.mount().listRoutes();\r\n\r\n  const infoTable = new CLITable({\r\n    head: [chalk.blue('Method'), chalk.blue('Path')],\r\n    colWidths: [20],\r\n  });\r\n\r\n  list\r\n    .filter((route) => route.methods.length)\r\n    .forEach((route) => {\r\n      infoTable.push([route.methods.map(toUpper).join('|'), route.path]);\r\n    });\r\n\r\n  console.log(infoTable.toString());\r\n\r\n  await app.destroy();\r\n};\r\n\r\n/**\r\n * `$ strapi routes:list``\r\n */\r\nconst command: StrapiCommand = () => {\r\n  return createCommand('routes:list')\r\n    .description('List all the application routes')\r\n    .action(runAction('routes:list', action));\r\n};\r\n\r\nexport { action, command };\r\n"],"names":["compileStrapi","createStrapi","CLITable","chalk","toUpper","createCommand","runAction"],"mappings":";;;;;;;;;;;AAUA,MAAM,SAAS,YAAY;AACnB,QAAA,aAAa,MAAMA,mBAAc;AACvC,QAAM,MAAM,MAAMC,KAAAA,aAAa,UAAU,EAAE,KAAK;AAEhD,QAAM,OAAO,IAAI,OAAO,MAAA,EAAQ,WAAW;AAErC,QAAA,YAAY,IAAIC,0BAAS;AAAA,IAC7B,MAAM,CAACC,eAAM,QAAA,KAAK,QAAQ,GAAGA,uBAAM,KAAK,MAAM,CAAC;AAAA,IAC/C,WAAW,CAAC,EAAE;AAAA,EAAA,CACf;AAGE,OAAA,OAAO,CAAC,UAAU,MAAM,QAAQ,MAAM,EACtC,QAAQ,CAAC,UAAU;AAClB,cAAU,KAAK,CAAC,MAAM,QAAQ,IAAIC,UAAO,EAAE,KAAK,GAAG,GAAG,MAAM,IAAI,CAAC;AAAA,EAAA,CAClE;AAEK,UAAA,IAAI,UAAU,UAAU;AAEhC,QAAM,IAAI,QAAQ;AACpB;AAKA,MAAM,UAAyB,MAAM;AAC5B,SAAAC,UAAA,cAAc,aAAa,EAC/B,YAAY,iCAAiC,EAC7C,OAAOC,QAAA,UAAU,eAAe,MAAM,CAAC;AAC5C;;;"}