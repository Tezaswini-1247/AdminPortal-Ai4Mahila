{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import sendgrid, { MailDataRequired } from '@sendgrid/mail';\r\n\r\ninterface Settings {\r\n  defaultFrom: string;\r\n  defaultReplyTo: string;\r\n}\r\n\r\ninterface SendOptions {\r\n  from?: string;\r\n  to: string;\r\n  cc: string;\r\n  bcc: string;\r\n  replyTo?: string;\r\n  subject: string;\r\n  text: string;\r\n  html: string;\r\n  [key: string]: unknown;\r\n}\r\n\r\ninterface ProviderOptions {\r\n  apiKey: string;\r\n}\r\n\r\nexport default {\r\n  init(providerOptions: ProviderOptions, settings: Settings) {\r\n    sendgrid.setApiKey(providerOptions.apiKey);\r\n\r\n    return {\r\n      send(options: SendOptions): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n          const { from, to, cc, bcc, replyTo, subject, text, html, ...rest } = options;\r\n\r\n          const msg: MailDataRequired = {\r\n            from: from || settings.defaultFrom,\r\n            to,\r\n            cc,\r\n            bcc,\r\n            replyTo: replyTo || settings.defaultReplyTo,\r\n            subject,\r\n            text,\r\n            html,\r\n            ...rest,\r\n          };\r\n\r\n          sendgrid.send(msg, false, (err) => {\r\n            if (err) {\r\n              reject(err);\r\n            } else {\r\n              resolve();\r\n            }\r\n          });\r\n        });\r\n      },\r\n    };\r\n  },\r\n};\r\n"],"names":["sendgrid"],"mappings":";;;;AAuBA,MAAe,QAAA;AAAA,EACb,KAAK,iBAAkC,UAAoB;AAChDA,8BAAA,UAAU,gBAAgB,MAAM;AAElC,WAAA;AAAA,MACL,KAAK,SAAqC;AACxC,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAChC,gBAAA,EAAE,MAAM,IAAI,IAAI,KAAK,SAAS,SAAS,MAAM,MAAM,GAAG,KAAS,IAAA;AAErE,gBAAM,MAAwB;AAAA,YAC5B,MAAM,QAAQ,SAAS;AAAA,YACvB;AAAA,YACA;AAAA,YACA;AAAA,YACA,SAAS,WAAW,SAAS;AAAA,YAC7B;AAAA,YACA;AAAA,YACA;AAAA,YACA,GAAG;AAAA,UACL;AAEAA,4BAAAA,QAAS,KAAK,KAAK,OAAO,CAAC,QAAQ;AACjC,gBAAI,KAAK;AACP,qBAAO,GAAG;AAAA,YAAA,OACL;AACG,sBAAA;AAAA,YAAA;AAAA,UACV,CACD;AAAA,QAAA,CACF;AAAA,MAAA;AAAA,IAEL;AAAA,EAAA;AAEJ;;"}